
Byggern2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c6  00800100  00002e30  00002ec4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e30  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  008001c6  008001c6  00002f8a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002fe8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003a0  00000000  00000000  00003024  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004e32  00000000  00000000  000033c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001979  00000000  00000000  000081f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002074  00000000  00000000  00009b6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000964  00000000  00000000  0000bbe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ff4  00000000  00000000  0000c548  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000249c  00000000  00000000  0000d53c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000330  00000000  00000000  0000f9d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 23 06 	jmp	0xc46	; 0xc46 <__ctors_end>
       4:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__vector_1>
       8:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
       c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      10:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      14:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      18:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      1c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      20:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      24:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      28:	0c 94 8a 10 	jmp	0x2114	; 0x2114 <__vector_10>
      2c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      30:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      34:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      38:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      3c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      40:	0c 94 fd 0f 	jmp	0x1ffa	; 0x1ffa <__vector_16>
      44:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      48:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      4c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      50:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      54:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      58:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      5c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      60:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      64:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      68:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      6c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	18 24       	eor	r1, r8
     152:	42 99       	sbic	0x08, 2	; 8
     154:	24 42       	sbci	r18, 0x24	; 36
     156:	81 00       	.word	0x0081	; ????
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	81 42       	sbci	r24, 0x21	; 33
     162:	24 99       	sbic	0x04, 4	; 4
     164:	42 24       	eor	r4, r2
     166:	18 00       	.word	0x0018	; ????
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	ff 3e       	cpi	r31, 0xEF	; 239
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	ff 08       	sbc	r15, r15
     182:	3e 00       	.word	0x003e	; ????
     184:	00 00       	nop
     186:	00 00       	nop
     188:	ff 08       	sbc	r15, r15
     18a:	08 3e       	cpi	r16, 0xE8	; 232
     18c:	00 00       	nop
     18e:	00 00       	nop
     190:	ff 08       	sbc	r15, r15
     192:	08 08       	sbc	r0, r8
     194:	3e 00       	.word	0x003e	; ????
     196:	00 00       	nop
     198:	ff 08       	sbc	r15, r15
     19a:	08 08       	sbc	r0, r8
     19c:	08 3e       	cpi	r16, 0xE8	; 232
     19e:	00 00       	nop
     1a0:	ff 08       	sbc	r15, r15
     1a2:	08 08       	sbc	r0, r8
     1a4:	08 08       	sbc	r0, r8
     1a6:	3e 00       	.word	0x003e	; ????
     1a8:	ff 08       	sbc	r15, r15
     1aa:	08 08       	sbc	r0, r8
     1ac:	08 08       	sbc	r0, r8
     1ae:	08 3e       	cpi	r16, 0xE8	; 232
	...
     1b8:	3c 7e       	andi	r19, 0xEC	; 236
     1ba:	ff ff       	.word	0xffff	; ????
     1bc:	ff ff       	.word	0xffff	; ????
     1be:	7e 3c       	cpi	r23, 0xCE	; 206
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	3e ff       	.word	0xff3e	; ????
     1c8:	00 00       	nop
     1ca:	00 00       	nop
     1cc:	00 3e       	cpi	r16, 0xE0	; 224
     1ce:	08 ff       	.word	0xff08	; ????
     1d0:	00 00       	nop
     1d2:	00 00       	nop
     1d4:	3e 08       	sbc	r3, r14
     1d6:	08 ff       	.word	0xff08	; ????
     1d8:	00 00       	nop
     1da:	00 3e       	cpi	r16, 0xE0	; 224
     1dc:	08 08       	sbc	r0, r8
     1de:	08 ff       	.word	0xff08	; ????
     1e0:	00 00       	nop
     1e2:	3e 08       	sbc	r3, r14
     1e4:	08 08       	sbc	r0, r8
     1e6:	08 ff       	.word	0xff08	; ????
     1e8:	00 3e       	cpi	r16, 0xE0	; 224
     1ea:	08 08       	sbc	r0, r8
     1ec:	08 08       	sbc	r0, r8
     1ee:	08 ff       	.word	0xff08	; ????
     1f0:	3e 08       	sbc	r3, r14
     1f2:	08 08       	sbc	r0, r8
     1f4:	08 08       	sbc	r0, r8
     1f6:	08 ff       	.word	0xff08	; ????
	...
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
	...
     2a4:	03 00       	.word	0x0003	; ????
     2a6:	00 00       	nop
     2a8:	00 00       	nop
     2aa:	00 00       	nop
     2ac:	f8 00       	.word	0x00f8	; ????
     2ae:	00 00       	nop
     2b0:	00 00       	nop
     2b2:	00 00       	nop
     2b4:	04 00       	.word	0x0004	; ????
     2b6:	00 00       	nop
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	00 00       	nop
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	00 c4       	rjmp	.+2048   	; 0xac2 <table+0xac>
     2c2:	00 fd       	sbrc	r16, 0
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <font4>:
     368:	00 00 00 00 00 5c 00 00 0c 00 0c 00 7c 28 7c 28     .....\......|(|(
     378:	58 dc 68 00 24 10 48 00 28 54 28 40 00 0c 00 00     X.h.$.H.(T(@....
     388:	00 78 84 00 84 78 00 00 54 38 54 00 10 7c 10 00     .x...x..T8T..|..
     398:	80 40 00 00 10 10 10 00 00 40 00 00 60 10 0c 00     .@.......@..`...
     3a8:	38 54 38 00 48 7c 40 00 48 64 58 00 44 54 2c 00     8T8.H|@.HdX.DT,.
     3b8:	1c 10 7c 00 5c 54 24 00 38 54 24 00 64 14 0c 00     ..|.\T$.8T$.d...
     3c8:	68 54 2c 00 48 54 38 00 00 48 00 00 80 48 00 00     hT,.HT8..H...H..
     3d8:	10 28 44 00 28 28 28 00 44 28 10 00 04 54 08 00     .(D.(((.D(...T..
     3e8:	38 44 5c 00 78 14 78 00 7c 54 28 00 38 44 28 00     8D\.x.x.|T(.8D(.
     3f8:	7c 44 38 00 7c 54 44 00 7c 14 04 00 38 44 74 00     |D8.|TD.|...8Dt.
     408:	7c 10 7c 00 44 7c 44 00 20 40 3c 00 7c 10 6c 00     |.|.D|D. @<.|.l.
     418:	7c 40 40 00 7c 18 7c 00 78 10 3c 00 38 44 38 00     |@@.|.|.x.<.8D8.
     428:	7c 14 08 00 38 44 b8 00 7c 14 68 00 48 54 24 00     |...8D..|.h.HT$.
     438:	04 7c 04 00 7c 40 7c 00 3c 60 3c 00 7c 30 7c 00     .|..|@|.<`<.|0|.
     448:	6c 10 6c 00 0c 70 0c 00 64 54 4c 00 00 7c 44 00     l.l..p..dTL..|D.
     458:	0c 10 60 00 44 7c 00 00 08 04 08 00 80 80 80 00     ..`.D|..........
     468:	00 04 08 00 30 48 78 00 7c 48 30 00 30 48 48 00     ....0Hx.|H0.0HH.
     478:	30 48 7c 00 30 68 50 00 10 78 14 00 90 a8 78 00     0H|.0hP..x....x.
     488:	7c 08 70 00 50 74 40 00 80 80 74 00 7c 10 68 00     |.p.Pt@...t.|.h.
     498:	44 7c 40 00 78 10 78 00 78 08 70 00 30 48 30 00     D|@.x.x.x.p.0H0.
     4a8:	f8 28 10 00 30 48 f8 00 78 10 08 00 50 58 28 00     .(..0H..x...PX(.
     4b8:	08 3c 48 00 38 40 78 00 38 40 38 00 78 20 78 00     .<H.8@x.8@8.x x.
     4c8:	48 30 48 00 98 a0 78 00 48 68 58 00 10 78 84 00     H0H...x.HhX..x..
     4d8:	00 7c 00 00 84 78 10 00 08 04 08 04                 .|...x......

000004e4 <font6>:
	...
     4ec:	5f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14 00     _...............
     4fc:	24 2a 7f 2a 12 00 23 13 08 64 62 00 36 49 55 22     $*.*..#..db.6IU"
     50c:	50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00 41     P........."A...A
     51c:	22 1c 00 00 08 2a 1c 2a 08 00 08 08 3e 08 08 00     "....*.*....>...
     52c:	00 50 30 00 00 00 08 08 08 08 08 00 00 60 60 00     .P0..........``.
     53c:	00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00 42     .. .....>QIE>..B
     54c:	7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31 00     .@..BaQIF.!AEK1.
     55c:	18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49 49     ......'EEE9.<JII
     56c:	30 00 01 71 09 05 03 00 36 49 49 49 36 00 06 49     0..q....6III6..I
     57c:	49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00 00     I)...66....V6...
     58c:	08 1c 2a 08 08 00 14 14 14 14 14 00 08 08 2a 1c     ..*...........*.
     59c:	08 00 02 01 51 09 06 00 32 49 79 41 3e 00 7e 11     ....Q...2IyA>.~.
     5ac:	11 11 7e 00 7f 49 49 49 36 00 3e 41 41 41 22 00     ..~..III6.>AAA".
     5bc:	7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09 01     .AA"...IIIA.....
     5cc:	01 00 3e 41 41 51 32 00 7f 08 08 08 7f 00 00 41     ..>AAQ2........A
     5dc:	7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41 00     .A.. @A?....."A.
     5ec:	7f 40 40 40 40 00 7f 02 04 02 7f 00 7f 04 08 10     .@@@@...........
     5fc:	7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e 41     ..>AAA>.......>A
     60c:	51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31 00     Q!^....)F.FIII1.
     61c:	01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40 20     ......?@@@?.. @ 
     62c:	1f 00 7f 20 18 20 7f 00 63 14 08 14 63 00 03 04     ... . ..c...c...
     63c:	78 04 03 00 61 51 49 45 43 00 00 00 7f 41 41 00     x...aQIEC....AA.
     64c:	02 04 08 10 20 00 41 41 7f 00 00 00 04 02 01 02     .... .AA........
     65c:	04 00 40 40 40 40 40 00 00 01 02 04 00 00 20 54     ..@@@@@....... T
     66c:	54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20 00     TTx..HDD8.8DDD .
     67c:	38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09 01     8DDH..8TTT...~..
     68c:	02 00 08 14 54 54 3c 00 7f 08 04 04 78 00 00 44     ....TT<.....x..D
     69c:	7d 40 00 00 20 40 44 3d 00 00 00 7f 10 28 44 00     }@.. @D=.....(D.
     6ac:	00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04 04     .A.@..|...x.|...
     6bc:	78 00 38 44 44 44 38 00 7c 14 14 14 08 00 08 14     x.8DDD8.|.......
     6cc:	14 18 7c 00 7c 08 04 04 08 00 48 54 54 54 20 00     ..|.|.....HTTT .
     6dc:	04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40 20     .?D@ .<@@ |.. @ 
     6ec:	1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 0c 50     ..<@0@<.D(.(D..P
     6fc:	50 50 3c 00 44 64 54 4c 44 00 00 08 36 41 00 00     PP<.DdTLD...6A..
     70c:	00 00 7f 00 00 00 00 41 36 08 00 00 02 01 03 02     .......A6.......
     71c:	01 00                                               ..

0000071e <font8>:
	...
     726:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     736:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     746:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     756:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     766:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     776:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     786:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     796:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     7a6:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     7b6:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     7c6:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     7d6:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     7e6:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     7f6:	00 a0 ec 6c 00 00 00 00 18 24 42 99 24 42 81 00     ...l.....$B.$B..
     806:	14 14 14 14 14 14 00 00 81 42 24 99 42 24 18 00     .........B$.B$..
     816:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     826:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     836:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     846:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     856:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     866:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     876:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     886:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     896:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     8a6:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     8b6:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     8c6:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     8d6:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     8e6:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     8f6:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     906:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     916:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     926:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     936:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     946:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     956:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     966:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     976:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     986:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     996:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     9a6:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     9b6:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     9c6:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     9d6:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     9e6:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     9f6:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     a06:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

00000a16 <table>:
     a16:	3c 0c 3b 0c 33 0c 2b 0c 20 0c 16 0c 0c 0c 0b 0c     <.;.3.+. .......
     a26:	0a 0c 09 0c ff 0b f5 0b e8 0b dc 0b d0 0b cf 0b     ................
     a36:	ce 0b c3 0b b7 0b b6 0b aa 0b 9a 0b 99 0b 98 0b     ................
     a46:	97 0b 90 0b 8b 0b 8a 0b 89 0b 88 0b 87 0b 86 0b     ................
     a56:	7b 0b 7a 0b 71 0b 6a 0b 69 0b 68 0b 67 0b 66 0b     {.z.q.j.i.h.g.f.
     a66:	65 0b 64 0b 59 0b 50 0b 4f 0b 4e 0b 4d 0b 4c 0b     e.d.Y.P.O.N.M.L.
     a76:	4b 0b 4a 0b 41 0b 3a 0b 39 0b 38 0b 37 0b 36 0b     K.J.A.:.9.8.7.6.
     a86:	35 0b 34 0b 2d 0b 26 0b 25 0b 24 0b 23 0b 22 0b     5.4.-.&.%.$.#.".
     a96:	21 0b 20 0b 14 0b 13 0b 06 0b f7 0a f6 0a f5 0a     !. .............
     aa6:	eb 0a ea 0a e9 0a e8 0a e7 0a e6 0a e5 0a e4 0a     ................
     ab6:	e3 0a d9 0a d8 0a ca 0a c9 0a c8 0a c7 0a c6 0a     ................

00000ac6 <gameover_8>:
	...

00000ac7 <gameover_7>:
	...

00000ac8 <gameover_6>:
	...

00000ac9 <gameover_5>:
	...

00000aca <gameover_4>:
     aca:	53 45 43 4f 4e 44 53 20 55 53 45 44 3a 00           SECONDS USED:.

00000ad8 <gameover_3>:
	...

00000ad9 <gameover_2>:
     ad9:	47 41 4d 45 20 4f 56 45 52 00                       GAME OVER.

00000ae3 <gameover_1>:
	...

00000ae4 <animation_8>:
	...

00000ae5 <animation_7>:
	...

00000ae6 <animation_6>:
	...

00000ae7 <animation_5>:
	...

00000ae8 <animation_4>:
	...

00000ae9 <animation_3>:
	...

00000aea <animation_2>:
	...

00000aeb <animation_1>:
     aeb:	41 4e 49 4d 41 54 49 4f 4e 00                       ANIMATION.

00000af5 <calibrate_8>:
	...

00000af6 <calibrate_7>:
	...

00000af7 <calibrate_6>:
     af7:	54 48 45 20 43 4f 4e 54 52 4f 4c 4c 45 52 00        THE CONTROLLER.

00000b06 <calibrate_5>:
     b06:	44 4f 20 4e 4f 54 20 54 4f 55 43 48 00              DO NOT TOUCH.

00000b13 <calibrate_4>:
	...

00000b14 <calibrate_3>:
     b14:	43 41 4c 49 42 52 41 54 49 4e 47 00                 CALIBRATING.

00000b20 <calibrate_2>:
	...

00000b21 <calibrate_1>:
	...

00000b22 <slider_8>:
	...

00000b23 <slider_7>:
	...

00000b24 <slider_6>:
	...

00000b25 <slider_5>:
	...

00000b26 <slider_4>:
     b26:	43 48 4f 53 45 4e 00                                CHOSEN.

00000b2d <slider_3>:
     b2d:	53 4c 49 44 45 52 00                                SLIDER.

00000b34 <slider_2>:
	...

00000b35 <slider_1>:
	...

00000b36 <joystick_8>:
	...

00000b37 <joystick_7>:
	...

00000b38 <joystick_6>:
	...

00000b39 <joystick_5>:
	...

00000b3a <joystick_4>:
     b3a:	43 48 4f 53 45 4e 00                                CHOSEN.

00000b41 <joystick_3>:
     b41:	4a 4f 59 53 54 49 43 4b 00                          JOYSTICK.

00000b4a <joystick_2>:
	...

00000b4b <joystick_1>:
	...

00000b4c <controllerP_8>:
	...

00000b4d <controllerP_7>:
	...

00000b4e <controllerP_6>:
	...

00000b4f <controllerP_5>:
	...

00000b50 <controllerP_4>:
     b50:	3e 53 4c 49 44 45 52 3c 00                          >SLIDER<.

00000b59 <controllerP_3>:
     b59:	3e 4a 4f 59 53 54 49 43 4b 3c 00                    >JOYSTICK<.

00000b64 <controllerP_2>:
	...

00000b65 <controllerP_1>:
	...

00000b66 <controller_8>:
	...

00000b67 <controller_7>:
	...

00000b68 <controller_6>:
	...

00000b69 <controller_5>:
	...

00000b6a <controller_4>:
     b6a:	53 4c 49 44 45 52 00                                SLIDER.

00000b71 <controller_3>:
     b71:	4a 4f 59 53 54 49 43 4b 00                          JOYSTICK.

00000b7a <controller_2>:
	...

00000b7b <controller_1>:
     b7b:	43 4f 4e 54 52 4f 4c 4c 45 52 00                    CONTROLLER.

00000b86 <p2_8>:
	...

00000b87 <p2_7>:
	...

00000b88 <p2_6>:
	...

00000b89 <p2_5>:
	...

00000b8a <p2_4>:
	...

00000b8b <p2_3>:
     b8b:	53 4f 4f 4e 00                                      SOON.

00000b90 <p2_2>:
     b90:	43 4f 4d 49 4e 47 00                                COMING.

00000b97 <p2_1>:
	...

00000b98 <p1_8>:
	...

00000b99 <p1_7>:
	...

00000b9a <p1_6>:
     b9a:	42 55 54 54 4f 4e 20 54 4f 20 53 54 41 52 54 00     BUTTON TO START.

00000baa <p1_5>:
     baa:	50 52 45 53 53 20 52 49 47 48 54 00                 PRESS RIGHT.

00000bb6 <p1_4>:
	...

00000bb7 <p1_3>:
     bb7:	4f 4e 20 53 4f 4c 45 4e 4f 49 44 00                 ON SOLENOID.

00000bc3 <p1_2>:
     bc3:	50 4c 41 43 45 20 42 41 4c 4c 00                    PLACE BALL.

00000bce <p1_1>:
	...

00000bcf <mainP_8>:
	...

00000bd0 <mainP_7>:
     bd0:	3e 41 4e 49 4d 41 54 49 4f 4e 3c 00                 >ANIMATION<.

00000bdc <mainP_6>:
     bdc:	3e 43 41 4c 49 42 52 41 54 45 3c 00                 >CALIBRATE<.

00000be8 <mainP_5>:
     be8:	3e 43 4f 4e 54 52 4f 4c 4c 45 52 3c 00              >CONTROLLER<.

00000bf5 <mainP_4>:
     bf5:	3e 32 50 4c 41 59 45 52 3c 00                       >2PLAYER<.

00000bff <mainP_3>:
     bff:	3e 31 50 4c 41 59 45 52 3c 00                       >1PLAYER<.

00000c09 <mainP_2>:
	...

00000c0a <mainP_1>:
	...

00000c0b <main_8>:
	...

00000c0c <main_7>:
     c0c:	41 4e 49 4d 41 54 49 4f 4e 00                       ANIMATION.

00000c16 <main_6>:
     c16:	43 41 4c 49 42 52 41 54 45 00                       CALIBRATE.

00000c20 <main_5>:
     c20:	43 4f 4e 54 52 4f 4c 4c 45 52 00                    CONTROLLER.

00000c2b <main_4>:
     c2b:	32 50 4c 41 59 45 52 00                             2PLAYER.

00000c33 <main_3>:
     c33:	31 50 4c 41 59 45 52 00                             1PLAYER.

00000c3b <main_2>:
	...

00000c3c <main_1>:
     c3c:	50 49 4e 47 50 4f 4e 47 00 00                       PINGPONG..

00000c46 <__ctors_end>:
     c46:	11 24       	eor	r1, r1
     c48:	1f be       	out	0x3f, r1	; 63
     c4a:	cf ef       	ldi	r28, 0xFF	; 255
     c4c:	d4 e0       	ldi	r29, 0x04	; 4
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	cd bf       	out	0x3d, r28	; 61

00000c52 <__do_copy_data>:
     c52:	11 e0       	ldi	r17, 0x01	; 1
     c54:	a0 e0       	ldi	r26, 0x00	; 0
     c56:	b1 e0       	ldi	r27, 0x01	; 1
     c58:	e0 e3       	ldi	r30, 0x30	; 48
     c5a:	fe e2       	ldi	r31, 0x2E	; 46
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <__do_copy_data+0x10>
     c5e:	05 90       	lpm	r0, Z+
     c60:	0d 92       	st	X+, r0
     c62:	a6 3c       	cpi	r26, 0xC6	; 198
     c64:	b1 07       	cpc	r27, r17
     c66:	d9 f7       	brne	.-10     	; 0xc5e <__do_copy_data+0xc>

00000c68 <__do_clear_bss>:
     c68:	21 e0       	ldi	r18, 0x01	; 1
     c6a:	a6 ec       	ldi	r26, 0xC6	; 198
     c6c:	b1 e0       	ldi	r27, 0x01	; 1
     c6e:	01 c0       	rjmp	.+2      	; 0xc72 <.do_clear_bss_start>

00000c70 <.do_clear_bss_loop>:
     c70:	1d 92       	st	X+, r1

00000c72 <.do_clear_bss_start>:
     c72:	a4 3e       	cpi	r26, 0xE4	; 228
     c74:	b2 07       	cpc	r27, r18
     c76:	e1 f7       	brne	.-8      	; 0xc70 <.do_clear_bss_loop>
     c78:	0e 94 45 11 	call	0x228a	; 0x228a <main>
     c7c:	0c 94 16 17 	jmp	0x2e2c	; 0x2e2c <_exit>

00000c80 <__bad_interrupt>:
     c80:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000c84 <clock_init>:
     c84:	8c 9a       	sbi	0x11, 4	; 17
     c86:	f8 94       	cli
     c88:	eb e8       	ldi	r30, 0x8B	; 139
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	80 81       	ld	r24, Z
     c8e:	80 64       	ori	r24, 0x40	; 64
     c90:	80 83       	st	Z, r24
     c92:	ea e8       	ldi	r30, 0x8A	; 138
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	81 60       	ori	r24, 0x01	; 1
     c9a:	80 83       	st	Z, r24
     c9c:	80 81       	ld	r24, Z
     c9e:	88 60       	ori	r24, 0x08	; 8
     ca0:	80 83       	st	Z, r24
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     caa:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     cae:	78 94       	sei
     cb0:	08 95       	ret

00000cb2 <adc_init>:
     cb2:	0e 94 42 06 	call	0xc84	; 0xc84 <clock_init>
     cb6:	08 95       	ret

00000cb8 <adc_read>:
     cb8:	cf 93       	push	r28
     cba:	c8 2f       	mov	r28, r24
     cbc:	0e 94 cf 10 	call	0x219e	; 0x219e <xmem_init>
     cc0:	60 e0       	ldi	r22, 0x00	; 0
     cc2:	74 e0       	ldi	r23, 0x04	; 4
     cc4:	8c 2f       	mov	r24, r28
     cc6:	80 68       	ori	r24, 0x80	; 128
     cc8:	0e 94 d6 10 	call	0x21ac	; 0x21ac <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ccc:	80 e1       	ldi	r24, 0x10	; 16
     cce:	8a 95       	dec	r24
     cd0:	f1 f7       	brne	.-4      	; 0xcce <adc_read+0x16>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <adc_read+0x1c>
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	94 e0       	ldi	r25, 0x04	; 4
     cd8:	0e 94 da 10 	call	0x21b4	; 0x21b4 <xmem_read>
     cdc:	90 e1       	ldi	r25, 0x10	; 16
     cde:	9a 95       	dec	r25
     ce0:	f1 f7       	brne	.-4      	; 0xcde <adc_read+0x26>
     ce2:	00 c0       	rjmp	.+0      	; 0xce4 <adc_read+0x2c>
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	cf 91       	pop	r28
     ce8:	08 95       	ret

00000cea <can_init>:
     cea:	0e 94 27 11 	call	0x224e	; 0x224e <mcp_init>
     cee:	61 e0       	ldi	r22, 0x01	; 1
     cf0:	88 e2       	ldi	r24, 0x28	; 40
     cf2:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     cf6:	65 eb       	ldi	r22, 0xB5	; 181
     cf8:	89 e2       	ldi	r24, 0x29	; 41
     cfa:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     cfe:	63 e4       	ldi	r22, 0x43	; 67
     d00:	8a e2       	ldi	r24, 0x2A	; 42
     d02:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	8f e0       	ldi	r24, 0x0F	; 15
     d0a:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d0e:	f8 94       	cli
     d10:	85 b7       	in	r24, 0x35	; 53
     d12:	82 60       	ori	r24, 0x02	; 2
     d14:	85 bf       	out	0x35, r24	; 53
     d16:	85 b7       	in	r24, 0x35	; 53
     d18:	8e 7f       	andi	r24, 0xFE	; 254
     d1a:	85 bf       	out	0x35, r24	; 53
     d1c:	8b b7       	in	r24, 0x3b	; 59
     d1e:	80 64       	ori	r24, 0x40	; 64
     d20:	8b bf       	out	0x3b, r24	; 59
     d22:	78 94       	sei
     d24:	61 e0       	ldi	r22, 0x01	; 1
     d26:	8b e2       	ldi	r24, 0x2B	; 43
     d28:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d2c:	08 95       	ret

00000d2e <can_send_message>:
     d2e:	ff 92       	push	r15
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	ec 01       	movw	r28, r24
     d3a:	08 81       	ld	r16, Y
     d3c:	19 81       	ldd	r17, Y+1	; 0x01
     d3e:	b8 01       	movw	r22, r16
     d40:	76 95       	lsr	r23
     d42:	67 95       	ror	r22
     d44:	76 95       	lsr	r23
     d46:	67 95       	ror	r22
     d48:	76 95       	lsr	r23
     d4a:	67 95       	ror	r22
     d4c:	81 e3       	ldi	r24, 0x31	; 49
     d4e:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d52:	60 2f       	mov	r22, r16
     d54:	62 95       	swap	r22
     d56:	66 0f       	add	r22, r22
     d58:	60 7e       	andi	r22, 0xE0	; 224
     d5a:	82 e3       	ldi	r24, 0x32	; 50
     d5c:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d60:	fa 80       	ldd	r15, Y+2	; 0x02
     d62:	6f 2d       	mov	r22, r15
     d64:	6f 70       	andi	r22, 0x0F	; 15
     d66:	85 e3       	ldi	r24, 0x35	; 53
     d68:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d6c:	ff 20       	and	r15, r15
     d6e:	79 f0       	breq	.+30     	; 0xd8e <can_send_message+0x60>
     d70:	8e 01       	movw	r16, r28
     d72:	0d 5f       	subi	r16, 0xFD	; 253
     d74:	1f 4f       	sbci	r17, 0xFF	; 255
     d76:	d6 e3       	ldi	r29, 0x36	; 54
     d78:	df 0d       	add	r29, r15
     d7a:	c6 e3       	ldi	r28, 0x36	; 54
     d7c:	f8 01       	movw	r30, r16
     d7e:	61 91       	ld	r22, Z+
     d80:	8f 01       	movw	r16, r30
     d82:	8c 2f       	mov	r24, r28
     d84:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <mcp_write>
     d88:	cf 5f       	subi	r28, 0xFF	; 255
     d8a:	cd 13       	cpse	r28, r29
     d8c:	f7 cf       	rjmp	.-18     	; 0xd7c <can_send_message+0x4e>
     d8e:	81 e8       	ldi	r24, 0x81	; 129
     d90:	0e 94 fe 10 	call	0x21fc	; 0x21fc <mcp_req_to_send>
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	ff 90       	pop	r15
     d9e:	08 95       	ret

00000da0 <__vector_1>:
     da0:	1f 92       	push	r1
     da2:	0f 92       	push	r0
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	0f 92       	push	r0
     da8:	11 24       	eor	r1, r1
     daa:	8f 93       	push	r24
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <__data_end>
     db2:	8f 91       	pop	r24
     db4:	0f 90       	pop	r0
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	0f 90       	pop	r0
     dba:	1f 90       	pop	r1
     dbc:	18 95       	reti

00000dbe <can_clearIfInterrupted>:
     dbe:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <__data_end>
     dc2:	81 30       	cpi	r24, 0x01	; 1
     dc4:	51 f4       	brne	.+20     	; 0xdda <can_clearIfInterrupted+0x1c>
     dc6:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <__data_end>
     dca:	40 e0       	ldi	r20, 0x00	; 0
     dcc:	61 e0       	ldi	r22, 0x01	; 1
     dce:	8c e2       	ldi	r24, 0x2C	; 44
     dd0:	0e 94 03 11 	call	0x2206	; 0x2206 <mcp_bit_modify>
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	08 95       	ret
     dda:	80 e0       	ldi	r24, 0x00	; 0
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	08 95       	ret

00000de0 <joystick_calibrate>:
     de0:	cf 92       	push	r12
     de2:	df 92       	push	r13
     de4:	ef 92       	push	r14
     de6:	ff 92       	push	r15
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	cf 93       	push	r28
     dee:	df 93       	push	r29
     df0:	cd b7       	in	r28, 0x3d	; 61
     df2:	de b7       	in	r29, 0x3e	; 62
     df4:	c0 59       	subi	r28, 0x90	; 144
     df6:	d1 40       	sbci	r29, 0x01	; 1
     df8:	0f b6       	in	r0, 0x3f	; 63
     dfa:	f8 94       	cli
     dfc:	de bf       	out	0x3e, r29	; 62
     dfe:	0f be       	out	0x3f, r0	; 63
     e00:	cd bf       	out	0x3d, r28	; 61
     e02:	8e 01       	movw	r16, r28
     e04:	07 53       	subi	r16, 0x37	; 55
     e06:	1f 4f       	sbci	r17, 0xFF	; 255
     e08:	ce 01       	movw	r24, r28
     e0a:	01 96       	adiw	r24, 0x01	; 1
     e0c:	7c 01       	movw	r14, r24
     e0e:	6e 01       	movw	r12, r28
     e10:	9f e6       	ldi	r25, 0x6F	; 111
     e12:	c9 1a       	sub	r12, r25
     e14:	9e ef       	ldi	r25, 0xFE	; 254
     e16:	d9 0a       	sbc	r13, r25
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e20:	f8 01       	movw	r30, r16
     e22:	81 93       	st	Z+, r24
     e24:	91 93       	st	Z+, r25
     e26:	8f 01       	movw	r16, r30
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e30:	f7 01       	movw	r30, r14
     e32:	81 93       	st	Z+, r24
     e34:	91 93       	st	Z+, r25
     e36:	7f 01       	movw	r14, r30
     e38:	0c 15       	cp	r16, r12
     e3a:	1d 05       	cpc	r17, r13
     e3c:	69 f7       	brne	.-38     	; 0xe18 <joystick_calibrate+0x38>
     e3e:	64 e6       	ldi	r22, 0x64	; 100
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	ce 01       	movw	r24, r28
     e44:	87 53       	subi	r24, 0x37	; 55
     e46:	9f 4f       	sbci	r25, 0xFF	; 255
     e48:	0e 94 88 11 	call	0x2310	; 0x2310 <util_median>
     e4c:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <x_offset>
     e50:	64 e6       	ldi	r22, 0x64	; 100
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	ce 01       	movw	r24, r28
     e56:	01 96       	adiw	r24, 0x01	; 1
     e58:	0e 94 88 11 	call	0x2310	; 0x2310 <util_median>
     e5c:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <y_offset>
     e60:	c0 57       	subi	r28, 0x70	; 112
     e62:	de 4f       	sbci	r29, 0xFE	; 254
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	cd bf       	out	0x3d, r28	; 61
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	1f 91       	pop	r17
     e74:	0f 91       	pop	r16
     e76:	ff 90       	pop	r15
     e78:	ef 90       	pop	r14
     e7a:	df 90       	pop	r13
     e7c:	cf 90       	pop	r12
     e7e:	08 95       	ret

00000e80 <joystick_getPosition>:
     e80:	1f 93       	push	r17
     e82:	cf 93       	push	r28
     e84:	df 93       	push	r29
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e8e:	ec 01       	movw	r28, r24
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e98:	9c 01       	movw	r18, r24
     e9a:	48 2f       	mov	r20, r24
     e9c:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <x_offset>
     ea0:	8c 17       	cp	r24, r28
     ea2:	a8 f4       	brcc	.+42     	; 0xece <joystick_getPosition+0x4e>
     ea4:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <x_offset>
     ea8:	50 91 d3 01 	lds	r21, 0x01D3	; 0x8001d3 <x_offset>
     eac:	dd 27       	eor	r29, r29
     eae:	c8 1b       	sub	r28, r24
     eb0:	d1 09       	sbc	r29, r1
     eb2:	64 e6       	ldi	r22, 0x64	; 100
     eb4:	6c 9f       	mul	r22, r28
     eb6:	c0 01       	movw	r24, r0
     eb8:	6d 9f       	mul	r22, r29
     eba:	90 0d       	add	r25, r0
     ebc:	11 24       	eor	r1, r1
     ebe:	6f ef       	ldi	r22, 0xFF	; 255
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	65 1b       	sub	r22, r21
     ec4:	71 09       	sbc	r23, r1
     ec6:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
     eca:	fb 01       	movw	r30, r22
     ecc:	18 c0       	rjmp	.+48     	; 0xefe <joystick_getPosition+0x7e>
     ece:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <x_offset>
     ed2:	c8 17       	cp	r28, r24
     ed4:	90 f4       	brcc	.+36     	; 0xefa <joystick_getPosition+0x7a>
     ed6:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <x_offset>
     eda:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <x_offset>
     ede:	dd 27       	eor	r29, r29
     ee0:	c8 1b       	sub	r28, r24
     ee2:	d1 09       	sbc	r29, r1
     ee4:	54 e6       	ldi	r21, 0x64	; 100
     ee6:	5c 9f       	mul	r21, r28
     ee8:	c0 01       	movw	r24, r0
     eea:	5d 9f       	mul	r21, r29
     eec:	90 0d       	add	r25, r0
     eee:	11 24       	eor	r1, r1
     ef0:	70 e0       	ldi	r23, 0x00	; 0
     ef2:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
     ef6:	fb 01       	movw	r30, r22
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <joystick_getPosition+0x7e>
     efa:	e0 e0       	ldi	r30, 0x00	; 0
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <y_offset>
     f02:	84 17       	cp	r24, r20
     f04:	a8 f4       	brcc	.+42     	; 0xf30 <joystick_getPosition+0xb0>
     f06:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <y_offset>
     f0a:	40 91 d2 01 	lds	r20, 0x01D2	; 0x8001d2 <y_offset>
     f0e:	33 27       	eor	r19, r19
     f10:	28 1b       	sub	r18, r24
     f12:	31 09       	sbc	r19, r1
     f14:	54 e6       	ldi	r21, 0x64	; 100
     f16:	52 9f       	mul	r21, r18
     f18:	c0 01       	movw	r24, r0
     f1a:	53 9f       	mul	r21, r19
     f1c:	90 0d       	add	r25, r0
     f1e:	11 24       	eor	r1, r1
     f20:	6f ef       	ldi	r22, 0xFF	; 255
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	64 1b       	sub	r22, r20
     f26:	71 09       	sbc	r23, r1
     f28:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
     f2c:	9b 01       	movw	r18, r22
     f2e:	18 c0       	rjmp	.+48     	; 0xf60 <joystick_getPosition+0xe0>
     f30:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <y_offset>
     f34:	48 17       	cp	r20, r24
     f36:	90 f4       	brcc	.+36     	; 0xf5c <joystick_getPosition+0xdc>
     f38:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <y_offset>
     f3c:	60 91 d2 01 	lds	r22, 0x01D2	; 0x8001d2 <y_offset>
     f40:	33 27       	eor	r19, r19
     f42:	28 1b       	sub	r18, r24
     f44:	31 09       	sbc	r19, r1
     f46:	44 e6       	ldi	r20, 0x64	; 100
     f48:	42 9f       	mul	r20, r18
     f4a:	c0 01       	movw	r24, r0
     f4c:	43 9f       	mul	r20, r19
     f4e:	90 0d       	add	r25, r0
     f50:	11 24       	eor	r1, r1
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
     f58:	9b 01       	movw	r18, r22
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <joystick_getPosition+0xe0>
     f5c:	20 e0       	ldi	r18, 0x00	; 0
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	bf 01       	movw	r22, r30
     f62:	c9 01       	movw	r24, r18
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	1f 91       	pop	r17
     f6a:	08 95       	ret

00000f6c <joystick_getDirection>:
     f6c:	0e 94 40 07 	call	0xe80	; 0xe80 <joystick_getPosition>
     f70:	6e 3c       	cpi	r22, 0xCE	; 206
     f72:	ef ef       	ldi	r30, 0xFF	; 255
     f74:	7e 07       	cpc	r23, r30
     f76:	84 f0       	brlt	.+32     	; 0xf98 <joystick_getDirection+0x2c>
     f78:	63 33       	cpi	r22, 0x33	; 51
     f7a:	71 05       	cpc	r23, r1
     f7c:	7c f4       	brge	.+30     	; 0xf9c <joystick_getDirection+0x30>
     f7e:	8e 3c       	cpi	r24, 0xCE	; 206
     f80:	2f ef       	ldi	r18, 0xFF	; 255
     f82:	92 07       	cpc	r25, r18
     f84:	6c f0       	brlt	.+26     	; 0xfa0 <joystick_getDirection+0x34>
     f86:	c3 97       	sbiw	r24, 0x33	; 51
     f88:	6c f4       	brge	.+26     	; 0xfa4 <joystick_getDirection+0x38>
     f8a:	6e 5c       	subi	r22, 0xCE	; 206
     f8c:	7f 4f       	sbci	r23, 0xFF	; 255
     f8e:	65 36       	cpi	r22, 0x65	; 101
     f90:	71 05       	cpc	r23, r1
     f92:	50 f0       	brcs	.+20     	; 0xfa8 <joystick_getDirection+0x3c>
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	08 95       	ret
     f98:	80 e0       	ldi	r24, 0x00	; 0
     f9a:	08 95       	ret
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	08 95       	ret
     fa0:	82 e0       	ldi	r24, 0x02	; 2
     fa2:	08 95       	ret
     fa4:	83 e0       	ldi	r24, 0x03	; 3
     fa6:	08 95       	ret
     fa8:	84 e0       	ldi	r24, 0x04	; 4
     faa:	08 95       	ret

00000fac <joystick_sendPositionButtonCan>:
     fac:	cf 93       	push	r28
     fae:	df 93       	push	r29
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	2b 97       	sbiw	r28, 0x0b	; 11
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	21 e0       	ldi	r18, 0x01	; 1
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	3a 83       	std	Y+2, r19	; 0x02
     fc6:	29 83       	std	Y+1, r18	; 0x01
     fc8:	93 e0       	ldi	r25, 0x03	; 3
     fca:	9b 83       	std	Y+3, r25	; 0x03
     fcc:	6c 83       	std	Y+4, r22	; 0x04
     fce:	8d 83       	std	Y+5, r24	; 0x05
     fd0:	86 b3       	in	r24, 0x16	; 22
     fd2:	81 70       	andi	r24, 0x01	; 1
     fd4:	8e 83       	std	Y+6, r24	; 0x06
     fd6:	ce 01       	movw	r24, r28
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	0e 94 97 06 	call	0xd2e	; 0xd2e <can_send_message>
     fde:	2b 96       	adiw	r28, 0x0b	; 11
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	08 95       	ret

00000ff0 <f_2player>:
		pos_child=0;
		(*curr_menu->function)(main_menu->name);
}

void f_2player(){
	oled_reset();
     ff0:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_p2);
     ff4:	88 e1       	ldi	r24, 0x18	; 24
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
     ffc:	08 95       	ret

00000ffe <f_controller>:
}

void f_controller(){
	oled_reset();
     ffe:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_controller);
    1002:	80 e2       	ldi	r24, 0x20	; 32
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
	oled_print_page_progmem(s_controllerP,header_pages);
    100a:	62 e0       	ldi	r22, 0x02	; 2
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	88 e2       	ldi	r24, 0x28	; 40
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <oled_print_page_progmem>
    1016:	08 95       	ret

00001018 <f_1player>:
	
	return new_submenu;
}


void f_1player(){
    1018:	ef 92       	push	r14
    101a:	ff 92       	push	r15
    101c:	0f 93       	push	r16
    101e:	1f 93       	push	r17
    1020:	cf 93       	push	r28
    1022:	df 93       	push	r29
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62
    1028:	2b 97       	sbiw	r28, 0x0b	; 11
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61

	oled_reset();
    1034:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_p1);
    1038:	80 e1       	ldi	r24, 0x10	; 16
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
	joystick_sendPositionButtonCan(joystick_getPosition());//send motor to mid before start
    1040:	0e 94 40 07 	call	0xe80	; 0xe80 <joystick_getPosition>
    1044:	0e 94 d6 07 	call	0xfac	; 0xfac <joystick_sendPositionButtonCan>
	while(!(PINB & (1<<0))){
    1048:	b0 99       	sbic	0x16, 0	; 22
    104a:	71 c0       	rjmp	.+226    	; 0x112e <f_1player+0x116>
		printf("--");
    104c:	0c e0       	ldi	r16, 0x0C	; 12
    104e:	11 e0       	ldi	r17, 0x01	; 1
    1050:	1f 93       	push	r17
    1052:	0f 93       	push	r16
    1054:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
void f_1player(){

	oled_reset();
	oled_print_screen_progmem(s_p1);
	joystick_sendPositionButtonCan(joystick_getPosition());//send motor to mid before start
	while(!(PINB & (1<<0))){
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	b0 9b       	sbis	0x16, 0	; 22
    105e:	f8 cf       	rjmp	.-16     	; 0x1050 <f_1player+0x38>
    1060:	66 c0       	rjmp	.+204    	; 0x112e <f_1player+0x116>
		uint8_t ctrl = xmem_read(0x800); //read variable from SRAM joystick/slider.
		
		if(!(ctrl ==1 || ctrl ==0)){
			ctrl=0;
		}
		printf("\n controller: %d", ctrl);
    1062:	c7 01       	movw	r24, r14
    1064:	99 27       	eor	r25, r25
    1066:	9f 93       	push	r25
    1068:	8f 93       	push	r24
    106a:	8f e0       	ldi	r24, 0x0F	; 15
    106c:	91 e0       	ldi	r25, 0x01	; 1
    106e:	9f 93       	push	r25
    1070:	8f 93       	push	r24
    1072:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
		timer2_set_ctrl(ctrl);
    1076:	8e 2d       	mov	r24, r14
    1078:	0e 94 87 10 	call	0x210e	; 0x210e <timer2_set_ctrl>
		timer_init();
    107c:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <timer_init>
		timer2_init();
    1080:	0e 94 65 10 	call	0x20ca	; 0x20ca <timer2_init>
		timer2_stop();
    1084:	0e 94 78 10 	call	0x20f0	; 0x20f0 <timer2_stop>
		
				
	switch(ctrl){
    1088:	0f 90       	pop	r0
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	11 23       	and	r17, r17
    1092:	19 f0       	breq	.+6      	; 0x109a <f_1player+0x82>
    1094:	11 30       	cpi	r17, 0x01	; 1
    1096:	99 f0       	breq	.+38     	; 0x10be <f_1player+0xa6>
    1098:	23 c0       	rjmp	.+70     	; 0x10e0 <f_1player+0xc8>
		case JOYSTICK:
			timer2_start();
    109a:	0e 94 80 10 	call	0x2100	; 0x2100 <timer2_start>
			while (!can_clearIfInterrupted()){
				printf("--");
    109e:	0c e0       	ldi	r16, 0x0C	; 12
    10a0:	11 e0       	ldi	r17, 0x01	; 1
		
				
	switch(ctrl){
		case JOYSTICK:
			timer2_start();
			while (!can_clearIfInterrupted()){
    10a2:	06 c0       	rjmp	.+12     	; 0x10b0 <f_1player+0x98>
				printf("--");
    10a4:	1f 93       	push	r17
    10a6:	0f 93       	push	r16
    10a8:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
		
				
	switch(ctrl){
		case JOYSTICK:
			timer2_start();
			while (!can_clearIfInterrupted()){
    10b0:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    10b4:	89 2b       	or	r24, r25
    10b6:	b1 f3       	breq	.-20     	; 0x10a4 <f_1player+0x8c>
				printf("--");
			}
			timer2_stop();
    10b8:	0e 94 78 10 	call	0x20f0	; 0x20f0 <timer2_stop>

		break;
    10bc:	11 c0       	rjmp	.+34     	; 0x10e0 <f_1player+0xc8>
		case SLIDER:
			timer2_start();
    10be:	0e 94 80 10 	call	0x2100	; 0x2100 <timer2_start>
			while (!can_clearIfInterrupted()){	
				printf("--");
    10c2:	0c e0       	ldi	r16, 0x0C	; 12
    10c4:	11 e0       	ldi	r17, 0x01	; 1
			timer2_stop();

		break;
		case SLIDER:
			timer2_start();
			while (!can_clearIfInterrupted()){	
    10c6:	06 c0       	rjmp	.+12     	; 0x10d4 <f_1player+0xbc>
				printf("--");
    10c8:	1f 93       	push	r17
    10ca:	0f 93       	push	r16
    10cc:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
    10d0:	0f 90       	pop	r0
    10d2:	0f 90       	pop	r0
			timer2_stop();

		break;
		case SLIDER:
			timer2_start();
			while (!can_clearIfInterrupted()){	
    10d4:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    10d8:	89 2b       	or	r24, r25
    10da:	b1 f3       	breq	.-20     	; 0x10c8 <f_1player+0xb0>
				printf("--");
			}
			timer2_stop();
    10dc:	0e 94 78 10 	call	0x20f0	; 0x20f0 <timer2_stop>
		break;
	}	
	
		oled_reset();
    10e0:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
		oled_print_screen_progmem(s_gameover);
    10e4:	80 e5       	ldi	r24, 0x50	; 80
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
		
		oled_print_time_used();
    10ec:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <oled_print_time_used>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10f0:	2f ef       	ldi	r18, 0xFF	; 255
    10f2:	83 ed       	ldi	r24, 0xD3	; 211
    10f4:	90 e3       	ldi	r25, 0x30	; 48
    10f6:	21 50       	subi	r18, 0x01	; 1
    10f8:	80 40       	sbci	r24, 0x00	; 0
    10fa:	90 40       	sbci	r25, 0x00	; 0
    10fc:	e1 f7       	brne	.-8      	; 0x10f6 <f_1player+0xde>
    10fe:	00 c0       	rjmp	.+0      	; 0x1100 <f_1player+0xe8>
    1100:	00 00       	nop
		
		_delay_ms(1000);
		
		curr_menu=main_menu;
    1102:	a0 91 d8 01 	lds	r26, 0x01D8	; 0x8001d8 <main_menu>
    1106:	b0 91 d9 01 	lds	r27, 0x01D9	; 0x8001d9 <main_menu+0x1>
    110a:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <curr_menu+0x1>
    110e:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <curr_menu>
		pos_child=0;
    1112:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <pos_child+0x1>
    1116:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <pos_child>
		(*curr_menu->function)(main_menu->name);
    111a:	12 96       	adiw	r26, 0x02	; 2
    111c:	ed 91       	ld	r30, X+
    111e:	fc 91       	ld	r31, X
    1120:	13 97       	sbiw	r26, 0x03	; 3
    1122:	1a 96       	adiw	r26, 0x0a	; 10
    1124:	8d 91       	ld	r24, X+
    1126:	9c 91       	ld	r25, X
    1128:	1b 97       	sbiw	r26, 0x0b	; 11
    112a:	09 95       	icall
}
    112c:	35 c0       	rjmp	.+106    	; 0x1198 <f_1player+0x180>
	joystick_sendPositionButtonCan(joystick_getPosition());//send motor to mid before start
	while(!(PINB & (1<<0))){
		printf("--");
	}
		for(unsigned char i=0; i<5; i++){
			can_clearIfInterrupted();
    112e:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    1132:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    1136:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    113a:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    113e:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
		}
		//several times because of race condition
		
		can_message msg;
		msg.id=1;
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	9a 83       	std	Y+2, r25	; 0x02
    1148:	89 83       	std	Y+1, r24	; 0x01
		msg.length=3;
    114a:	83 e0       	ldi	r24, 0x03	; 3
    114c:	8b 83       	std	Y+3, r24	; 0x03
		msg.data[2]=(char)1;
    114e:	81 e0       	ldi	r24, 0x01	; 1
    1150:	8e 83       	std	Y+6, r24	; 0x06
		can_send_message(&msg); //solenoide hit
    1152:	ce 01       	movw	r24, r28
    1154:	01 96       	adiw	r24, 0x01	; 1
    1156:	0e 94 97 06 	call	0xd2e	; 0xd2e <can_send_message>
		
		uint8_t ctrl = xmem_read(0x800); //read variable from SRAM joystick/slider.
    115a:	80 e0       	ldi	r24, 0x00	; 0
    115c:	98 e0       	ldi	r25, 0x08	; 8
    115e:	0e 94 da 10 	call	0x21b4	; 0x21b4 <xmem_read>
    1162:	7c 01       	movw	r14, r24
    1164:	18 2f       	mov	r17, r24
		
		if(!(ctrl ==1 || ctrl ==0)){
    1166:	82 30       	cpi	r24, 0x02	; 2
    1168:	08 f4       	brcc	.+2      	; 0x116c <f_1player+0x154>
    116a:	7b cf       	rjmp	.-266    	; 0x1062 <f_1player+0x4a>
			ctrl=0;
		}
		printf("\n controller: %d", ctrl);
    116c:	1f 92       	push	r1
    116e:	1f 92       	push	r1
    1170:	8f e0       	ldi	r24, 0x0F	; 15
    1172:	91 e0       	ldi	r25, 0x01	; 1
    1174:	9f 93       	push	r25
    1176:	8f 93       	push	r24
    1178:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
		timer2_set_ctrl(ctrl);
    117c:	80 e0       	ldi	r24, 0x00	; 0
    117e:	0e 94 87 10 	call	0x210e	; 0x210e <timer2_set_ctrl>
		timer_init();
    1182:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <timer_init>
		timer2_init();
    1186:	0e 94 65 10 	call	0x20ca	; 0x20ca <timer2_init>
		timer2_stop();
    118a:	0e 94 78 10 	call	0x20f0	; 0x20f0 <timer2_stop>
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	0f 90       	pop	r0
    1196:	81 cf       	rjmp	.-254    	; 0x109a <f_1player+0x82>
		_delay_ms(1000);
		
		curr_menu=main_menu;
		pos_child=0;
		(*curr_menu->function)(main_menu->name);
}
    1198:	2b 96       	adiw	r28, 0x0b	; 11
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	de bf       	out	0x3e, r29	; 62
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	cd bf       	out	0x3d, r28	; 61
    11a4:	df 91       	pop	r29
    11a6:	cf 91       	pop	r28
    11a8:	1f 91       	pop	r17
    11aa:	0f 91       	pop	r16
    11ac:	ff 90       	pop	r15
    11ae:	ef 90       	pop	r14
    11b0:	08 95       	ret

000011b2 <f_joystick>:
	oled_print_page_progmem(s_controllerP,header_pages);

}

void f_joystick(){
	oled_reset();
    11b2:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_joystick);
    11b6:	80 e3       	ldi	r24, 0x30	; 48
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
	cli();
    11be:	f8 94       	cli
	controller ctrl = JOYSTICK;
	xmem_write(ctrl,0x800); //Lagrer i SRAM
    11c0:	60 e0       	ldi	r22, 0x00	; 0
    11c2:	78 e0       	ldi	r23, 0x08	; 8
    11c4:	80 e0       	ldi	r24, 0x00	; 0
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	0e 94 d6 10 	call	0x21ac	; 0x21ac <xmem_write>
	sei();
    11cc:	78 94       	sei
    11ce:	2f ef       	ldi	r18, 0xFF	; 255
    11d0:	83 ed       	ldi	r24, 0xD3	; 211
    11d2:	90 e3       	ldi	r25, 0x30	; 48
    11d4:	21 50       	subi	r18, 0x01	; 1
    11d6:	80 40       	sbci	r24, 0x00	; 0
    11d8:	90 40       	sbci	r25, 0x00	; 0
    11da:	e1 f7       	brne	.-8      	; 0x11d4 <f_joystick+0x22>
    11dc:	00 c0       	rjmp	.+0      	; 0x11de <f_joystick+0x2c>
    11de:	00 00       	nop
	_delay_ms(1000);
	
	curr_menu=main_menu;
    11e0:	a0 91 d8 01 	lds	r26, 0x01D8	; 0x8001d8 <main_menu>
    11e4:	b0 91 d9 01 	lds	r27, 0x01D9	; 0x8001d9 <main_menu+0x1>
    11e8:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <curr_menu+0x1>
    11ec:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <curr_menu>
	pos_child=0;
    11f0:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <pos_child+0x1>
    11f4:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    11f8:	12 96       	adiw	r26, 0x02	; 2
    11fa:	ed 91       	ld	r30, X+
    11fc:	fc 91       	ld	r31, X
    11fe:	13 97       	sbiw	r26, 0x03	; 3
    1200:	1a 96       	adiw	r26, 0x0a	; 10
    1202:	8d 91       	ld	r24, X+
    1204:	9c 91       	ld	r25, X
    1206:	1b 97       	sbiw	r26, 0x0b	; 11
    1208:	09 95       	icall
    120a:	08 95       	ret

0000120c <f_slider>:
		
	
}
void f_slider(){
	oled_reset();
    120c:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_slider);
    1210:	88 e3       	ldi	r24, 0x38	; 56
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
	cli();
    1218:	f8 94       	cli
	controller ctrl = SLIDER;
	xmem_write(ctrl,0x800); //Lagrer i SRAM
    121a:	60 e0       	ldi	r22, 0x00	; 0
    121c:	78 e0       	ldi	r23, 0x08	; 8
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0e 94 d6 10 	call	0x21ac	; 0x21ac <xmem_write>
	sei();
    1226:	78 94       	sei
    1228:	2f ef       	ldi	r18, 0xFF	; 255
    122a:	83 ed       	ldi	r24, 0xD3	; 211
    122c:	90 e3       	ldi	r25, 0x30	; 48
    122e:	21 50       	subi	r18, 0x01	; 1
    1230:	80 40       	sbci	r24, 0x00	; 0
    1232:	90 40       	sbci	r25, 0x00	; 0
    1234:	e1 f7       	brne	.-8      	; 0x122e <f_slider+0x22>
    1236:	00 c0       	rjmp	.+0      	; 0x1238 <f_slider+0x2c>
    1238:	00 00       	nop
	_delay_ms(1000);
	
	curr_menu=main_menu;
    123a:	a0 91 d8 01 	lds	r26, 0x01D8	; 0x8001d8 <main_menu>
    123e:	b0 91 d9 01 	lds	r27, 0x01D9	; 0x8001d9 <main_menu+0x1>
    1242:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <curr_menu+0x1>
    1246:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <curr_menu>
	pos_child=0;
    124a:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <pos_child+0x1>
    124e:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    1252:	12 96       	adiw	r26, 0x02	; 2
    1254:	ed 91       	ld	r30, X+
    1256:	fc 91       	ld	r31, X
    1258:	13 97       	sbiw	r26, 0x03	; 3
    125a:	1a 96       	adiw	r26, 0x0a	; 10
    125c:	8d 91       	ld	r24, X+
    125e:	9c 91       	ld	r25, X
    1260:	1b 97       	sbiw	r26, 0x0b	; 11
    1262:	09 95       	icall
    1264:	08 95       	ret

00001266 <f_calibrate>:
	
}

void f_calibrate(){
	oled_reset();
    1266:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_calibrate);
    126a:	80 e4       	ldi	r24, 0x40	; 64
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
    1272:	2f ef       	ldi	r18, 0xFF	; 255
    1274:	8d e2       	ldi	r24, 0x2D	; 45
    1276:	92 e2       	ldi	r25, 0x22	; 34
    1278:	21 50       	subi	r18, 0x01	; 1
    127a:	80 40       	sbci	r24, 0x00	; 0
    127c:	90 40       	sbci	r25, 0x00	; 0
    127e:	e1 f7       	brne	.-8      	; 0x1278 <f_calibrate+0x12>
    1280:	00 c0       	rjmp	.+0      	; 0x1282 <f_calibrate+0x1c>
    1282:	00 00       	nop
	
	_delay_ms(700);
	joystick_calibrate();
    1284:	0e 94 f0 06 	call	0xde0	; 0xde0 <joystick_calibrate>
    1288:	2f ef       	ldi	r18, 0xFF	; 255
    128a:	85 ea       	ldi	r24, 0xA5	; 165
    128c:	9e e0       	ldi	r25, 0x0E	; 14
    128e:	21 50       	subi	r18, 0x01	; 1
    1290:	80 40       	sbci	r24, 0x00	; 0
    1292:	90 40       	sbci	r25, 0x00	; 0
    1294:	e1 f7       	brne	.-8      	; 0x128e <f_calibrate+0x28>
    1296:	00 c0       	rjmp	.+0      	; 0x1298 <f_calibrate+0x32>
    1298:	00 00       	nop
	
	_delay_ms(300);
		
	curr_menu=main_menu;
    129a:	a0 91 d8 01 	lds	r26, 0x01D8	; 0x8001d8 <main_menu>
    129e:	b0 91 d9 01 	lds	r27, 0x01D9	; 0x8001d9 <main_menu+0x1>
    12a2:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <curr_menu+0x1>
    12a6:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <curr_menu>
	pos_child=0;
    12aa:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <pos_child+0x1>
    12ae:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    12b2:	12 96       	adiw	r26, 0x02	; 2
    12b4:	ed 91       	ld	r30, X+
    12b6:	fc 91       	ld	r31, X
    12b8:	13 97       	sbiw	r26, 0x03	; 3
    12ba:	1a 96       	adiw	r26, 0x0a	; 10
    12bc:	8d 91       	ld	r24, X+
    12be:	9c 91       	ld	r25, X
    12c0:	1b 97       	sbiw	r26, 0x0b	; 11
    12c2:	09 95       	icall
    12c4:	08 95       	ret

000012c6 <f_animation>:
	
	
}

void f_animation(){
	oled_reset();
    12c6:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_animation);
    12ca:	88 e4       	ldi	r24, 0x48	; 72
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
	oled_animation(4);
    12d2:	84 e0       	ldi	r24, 0x04	; 4
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <oled_animation>
	
	curr_menu=main_menu;
    12da:	a0 91 d8 01 	lds	r26, 0x01D8	; 0x8001d8 <main_menu>
    12de:	b0 91 d9 01 	lds	r27, 0x01D9	; 0x8001d9 <main_menu+0x1>
    12e2:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <curr_menu+0x1>
    12e6:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <curr_menu>
	pos_child=0;
    12ea:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <pos_child+0x1>
    12ee:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    12f2:	12 96       	adiw	r26, 0x02	; 2
    12f4:	ed 91       	ld	r30, X+
    12f6:	fc 91       	ld	r31, X
    12f8:	13 97       	sbiw	r26, 0x03	; 3
    12fa:	1a 96       	adiw	r26, 0x0a	; 10
    12fc:	8d 91       	ld	r24, X+
    12fe:	9c 91       	ld	r25, X
    1300:	1b 97       	sbiw	r26, 0x0b	; 11
    1302:	09 95       	icall
    1304:	08 95       	ret

00001306 <Menu_new_submenu>:
	
	curr_menu = main_menu;
	
}

menu_item* Menu_new_submenu(menu_item* self, char* name, void (*function)(char*), int oledOffset){
    1306:	af 92       	push	r10
    1308:	bf 92       	push	r11
    130a:	cf 92       	push	r12
    130c:	df 92       	push	r13
    130e:	ef 92       	push	r14
    1310:	ff 92       	push	r15
    1312:	0f 93       	push	r16
    1314:	1f 93       	push	r17
    1316:	cf 93       	push	r28
    1318:	df 93       	push	r29
    131a:	8c 01       	movw	r16, r24
    131c:	7b 01       	movw	r14, r22
    131e:	5a 01       	movw	r10, r20
    1320:	69 01       	movw	r12, r18
	menu_item* new_submenu = malloc(sizeof(menu_item));
    1322:	8e e0       	ldi	r24, 0x0E	; 14
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	0e 94 c8 11 	call	0x2390	; 0x2390 <malloc>
    132a:	ec 01       	movw	r28, r24

	new_submenu->parent=self;
    132c:	19 83       	std	Y+1, r17	; 0x01
    132e:	08 83       	st	Y, r16
	new_submenu->children=NULL;
    1330:	1d 82       	std	Y+5, r1	; 0x05
    1332:	1c 82       	std	Y+4, r1	; 0x04
	new_submenu->numOfChildren=0;
    1334:	1f 82       	std	Y+7, r1	; 0x07
    1336:	1e 82       	std	Y+6, r1	; 0x06
	new_submenu->name=name;
    1338:	fb 86       	std	Y+11, r15	; 0x0b
    133a:	ea 86       	std	Y+10, r14	; 0x0a
	new_submenu->nameArrow=oled_arrow(name);
    133c:	c7 01       	movw	r24, r14
    133e:	0e 94 b3 0c 	call	0x1966	; 0x1966 <oled_arrow>
    1342:	9d 87       	std	Y+13, r25	; 0x0d
    1344:	8c 87       	std	Y+12, r24	; 0x0c
	new_submenu->function = function;
    1346:	bb 82       	std	Y+3, r11	; 0x03
    1348:	aa 82       	std	Y+2, r10	; 0x02
	new_submenu->oledOffset=oledOffset;
    134a:	d9 86       	std	Y+9, r13	; 0x09
    134c:	c8 86       	std	Y+8, r12	; 0x08
		
	self->children=realloc(self->children, (self->numOfChildren+1)*sizeof(menu_item*));
    134e:	f8 01       	movw	r30, r16
    1350:	66 81       	ldd	r22, Z+6	; 0x06
    1352:	77 81       	ldd	r23, Z+7	; 0x07
    1354:	6f 5f       	subi	r22, 0xFF	; 255
    1356:	7f 4f       	sbci	r23, 0xFF	; 255
    1358:	66 0f       	add	r22, r22
    135a:	77 1f       	adc	r23, r23
    135c:	84 81       	ldd	r24, Z+4	; 0x04
    135e:	95 81       	ldd	r25, Z+5	; 0x05
    1360:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <realloc>
    1364:	f8 01       	movw	r30, r16
    1366:	95 83       	std	Z+5, r25	; 0x05
    1368:	84 83       	std	Z+4, r24	; 0x04
	self->children[self->numOfChildren]=new_submenu;
    136a:	26 81       	ldd	r18, Z+6	; 0x06
    136c:	37 81       	ldd	r19, Z+7	; 0x07
    136e:	a9 01       	movw	r20, r18
    1370:	44 0f       	add	r20, r20
    1372:	55 1f       	adc	r21, r21
    1374:	fc 01       	movw	r30, r24
    1376:	e4 0f       	add	r30, r20
    1378:	f5 1f       	adc	r31, r21
    137a:	d1 83       	std	Z+1, r29	; 0x01
    137c:	c0 83       	st	Z, r28
	self->numOfChildren++;
    137e:	2f 5f       	subi	r18, 0xFF	; 255
    1380:	3f 4f       	sbci	r19, 0xFF	; 255
    1382:	f8 01       	movw	r30, r16
    1384:	37 83       	std	Z+7, r19	; 0x07
    1386:	26 83       	std	Z+6, r18	; 0x06
	
	return new_submenu;
}
    1388:	ce 01       	movw	r24, r28
    138a:	df 91       	pop	r29
    138c:	cf 91       	pop	r28
    138e:	1f 91       	pop	r17
    1390:	0f 91       	pop	r16
    1392:	ff 90       	pop	r15
    1394:	ef 90       	pop	r14
    1396:	df 90       	pop	r13
    1398:	cf 90       	pop	r12
    139a:	bf 90       	pop	r11
    139c:	af 90       	pop	r10
    139e:	08 95       	ret

000013a0 <menu_init>:
menu_item* main_menu;
static menu_item* curr_menu;
static int header_pages=2;


void menu_init(){
    13a0:	0f 93       	push	r16
    13a2:	1f 93       	push	r17
    13a4:	cf 93       	push	r28
    13a6:	df 93       	push	r29
	
	menu_item* main_menu = malloc(sizeof(menu_item));
    13a8:	8e e0       	ldi	r24, 0x0E	; 14
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0e 94 c8 11 	call	0x2390	; 0x2390 <malloc>
    13b0:	ec 01       	movw	r28, r24
	main_menu->name = "Main Menu";
    13b2:	80 e2       	ldi	r24, 0x20	; 32
    13b4:	91 e0       	ldi	r25, 0x01	; 1
    13b6:	9b 87       	std	Y+11, r25	; 0x0b
    13b8:	8a 87       	std	Y+10, r24	; 0x0a
	main_menu->nameArrow= NULL;
    13ba:	1d 86       	std	Y+13, r1	; 0x0d
    13bc:	1c 86       	std	Y+12, r1	; 0x0c
	main_menu->numOfChildren = 0;
    13be:	1f 82       	std	Y+7, r1	; 0x07
    13c0:	1e 82       	std	Y+6, r1	; 0x06
	main_menu->parent = NULL;
    13c2:	19 82       	std	Y+1, r1	; 0x01
    13c4:	18 82       	st	Y, r1
	main_menu->function = NULL;
    13c6:	1b 82       	std	Y+3, r1	; 0x03
    13c8:	1a 82       	std	Y+2, r1	; 0x02
	main_menu->oledOffset=s_main;
    13ca:	19 86       	std	Y+9, r1	; 0x09
    13cc:	18 86       	std	Y+8, r1	; 0x08
	
	menu_item* player_menu=Menu_new_submenu(main_menu, "1PLAYER", &f_1player, s_p1);
    13ce:	20 e1       	ldi	r18, 0x10	; 16
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	4c e0       	ldi	r20, 0x0C	; 12
    13d4:	58 e0       	ldi	r21, 0x08	; 8
    13d6:	6a e2       	ldi	r22, 0x2A	; 42
    13d8:	71 e0       	ldi	r23, 0x01	; 1
    13da:	ce 01       	movw	r24, r28
    13dc:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "2PLAYER", &f_2player, s_p2);
    13e0:	28 e1       	ldi	r18, 0x18	; 24
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	48 ef       	ldi	r20, 0xF8	; 248
    13e6:	57 e0       	ldi	r21, 0x07	; 7
    13e8:	62 e3       	ldi	r22, 0x32	; 50
    13ea:	71 e0       	ldi	r23, 0x01	; 1
    13ec:	ce 01       	movw	r24, r28
    13ee:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
	menu_item* controller_menu=Menu_new_submenu(main_menu, "CONTROLLER", &f_controller,s_controller);
    13f2:	20 e2       	ldi	r18, 0x20	; 32
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	4f ef       	ldi	r20, 0xFF	; 255
    13f8:	57 e0       	ldi	r21, 0x07	; 7
    13fa:	6a e3       	ldi	r22, 0x3A	; 58
    13fc:	71 e0       	ldi	r23, 0x01	; 1
    13fe:	ce 01       	movw	r24, r28
    1400:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
    1404:	8c 01       	movw	r16, r24
	Menu_new_submenu(controller_menu, "JOYSTICK", &f_joystick,s_joystick);
    1406:	20 e3       	ldi	r18, 0x30	; 48
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	49 ed       	ldi	r20, 0xD9	; 217
    140c:	58 e0       	ldi	r21, 0x08	; 8
    140e:	65 e4       	ldi	r22, 0x45	; 69
    1410:	71 e0       	ldi	r23, 0x01	; 1
    1412:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
	Menu_new_submenu(controller_menu, "SLIDER", &f_slider,s_slider);
    1416:	28 e3       	ldi	r18, 0x38	; 56
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	46 e0       	ldi	r20, 0x06	; 6
    141c:	59 e0       	ldi	r21, 0x09	; 9
    141e:	6e e4       	ldi	r22, 0x4E	; 78
    1420:	71 e0       	ldi	r23, 0x01	; 1
    1422:	c8 01       	movw	r24, r16
    1424:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate,s_calibrate);
    1428:	20 e4       	ldi	r18, 0x40	; 64
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	43 e3       	ldi	r20, 0x33	; 51
    142e:	59 e0       	ldi	r21, 0x09	; 9
    1430:	65 e5       	ldi	r22, 0x55	; 85
    1432:	71 e0       	ldi	r23, 0x01	; 1
    1434:	ce 01       	movw	r24, r28
    1436:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "ANIMATION", &f_animation,s_animation);
    143a:	28 e4       	ldi	r18, 0x48	; 72
    143c:	30 e0       	ldi	r19, 0x00	; 0
    143e:	43 e6       	ldi	r20, 0x63	; 99
    1440:	59 e0       	ldi	r21, 0x09	; 9
    1442:	6f e5       	ldi	r22, 0x5F	; 95
    1444:	71 e0       	ldi	r23, 0x01	; 1
    1446:	ce 01       	movw	r24, r28
    1448:	0e 94 83 09 	call	0x1306	; 0x1306 <Menu_new_submenu>
	

	oled_reset();
    144c:	0e 94 99 0b 	call	0x1732	; 0x1732 <oled_reset>
	oled_print_screen_progmem(s_main);
    1450:	80 e0       	ldi	r24, 0x00	; 0
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <oled_print_screen_progmem>
	oled_print_page_progmem(s_mainP, header_pages);
    1458:	62 e0       	ldi	r22, 0x02	; 2
    145a:	70 e0       	ldi	r23, 0x00	; 0
    145c:	88 e0       	ldi	r24, 0x08	; 8
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <oled_print_page_progmem>
	
	curr_menu = main_menu;
    1464:	d0 93 c8 01 	sts	0x01C8, r29	; 0x8001c8 <curr_menu+0x1>
    1468:	c0 93 c7 01 	sts	0x01C7, r28	; 0x8001c7 <curr_menu>
	
}
    146c:	df 91       	pop	r29
    146e:	cf 91       	pop	r28
    1470:	1f 91       	pop	r17
    1472:	0f 91       	pop	r16
    1474:	08 95       	ret

00001476 <navigate>:
	(*curr_menu->function)(main_menu->name);
	
	
}

void navigate(){
    1476:	cf 93       	push	r28
    1478:	df 93       	push	r29
	
if(joystick_getDirection()!=NEUTRAL){
    147a:	0e 94 b6 07 	call	0xf6c	; 0xf6c <joystick_getDirection>
    147e:	84 30       	cpi	r24, 0x04	; 4
    1480:	09 f4       	brne	.+2      	; 0x1484 <navigate+0xe>
    1482:	97 c0       	rjmp	.+302    	; 0x15b2 <navigate+0x13c>
    1484:	2f ef       	ldi	r18, 0xFF	; 255
    1486:	87 ee       	ldi	r24, 0xE7	; 231
    1488:	93 e0       	ldi	r25, 0x03	; 3
    148a:	21 50       	subi	r18, 0x01	; 1
    148c:	80 40       	sbci	r24, 0x00	; 0
    148e:	90 40       	sbci	r25, 0x00	; 0
    1490:	e1 f7       	brne	.-8      	; 0x148a <navigate+0x14>
    1492:	00 c0       	rjmp	.+0      	; 0x1494 <navigate+0x1e>
    1494:	00 00       	nop
			_delay_ms(80);
		
	switch (joystick_getDirection()){
    1496:	0e 94 b6 07 	call	0xf6c	; 0xf6c <joystick_getDirection>
    149a:	82 30       	cpi	r24, 0x02	; 2
    149c:	09 f4       	brne	.+2      	; 0x14a0 <navigate+0x2a>
    149e:	43 c0       	rjmp	.+134    	; 0x1526 <navigate+0xb0>
    14a0:	83 30       	cpi	r24, 0x03	; 3
    14a2:	09 f0       	breq	.+2      	; 0x14a6 <navigate+0x30>
    14a4:	86 c0       	rjmp	.+268    	; 0x15b2 <navigate+0x13c>
		
		case UP:
		if(pos_child>0){
    14a6:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <pos_child>
    14aa:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <pos_child+0x1>
    14ae:	18 16       	cp	r1, r24
    14b0:	19 06       	cpc	r1, r25
    14b2:	0c f0       	brlt	.+2      	; 0x14b6 <navigate+0x40>
    14b4:	7e c0       	rjmp	.+252    	; 0x15b2 <navigate+0x13c>
			oled_goto_page(pos_child+header_pages);
    14b6:	8e 5f       	subi	r24, 0xFE	; 254
    14b8:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
			oled_clear_page(pos_child+header_pages);
    14bc:	c9 ec       	ldi	r28, 0xC9	; 201
    14be:	d1 e0       	ldi	r29, 0x01	; 1
    14c0:	88 81       	ld	r24, Y
    14c2:	8e 5f       	subi	r24, 0xFE	; 254
    14c4:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <oled_clear_page>
			oled_print_page_progmem(curr_menu->oledOffset,header_pages+pos_child);
    14c8:	60 91 c9 01 	lds	r22, 0x01C9	; 0x8001c9 <pos_child>
    14cc:	70 91 ca 01 	lds	r23, 0x01CA	; 0x8001ca <pos_child+0x1>
    14d0:	6e 5f       	subi	r22, 0xFE	; 254
    14d2:	7f 4f       	sbci	r23, 0xFF	; 255
    14d4:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <curr_menu>
    14d8:	f0 91 c8 01 	lds	r31, 0x01C8	; 0x8001c8 <curr_menu+0x1>
    14dc:	80 85       	ldd	r24, Z+8	; 0x08
    14de:	91 85       	ldd	r25, Z+9	; 0x09
    14e0:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <oled_print_page_progmem>
			
			oled_goto_page(pos_child+header_pages-1);
    14e4:	88 81       	ld	r24, Y
    14e6:	8f 5f       	subi	r24, 0xFF	; 255
    14e8:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
			oled_clear_page(pos_child+header_pages-1);
    14ec:	88 81       	ld	r24, Y
    14ee:	8f 5f       	subi	r24, 0xFF	; 255
    14f0:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <oled_clear_page>
			oled_print_page_progmem((curr_menu->oledOffset)+s_screen,header_pages+pos_child-1);
    14f4:	60 91 c9 01 	lds	r22, 0x01C9	; 0x8001c9 <pos_child>
    14f8:	70 91 ca 01 	lds	r23, 0x01CA	; 0x8001ca <pos_child+0x1>
    14fc:	6f 5f       	subi	r22, 0xFF	; 255
    14fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1500:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <curr_menu>
    1504:	f0 91 c8 01 	lds	r31, 0x01C8	; 0x8001c8 <curr_menu+0x1>
    1508:	80 85       	ldd	r24, Z+8	; 0x08
    150a:	91 85       	ldd	r25, Z+9	; 0x09
    150c:	08 96       	adiw	r24, 0x08	; 8
    150e:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <oled_print_page_progmem>
				
			pos_child -= 1;
    1512:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <pos_child>
    1516:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <pos_child+0x1>
    151a:	01 97       	sbiw	r24, 0x01	; 1
    151c:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <pos_child+0x1>
    1520:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <pos_child>
    1524:	46 c0       	rjmp	.+140    	; 0x15b2 <navigate+0x13c>
		}
		break;
		case DOWN:
		if(pos_child < curr_menu->numOfChildren-1){
    1526:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <pos_child>
    152a:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <pos_child+0x1>
    152e:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <curr_menu>
    1532:	f0 91 c8 01 	lds	r31, 0x01C8	; 0x8001c8 <curr_menu+0x1>
    1536:	26 81       	ldd	r18, Z+6	; 0x06
    1538:	37 81       	ldd	r19, Z+7	; 0x07
    153a:	21 50       	subi	r18, 0x01	; 1
    153c:	31 09       	sbc	r19, r1
    153e:	82 17       	cp	r24, r18
    1540:	93 07       	cpc	r25, r19
    1542:	bc f5       	brge	.+110    	; 0x15b2 <navigate+0x13c>
			oled_goto_page(pos_child+header_pages);
    1544:	8e 5f       	subi	r24, 0xFE	; 254
    1546:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
			oled_clear_page(pos_child+header_pages);
    154a:	c9 ec       	ldi	r28, 0xC9	; 201
    154c:	d1 e0       	ldi	r29, 0x01	; 1
    154e:	88 81       	ld	r24, Y
    1550:	8e 5f       	subi	r24, 0xFE	; 254
    1552:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <oled_clear_page>
			oled_print_page_progmem(curr_menu->oledOffset,header_pages+pos_child);
    1556:	60 91 c9 01 	lds	r22, 0x01C9	; 0x8001c9 <pos_child>
    155a:	70 91 ca 01 	lds	r23, 0x01CA	; 0x8001ca <pos_child+0x1>
    155e:	6e 5f       	subi	r22, 0xFE	; 254
    1560:	7f 4f       	sbci	r23, 0xFF	; 255
    1562:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <curr_menu>
    1566:	f0 91 c8 01 	lds	r31, 0x01C8	; 0x8001c8 <curr_menu+0x1>
    156a:	80 85       	ldd	r24, Z+8	; 0x08
    156c:	91 85       	ldd	r25, Z+9	; 0x09
    156e:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <oled_print_page_progmem>
			
			oled_goto_page(pos_child+header_pages+1);
    1572:	88 81       	ld	r24, Y
    1574:	8d 5f       	subi	r24, 0xFD	; 253
    1576:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
			oled_clear_page(pos_child+header_pages+1);
    157a:	88 81       	ld	r24, Y
    157c:	8d 5f       	subi	r24, 0xFD	; 253
    157e:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <oled_clear_page>
			oled_print_page_progmem((curr_menu->oledOffset)+s_screen,header_pages+pos_child+1);
    1582:	60 91 c9 01 	lds	r22, 0x01C9	; 0x8001c9 <pos_child>
    1586:	70 91 ca 01 	lds	r23, 0x01CA	; 0x8001ca <pos_child+0x1>
    158a:	6d 5f       	subi	r22, 0xFD	; 253
    158c:	7f 4f       	sbci	r23, 0xFF	; 255
    158e:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <curr_menu>
    1592:	f0 91 c8 01 	lds	r31, 0x01C8	; 0x8001c8 <curr_menu+0x1>
    1596:	80 85       	ldd	r24, Z+8	; 0x08
    1598:	91 85       	ldd	r25, Z+9	; 0x09
    159a:	08 96       	adiw	r24, 0x08	; 8
    159c:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <oled_print_page_progmem>
			
			pos_child += 1;
    15a0:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <pos_child>
    15a4:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <pos_child+0x1>
    15a8:	01 96       	adiw	r24, 0x01	; 1
    15aa:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <pos_child+0x1>
    15ae:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <pos_child>
		}
		break;
	}
}
	if (!(PINB & (1<<PB2))){
    15b2:	b2 99       	sbic	0x16, 2	; 22
    15b4:	2c c0       	rjmp	.+88     	; 0x160e <navigate+0x198>
		if(curr_menu->children!= NULL){
    15b6:	e0 91 c7 01 	lds	r30, 0x01C7	; 0x8001c7 <curr_menu>
    15ba:	f0 91 c8 01 	lds	r31, 0x01C8	; 0x8001c8 <curr_menu+0x1>
    15be:	84 81       	ldd	r24, Z+4	; 0x04
    15c0:	95 81       	ldd	r25, Z+5	; 0x05
    15c2:	00 97       	sbiw	r24, 0x00	; 0
    15c4:	d9 f0       	breq	.+54     	; 0x15fc <navigate+0x186>
			curr_menu=curr_menu->children[pos_child];
    15c6:	e0 91 c9 01 	lds	r30, 0x01C9	; 0x8001c9 <pos_child>
    15ca:	f0 91 ca 01 	lds	r31, 0x01CA	; 0x8001ca <pos_child+0x1>
    15ce:	ee 0f       	add	r30, r30
    15d0:	ff 1f       	adc	r31, r31
    15d2:	e8 0f       	add	r30, r24
    15d4:	f9 1f       	adc	r31, r25
    15d6:	a0 81       	ld	r26, Z
    15d8:	b1 81       	ldd	r27, Z+1	; 0x01
    15da:	b0 93 c8 01 	sts	0x01C8, r27	; 0x8001c8 <curr_menu+0x1>
    15de:	a0 93 c7 01 	sts	0x01C7, r26	; 0x8001c7 <curr_menu>
			pos_child=0;
    15e2:	10 92 ca 01 	sts	0x01CA, r1	; 0x8001ca <pos_child+0x1>
    15e6:	10 92 c9 01 	sts	0x01C9, r1	; 0x8001c9 <pos_child>
			(*curr_menu->function)(curr_menu->name);
    15ea:	12 96       	adiw	r26, 0x02	; 2
    15ec:	ed 91       	ld	r30, X+
    15ee:	fc 91       	ld	r31, X
    15f0:	13 97       	sbiw	r26, 0x03	; 3
    15f2:	1a 96       	adiw	r26, 0x0a	; 10
    15f4:	8d 91       	ld	r24, X+
    15f6:	9c 91       	ld	r25, X
    15f8:	1b 97       	sbiw	r26, 0x0b	; 11
    15fa:	09 95       	icall
    15fc:	2f ef       	ldi	r18, 0xFF	; 255
    15fe:	83 ec       	ldi	r24, 0xC3	; 195
    1600:	99 e0       	ldi	r25, 0x09	; 9
    1602:	21 50       	subi	r18, 0x01	; 1
    1604:	80 40       	sbci	r24, 0x00	; 0
    1606:	90 40       	sbci	r25, 0x00	; 0
    1608:	e1 f7       	brne	.-8      	; 0x1602 <navigate+0x18c>
    160a:	00 c0       	rjmp	.+0      	; 0x160c <navigate+0x196>
    160c:	00 00       	nop
		}
		_delay_ms(200);
	}
		
}
    160e:	df 91       	pop	r29
    1610:	cf 91       	pop	r28
    1612:	08 95       	ret

00001614 <oled_mode>:
	}
	oled_goto_pos(4,0);
	for (int j=0; j<1024; j++){
		ext_oled_data[j] = 0xff;
	}
	oled_mode(PAGE_MODE);
    1614:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1618:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    161c:	90 e2       	ldi	r25, 0x20	; 32
    161e:	90 83       	st	Z, r25
    1620:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1624:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1628:	80 83       	st	Z, r24
    162a:	08 95       	ret

0000162c <oled_goto_page>:
    162c:	88 30       	cpi	r24, 0x08	; 8
    162e:	48 f0       	brcs	.+18     	; 0x1642 <oled_goto_page+0x16>
    1630:	89 e6       	ldi	r24, 0x69	; 105
    1632:	91 e0       	ldi	r25, 0x01	; 1
    1634:	9f 93       	push	r25
    1636:	8f 93       	push	r24
    1638:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
    163c:	0f 90       	pop	r0
    163e:	0f 90       	pop	r0
    1640:	08 95       	ret
    1642:	90 eb       	ldi	r25, 0xB0	; 176
    1644:	98 0f       	add	r25, r24
    1646:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    164a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    164e:	90 83       	st	Z, r25
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	90 93 d5 01 	sts	0x01D5, r25	; 0x8001d5 <oled_position+0x1>
    1656:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <oled_position>
    165a:	08 95       	ret

0000165c <oled_goto_col>:
    165c:	88 23       	and	r24, r24
    165e:	4c f4       	brge	.+18     	; 0x1672 <oled_goto_col+0x16>
    1660:	89 e6       	ldi	r24, 0x69	; 105
    1662:	91 e0       	ldi	r25, 0x01	; 1
    1664:	9f 93       	push	r25
    1666:	8f 93       	push	r24
    1668:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
    166c:	0f 90       	pop	r0
    166e:	0f 90       	pop	r0
    1670:	08 95       	ret
    1672:	28 2f       	mov	r18, r24
    1674:	2f 70       	andi	r18, 0x0F	; 15
    1676:	98 2f       	mov	r25, r24
    1678:	92 95       	swap	r25
    167a:	9f 70       	andi	r25, 0x0F	; 15
    167c:	90 5f       	subi	r25, 0xF0	; 240
    167e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1682:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1686:	90 83       	st	Z, r25
    1688:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    168c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1690:	20 83       	st	Z, r18
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <oled_position+0x3>
    1698:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <oled_position+0x2>
    169c:	08 95       	ret

0000169e <oled_goto_pos>:
    169e:	cf 93       	push	r28
    16a0:	c6 2f       	mov	r28, r22
    16a2:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
    16a6:	8c 2f       	mov	r24, r28
    16a8:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
    16ac:	cf 91       	pop	r28
    16ae:	08 95       	ret

000016b0 <oled_home>:
    16b0:	60 e0       	ldi	r22, 0x00	; 0
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_goto_pos>
    16b8:	08 95       	ret

000016ba <oled_clear_page>:
    16ba:	60 e0       	ldi	r22, 0x00	; 0
    16bc:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_goto_pos>
    16c0:	80 e0       	ldi	r24, 0x00	; 0
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    16c8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    16cc:	e8 0f       	add	r30, r24
    16ce:	f9 1f       	adc	r31, r25
    16d0:	10 82       	st	Z, r1
    16d2:	01 96       	adiw	r24, 0x01	; 1
    16d4:	80 38       	cpi	r24, 0x80	; 128
    16d6:	91 05       	cpc	r25, r1
    16d8:	a9 f7       	brne	.-22     	; 0x16c4 <oled_clear_page+0xa>
    16da:	08 95       	ret

000016dc <oled_clear_screen>:
    16dc:	60 e0       	ldi	r22, 0x00	; 0
    16de:	80 e0       	ldi	r24, 0x00	; 0
    16e0:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_goto_pos>
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	0e 94 0a 0b 	call	0x1614	; 0x1614 <oled_mode>
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    16f2:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    16f6:	e8 0f       	add	r30, r24
    16f8:	f9 1f       	adc	r31, r25
    16fa:	10 82       	st	Z, r1
    16fc:	01 96       	adiw	r24, 0x01	; 1
    16fe:	81 15       	cp	r24, r1
    1700:	24 e0       	ldi	r18, 0x04	; 4
    1702:	92 07       	cpc	r25, r18
    1704:	a1 f7       	brne	.-24     	; 0x16ee <oled_clear_screen+0x12>
    1706:	60 e0       	ldi	r22, 0x00	; 0
    1708:	84 e0       	ldi	r24, 0x04	; 4
    170a:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_goto_pos>
    170e:	80 e0       	ldi	r24, 0x00	; 0
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    1716:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    171a:	e8 0f       	add	r30, r24
    171c:	f9 1f       	adc	r31, r25
    171e:	10 82       	st	Z, r1
    1720:	01 96       	adiw	r24, 0x01	; 1
    1722:	81 15       	cp	r24, r1
    1724:	24 e0       	ldi	r18, 0x04	; 4
    1726:	92 07       	cpc	r25, r18
    1728:	a1 f7       	brne	.-24     	; 0x1712 <oled_clear_screen+0x36>
    172a:	82 e0       	ldi	r24, 0x02	; 2
    172c:	0e 94 0a 0b 	call	0x1614	; 0x1614 <oled_mode>
    1730:	08 95       	ret

00001732 <oled_reset>:
    1732:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <oled_home>
    1736:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <oled_clear_screen>
    173a:	82 e0       	ldi	r24, 0x02	; 2
    173c:	0e 94 0a 0b 	call	0x1614	; 0x1614 <oled_mode>
    1740:	08 95       	ret

00001742 <oled_write_char>:
}


void oled_write_char(char c, int fs){
	c=c-32;
    1742:	80 52       	subi	r24, 0x20	; 32
	
	switch(fs){
    1744:	64 30       	cpi	r22, 0x04	; 4
    1746:	71 05       	cpc	r23, r1
    1748:	09 f4       	brne	.+2      	; 0x174c <oled_write_char+0xa>
    174a:	70 c0       	rjmp	.+224    	; 0x182c <oled_write_char+0xea>
    174c:	1c f4       	brge	.+6      	; 0x1754 <oled_write_char+0x12>
    174e:	67 2b       	or	r22, r23
    1750:	89 f0       	breq	.+34     	; 0x1774 <oled_write_char+0x32>
    1752:	08 95       	ret
    1754:	66 30       	cpi	r22, 0x06	; 6
    1756:	71 05       	cpc	r23, r1
    1758:	09 f4       	brne	.+2      	; 0x175c <oled_write_char+0x1a>
    175a:	40 c0       	rjmp	.+128    	; 0x17dc <oled_write_char+0x9a>
    175c:	68 30       	cpi	r22, 0x08	; 8
    175e:	71 05       	cpc	r23, r1
    1760:	09 f0       	breq	.+2      	; 0x1764 <oled_write_char+0x22>
    1762:	b3 c0       	rjmp	.+358    	; 0x18ca <oled_write_char+0x188>
		case 8 :
			for(int i=0; i<fontsize;i++){
    1764:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
    1768:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
    176c:	12 16       	cp	r1, r18
    176e:	13 06       	cpc	r1, r19
    1770:	54 f0       	brlt	.+20     	; 0x1786 <oled_write_char+0x44>
    1772:	08 95       	ret
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
    1774:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
    1778:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
    177c:	12 16       	cp	r1, r18
    177e:	13 06       	cpc	r1, r19
    1780:	0c f4       	brge	.+2      	; 0x1784 <oled_write_char+0x42>
    1782:	79 c0       	rjmp	.+242    	; 0x1876 <oled_write_char+0x134>
    1784:	08 95       	ret
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	88 0f       	add	r24, r24
    178a:	99 1f       	adc	r25, r25
    178c:	88 0f       	add	r24, r24
    178e:	99 1f       	adc	r25, r25
    1790:	88 0f       	add	r24, r24
    1792:	99 1f       	adc	r25, r25
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
    1798:	a4 ed       	ldi	r26, 0xD4	; 212
    179a:	b1 e0       	ldi	r27, 0x01	; 1
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
    179c:	f9 01       	movw	r30, r18
    179e:	e8 0f       	add	r30, r24
    17a0:	f9 1f       	adc	r31, r25
    17a2:	e2 5e       	subi	r30, 0xE2	; 226
    17a4:	f8 4f       	sbci	r31, 0xF8	; 248
    17a6:	45 91       	lpm	r20, Z+
    17a8:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    17aa:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    17ae:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    17b2:	40 83       	st	Z, r20
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
    17b4:	12 96       	adiw	r26, 0x02	; 2
    17b6:	4d 91       	ld	r20, X+
    17b8:	5c 91       	ld	r21, X
    17ba:	13 97       	sbiw	r26, 0x03	; 3
    17bc:	4f 5f       	subi	r20, 0xFF	; 255
    17be:	5f 4f       	sbci	r21, 0xFF	; 255
    17c0:	13 96       	adiw	r26, 0x03	; 3
    17c2:	5c 93       	st	X, r21
    17c4:	4e 93       	st	-X, r20
    17c6:	12 97       	sbiw	r26, 0x02	; 2
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
    17c8:	2f 5f       	subi	r18, 0xFF	; 255
    17ca:	3f 4f       	sbci	r19, 0xFF	; 255
    17cc:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <fontsize>
    17d0:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <fontsize+0x1>
    17d4:	24 17       	cp	r18, r20
    17d6:	35 07       	cpc	r19, r21
    17d8:	0c f3       	brlt	.-62     	; 0x179c <oled_write_char+0x5a>
    17da:	08 95       	ret
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	9c 01       	movw	r18, r24
    17e0:	22 0f       	add	r18, r18
    17e2:	33 1f       	adc	r19, r19
    17e4:	82 0f       	add	r24, r18
    17e6:	93 1f       	adc	r25, r19
    17e8:	88 0f       	add	r24, r24
    17ea:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
    17f0:	a4 ed       	ldi	r26, 0xD4	; 212
    17f2:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
    17f4:	f9 01       	movw	r30, r18
    17f6:	e8 0f       	add	r30, r24
    17f8:	f9 1f       	adc	r31, r25
    17fa:	ec 51       	subi	r30, 0x1C	; 28
    17fc:	fb 4f       	sbci	r31, 0xFB	; 251
    17fe:	45 91       	lpm	r20, Z+
    1800:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    1802:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    1806:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    180a:	40 83       	st	Z, r20
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
    180c:	12 96       	adiw	r26, 0x02	; 2
    180e:	4d 91       	ld	r20, X+
    1810:	5c 91       	ld	r21, X
    1812:	13 97       	sbiw	r26, 0x03	; 3
    1814:	4f 5f       	subi	r20, 0xFF	; 255
    1816:	5f 4f       	sbci	r21, 0xFF	; 255
    1818:	13 96       	adiw	r26, 0x03	; 3
    181a:	5c 93       	st	X, r21
    181c:	4e 93       	st	-X, r20
    181e:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
    1820:	2f 5f       	subi	r18, 0xFF	; 255
    1822:	3f 4f       	sbci	r19, 0xFF	; 255
    1824:	26 30       	cpi	r18, 0x06	; 6
    1826:	31 05       	cpc	r19, r1
    1828:	29 f7       	brne	.-54     	; 0x17f4 <oled_write_char+0xb2>
    182a:	08 95       	ret
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	88 0f       	add	r24, r24
    1830:	99 1f       	adc	r25, r25
    1832:	88 0f       	add	r24, r24
    1834:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
    183a:	a4 ed       	ldi	r26, 0xD4	; 212
    183c:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
    183e:	f9 01       	movw	r30, r18
    1840:	e8 0f       	add	r30, r24
    1842:	f9 1f       	adc	r31, r25
    1844:	e8 59       	subi	r30, 0x98	; 152
    1846:	fc 4f       	sbci	r31, 0xFC	; 252
    1848:	45 91       	lpm	r20, Z+
    184a:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    184c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    1850:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    1854:	40 83       	st	Z, r20
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
    1856:	12 96       	adiw	r26, 0x02	; 2
    1858:	4d 91       	ld	r20, X+
    185a:	5c 91       	ld	r21, X
    185c:	13 97       	sbiw	r26, 0x03	; 3
    185e:	4f 5f       	subi	r20, 0xFF	; 255
    1860:	5f 4f       	sbci	r21, 0xFF	; 255
    1862:	13 96       	adiw	r26, 0x03	; 3
    1864:	5c 93       	st	X, r21
    1866:	4e 93       	st	-X, r20
    1868:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
    186a:	2f 5f       	subi	r18, 0xFF	; 255
    186c:	3f 4f       	sbci	r19, 0xFF	; 255
    186e:	24 30       	cpi	r18, 0x04	; 4
    1870:	31 05       	cpc	r19, r1
    1872:	29 f7       	brne	.-54     	; 0x183e <oled_write_char+0xfc>
    1874:	08 95       	ret
    1876:	90 e0       	ldi	r25, 0x00	; 0
    1878:	88 0f       	add	r24, r24
    187a:	99 1f       	adc	r25, r25
    187c:	88 0f       	add	r24, r24
    187e:	99 1f       	adc	r25, r25
    1880:	88 0f       	add	r24, r24
    1882:	99 1f       	adc	r25, r25
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
    1884:	40 e0       	ldi	r20, 0x00	; 0
    1886:	50 e0       	ldi	r21, 0x00	; 0
				oled_wrd(pgm_read_word(&font_animation[c][i]));
				oled_position.coloumn++;
    1888:	a4 ed       	ldi	r26, 0xD4	; 212
    188a:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font_animation[c][i]));
    188c:	fa 01       	movw	r30, r20
    188e:	e8 0f       	add	r30, r24
    1890:	f9 1f       	adc	r31, r25
    1892:	e0 59       	subi	r30, 0x90	; 144
    1894:	ff 4f       	sbci	r31, 0xFF	; 255
    1896:	25 91       	lpm	r18, Z+
    1898:	34 91       	lpm	r19, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    189a:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    189e:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    18a2:	20 83       	st	Z, r18
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font_animation[c][i]));
				oled_position.coloumn++;
    18a4:	12 96       	adiw	r26, 0x02	; 2
    18a6:	2d 91       	ld	r18, X+
    18a8:	3c 91       	ld	r19, X
    18aa:	13 97       	sbiw	r26, 0x03	; 3
    18ac:	2f 5f       	subi	r18, 0xFF	; 255
    18ae:	3f 4f       	sbci	r19, 0xFF	; 255
    18b0:	13 96       	adiw	r26, 0x03	; 3
    18b2:	3c 93       	st	X, r19
    18b4:	2e 93       	st	-X, r18
    18b6:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
    18b8:	4f 5f       	subi	r20, 0xFF	; 255
    18ba:	5f 4f       	sbci	r21, 0xFF	; 255
    18bc:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
    18c0:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
    18c4:	42 17       	cp	r20, r18
    18c6:	53 07       	cpc	r21, r19
    18c8:	0c f3       	brlt	.-62     	; 0x188c <oled_write_char+0x14a>
    18ca:	08 95       	ret

000018cc <oled_print>:
	
}



void oled_print(char* word, int fs){
    18cc:	cf 92       	push	r12
    18ce:	df 92       	push	r13
    18d0:	ef 92       	push	r14
    18d2:	ff 92       	push	r15
    18d4:	0f 93       	push	r16
    18d6:	1f 93       	push	r17
    18d8:	cf 93       	push	r28
    18da:	df 93       	push	r29
    18dc:	ec 01       	movw	r28, r24
    18de:	7b 01       	movw	r14, r22
    18e0:	8c 01       	movw	r16, r24
	for( int i = 0; i < strlen(word); i++){
    18e2:	c1 2c       	mov	r12, r1
    18e4:	d1 2c       	mov	r13, r1
    18e6:	09 c0       	rjmp	.+18     	; 0x18fa <oled_print+0x2e>
		oled_write_char(word[i], fs);
    18e8:	b7 01       	movw	r22, r14
    18ea:	f8 01       	movw	r30, r16
    18ec:	81 91       	ld	r24, Z+
    18ee:	8f 01       	movw	r16, r30
    18f0:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
}



void oled_print(char* word, int fs){
	for( int i = 0; i < strlen(word); i++){
    18f4:	ff ef       	ldi	r31, 0xFF	; 255
    18f6:	cf 1a       	sub	r12, r31
    18f8:	df 0a       	sbc	r13, r31
    18fa:	fe 01       	movw	r30, r28
    18fc:	01 90       	ld	r0, Z+
    18fe:	00 20       	and	r0, r0
    1900:	e9 f7       	brne	.-6      	; 0x18fc <oled_print+0x30>
    1902:	31 97       	sbiw	r30, 0x01	; 1
    1904:	ec 1b       	sub	r30, r28
    1906:	fd 0b       	sbc	r31, r29
    1908:	ce 16       	cp	r12, r30
    190a:	df 06       	cpc	r13, r31
    190c:	68 f3       	brcs	.-38     	; 0x18e8 <oled_print+0x1c>
		oled_write_char(word[i], fs);
	}
}
    190e:	df 91       	pop	r29
    1910:	cf 91       	pop	r28
    1912:	1f 91       	pop	r17
    1914:	0f 91       	pop	r16
    1916:	ff 90       	pop	r15
    1918:	ef 90       	pop	r14
    191a:	df 90       	pop	r13
    191c:	cf 90       	pop	r12
    191e:	08 95       	ret

00001920 <oled_center_print>:

void oled_center_print(char* word, int fs){
    1920:	0f 93       	push	r16
    1922:	1f 93       	push	r17
    1924:	cf 93       	push	r28
    1926:	df 93       	push	r29
    1928:	ec 01       	movw	r28, r24
    192a:	8b 01       	movw	r16, r22
	oled_goto_col(63-(strlen(word)*fs/2));
    192c:	fc 01       	movw	r30, r24
    192e:	01 90       	ld	r0, Z+
    1930:	00 20       	and	r0, r0
    1932:	e9 f7       	brne	.-6      	; 0x192e <oled_center_print+0xe>
    1934:	31 97       	sbiw	r30, 0x01	; 1
    1936:	e8 1b       	sub	r30, r24
    1938:	f9 0b       	sbc	r31, r25
    193a:	6e 9f       	mul	r22, r30
    193c:	90 01       	movw	r18, r0
    193e:	6f 9f       	mul	r22, r31
    1940:	30 0d       	add	r19, r0
    1942:	7e 9f       	mul	r23, r30
    1944:	30 0d       	add	r19, r0
    1946:	11 24       	eor	r1, r1
    1948:	36 95       	lsr	r19
    194a:	27 95       	ror	r18
    194c:	8f e3       	ldi	r24, 0x3F	; 63
    194e:	82 1b       	sub	r24, r18
    1950:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
	oled_print(word, fs);
    1954:	b8 01       	movw	r22, r16
    1956:	ce 01       	movw	r24, r28
    1958:	0e 94 66 0c 	call	0x18cc	; 0x18cc <oled_print>
}
    195c:	df 91       	pop	r29
    195e:	cf 91       	pop	r28
    1960:	1f 91       	pop	r17
    1962:	0f 91       	pop	r16
    1964:	08 95       	ret

00001966 <oled_arrow>:

char* oled_arrow(char* name){
    1966:	0f 93       	push	r16
    1968:	1f 93       	push	r17
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	8c 01       	movw	r16, r24
	char* str = malloc(sizeof(char)*20);
    1970:	84 e1       	ldi	r24, 0x14	; 20
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	0e 94 c8 11 	call	0x2390	; 0x2390 <malloc>
    1978:	ec 01       	movw	r28, r24
	strcpy(str,">");
    197a:	8e e3       	ldi	r24, 0x3E	; 62
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	99 83       	std	Y+1, r25	; 0x01
    1980:	88 83       	st	Y, r24
	strcat(str,name);
    1982:	b8 01       	movw	r22, r16
    1984:	ce 01       	movw	r24, r28
    1986:	0e 94 bf 13 	call	0x277e	; 0x277e <strcat>
	strcat(str,"<");
    198a:	fe 01       	movw	r30, r28
    198c:	01 90       	ld	r0, Z+
    198e:	00 20       	and	r0, r0
    1990:	e9 f7       	brne	.-6      	; 0x198c <oled_arrow+0x26>
    1992:	31 97       	sbiw	r30, 0x01	; 1
    1994:	8c e3       	ldi	r24, 0x3C	; 60
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	91 83       	std	Z+1, r25	; 0x01
    199a:	80 83       	st	Z, r24
	return str;
}
    199c:	ce 01       	movw	r24, r28
    199e:	df 91       	pop	r29
    19a0:	cf 91       	pop	r28
    19a2:	1f 91       	pop	r17
    19a4:	0f 91       	pop	r16
    19a6:	08 95       	ret

000019a8 <oled_animation_frame>:

void oled_animation_frame(char c, int col,char c1,int col1){
    19a8:	1f 93       	push	r17
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	18 2f       	mov	r17, r24
    19b0:	86 2f       	mov	r24, r22
    19b2:	d4 2f       	mov	r29, r20
    19b4:	c2 2f       	mov	r28, r18
	oled_goto_col(col);
    19b6:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
	oled_write_char(c,0);
    19ba:	60 e0       	ldi	r22, 0x00	; 0
    19bc:	70 e0       	ldi	r23, 0x00	; 0
    19be:	81 2f       	mov	r24, r17
    19c0:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
	oled_goto_col(col1);
    19c4:	8c 2f       	mov	r24, r28
    19c6:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
	oled_write_char(c1,0);
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	70 e0       	ldi	r23, 0x00	; 0
    19ce:	8d 2f       	mov	r24, r29
    19d0:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    19d4:	83 ed       	ldi	r24, 0xD3	; 211
    19d6:	90 e3       	ldi	r25, 0x30	; 48
    19d8:	01 97       	sbiw	r24, 0x01	; 1
    19da:	f1 f7       	brne	.-4      	; 0x19d8 <oled_animation_frame+0x30>
    19dc:	00 c0       	rjmp	.+0      	; 0x19de <oled_animation_frame+0x36>
    19de:	00 00       	nop
	_delay_ms(50);
	oled_goto_col(col1);
    19e0:	8c 2f       	mov	r24, r28
    19e2:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
	oled_write_char('H',0);
    19e6:	60 e0       	ldi	r22, 0x00	; 0
    19e8:	70 e0       	ldi	r23, 0x00	; 0
    19ea:	88 e4       	ldi	r24, 0x48	; 72
    19ec:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
}
    19f0:	df 91       	pop	r29
    19f2:	cf 91       	pop	r28
    19f4:	1f 91       	pop	r17
    19f6:	08 95       	ret

000019f8 <oled_animation>:

void oled_animation(int page){
    19f8:	0f 93       	push	r16
    19fa:	1f 93       	push	r17
    19fc:	cf 93       	push	r28
	oled_goto_page(page);
    19fe:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
	oled_goto_col(120);
    1a02:	88 e7       	ldi	r24, 0x78	; 120
    1a04:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
	oled_write_char('J',0);
    1a08:	60 e0       	ldi	r22, 0x00	; 0
    1a0a:	70 e0       	ldi	r23, 0x00	; 0
    1a0c:	8a e4       	ldi	r24, 0x4A	; 74
    1a0e:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    1a12:	03 e0       	ldi	r16, 0x03	; 3
    1a14:	10 e0       	ldi	r17, 0x00	; 0
	for( int i = 0; i < 3; i++){
		oled_animation_frame('A',0,'I',2);
    1a16:	22 e0       	ldi	r18, 0x02	; 2
    1a18:	30 e0       	ldi	r19, 0x00	; 0
    1a1a:	49 e4       	ldi	r20, 0x49	; 73
    1a1c:	60 e0       	ldi	r22, 0x00	; 0
    1a1e:	70 e0       	ldi	r23, 0x00	; 0
    1a20:	81 e4       	ldi	r24, 0x41	; 65
    1a22:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('B',0,'I',3);
    1a26:	23 e0       	ldi	r18, 0x03	; 3
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	49 e4       	ldi	r20, 0x49	; 73
    1a2c:	60 e0       	ldi	r22, 0x00	; 0
    1a2e:	70 e0       	ldi	r23, 0x00	; 0
    1a30:	82 e4       	ldi	r24, 0x42	; 66
    1a32:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('C',0,'I',4);
    1a36:	24 e0       	ldi	r18, 0x04	; 4
    1a38:	30 e0       	ldi	r19, 0x00	; 0
    1a3a:	49 e4       	ldi	r20, 0x49	; 73
    1a3c:	60 e0       	ldi	r22, 0x00	; 0
    1a3e:	70 e0       	ldi	r23, 0x00	; 0
    1a40:	83 e4       	ldi	r24, 0x43	; 67
    1a42:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('D',0,'I',5);
    1a46:	25 e0       	ldi	r18, 0x05	; 5
    1a48:	30 e0       	ldi	r19, 0x00	; 0
    1a4a:	49 e4       	ldi	r20, 0x49	; 73
    1a4c:	60 e0       	ldi	r22, 0x00	; 0
    1a4e:	70 e0       	ldi	r23, 0x00	; 0
    1a50:	84 e4       	ldi	r24, 0x44	; 68
    1a52:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('E',0,'I',6);
    1a56:	26 e0       	ldi	r18, 0x06	; 6
    1a58:	30 e0       	ldi	r19, 0x00	; 0
    1a5a:	49 e4       	ldi	r20, 0x49	; 73
    1a5c:	60 e0       	ldi	r22, 0x00	; 0
    1a5e:	70 e0       	ldi	r23, 0x00	; 0
    1a60:	85 e4       	ldi	r24, 0x45	; 69
    1a62:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('F',0,'I',7);
    1a66:	27 e0       	ldi	r18, 0x07	; 7
    1a68:	30 e0       	ldi	r19, 0x00	; 0
    1a6a:	49 e4       	ldi	r20, 0x49	; 73
    1a6c:	60 e0       	ldi	r22, 0x00	; 0
    1a6e:	70 e0       	ldi	r23, 0x00	; 0
    1a70:	86 e4       	ldi	r24, 0x46	; 70
    1a72:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('G',0,'I',8);
    1a76:	28 e0       	ldi	r18, 0x08	; 8
    1a78:	30 e0       	ldi	r19, 0x00	; 0
    1a7a:	49 e4       	ldi	r20, 0x49	; 73
    1a7c:	60 e0       	ldi	r22, 0x00	; 0
    1a7e:	70 e0       	ldi	r23, 0x00	; 0
    1a80:	87 e4       	ldi	r24, 0x47	; 71
    1a82:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('F',0,'I',9);
    1a86:	29 e0       	ldi	r18, 0x09	; 9
    1a88:	30 e0       	ldi	r19, 0x00	; 0
    1a8a:	49 e4       	ldi	r20, 0x49	; 73
    1a8c:	60 e0       	ldi	r22, 0x00	; 0
    1a8e:	70 e0       	ldi	r23, 0x00	; 0
    1a90:	86 e4       	ldi	r24, 0x46	; 70
    1a92:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('E',0,'I',10);
    1a96:	2a e0       	ldi	r18, 0x0A	; 10
    1a98:	30 e0       	ldi	r19, 0x00	; 0
    1a9a:	49 e4       	ldi	r20, 0x49	; 73
    1a9c:	60 e0       	ldi	r22, 0x00	; 0
    1a9e:	70 e0       	ldi	r23, 0x00	; 0
    1aa0:	85 e4       	ldi	r24, 0x45	; 69
    1aa2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('D',0,'I',11);
    1aa6:	2b e0       	ldi	r18, 0x0B	; 11
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	49 e4       	ldi	r20, 0x49	; 73
    1aac:	60 e0       	ldi	r22, 0x00	; 0
    1aae:	70 e0       	ldi	r23, 0x00	; 0
    1ab0:	84 e4       	ldi	r24, 0x44	; 68
    1ab2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('C',0,'I',12);
    1ab6:	2c e0       	ldi	r18, 0x0C	; 12
    1ab8:	30 e0       	ldi	r19, 0x00	; 0
    1aba:	49 e4       	ldi	r20, 0x49	; 73
    1abc:	60 e0       	ldi	r22, 0x00	; 0
    1abe:	70 e0       	ldi	r23, 0x00	; 0
    1ac0:	83 e4       	ldi	r24, 0x43	; 67
    1ac2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('B',0,'I',13);
    1ac6:	2d e0       	ldi	r18, 0x0D	; 13
    1ac8:	30 e0       	ldi	r19, 0x00	; 0
    1aca:	49 e4       	ldi	r20, 0x49	; 73
    1acc:	60 e0       	ldi	r22, 0x00	; 0
    1ace:	70 e0       	ldi	r23, 0x00	; 0
    1ad0:	82 e4       	ldi	r24, 0x42	; 66
    1ad2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('A',0,'I',14);
    1ad6:	2e e0       	ldi	r18, 0x0E	; 14
    1ad8:	30 e0       	ldi	r19, 0x00	; 0
    1ada:	49 e4       	ldi	r20, 0x49	; 73
    1adc:	60 e0       	ldi	r22, 0x00	; 0
    1ade:	70 e0       	ldi	r23, 0x00	; 0
    1ae0:	81 e4       	ldi	r24, 0x41	; 65
    1ae2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
    1ae6:	cf e0       	ldi	r28, 0x0F	; 15
		
		for(int i=15; i<118; i++){
			oled_goto_col(i);
    1ae8:	8c 2f       	mov	r24, r28
    1aea:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
			oled_write_char('I',0);
    1aee:	60 e0       	ldi	r22, 0x00	; 0
    1af0:	70 e0       	ldi	r23, 0x00	; 0
    1af2:	89 e4       	ldi	r24, 0x49	; 73
    1af4:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    1af8:	83 ed       	ldi	r24, 0xD3	; 211
    1afa:	90 e3       	ldi	r25, 0x30	; 48
    1afc:	01 97       	sbiw	r24, 0x01	; 1
    1afe:	f1 f7       	brne	.-4      	; 0x1afc <oled_animation+0x104>
    1b00:	00 c0       	rjmp	.+0      	; 0x1b02 <oled_animation+0x10a>
    1b02:	00 00       	nop
			_delay_ms(50);
			oled_goto_col(i);
    1b04:	8c 2f       	mov	r24, r28
    1b06:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
			oled_write_char('H',0);
    1b0a:	60 e0       	ldi	r22, 0x00	; 0
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	88 e4       	ldi	r24, 0x48	; 72
    1b10:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    1b14:	cf 5f       	subi	r28, 0xFF	; 255
		oled_animation_frame('D',0,'I',11);
		oled_animation_frame('C',0,'I',12);
		oled_animation_frame('B',0,'I',13);
		oled_animation_frame('A',0,'I',14);
		
		for(int i=15; i<118; i++){
    1b16:	c6 37       	cpi	r28, 0x76	; 118
    1b18:	39 f7       	brne	.-50     	; 0x1ae8 <oled_animation+0xf0>
			_delay_ms(50);
			oled_goto_col(i);
			oled_write_char('H',0);
		}

		oled_animation_frame('J',120,'I',118);
    1b1a:	26 e7       	ldi	r18, 0x76	; 118
    1b1c:	30 e0       	ldi	r19, 0x00	; 0
    1b1e:	49 e4       	ldi	r20, 0x49	; 73
    1b20:	68 e7       	ldi	r22, 0x78	; 120
    1b22:	70 e0       	ldi	r23, 0x00	; 0
    1b24:	8a e4       	ldi	r24, 0x4A	; 74
    1b26:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('K',120,'I',117);
    1b2a:	25 e7       	ldi	r18, 0x75	; 117
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	49 e4       	ldi	r20, 0x49	; 73
    1b30:	68 e7       	ldi	r22, 0x78	; 120
    1b32:	70 e0       	ldi	r23, 0x00	; 0
    1b34:	8b e4       	ldi	r24, 0x4B	; 75
    1b36:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('L',120,'I',116);
    1b3a:	24 e7       	ldi	r18, 0x74	; 116
    1b3c:	30 e0       	ldi	r19, 0x00	; 0
    1b3e:	49 e4       	ldi	r20, 0x49	; 73
    1b40:	68 e7       	ldi	r22, 0x78	; 120
    1b42:	70 e0       	ldi	r23, 0x00	; 0
    1b44:	8c e4       	ldi	r24, 0x4C	; 76
    1b46:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('M',120,'I',115);
    1b4a:	23 e7       	ldi	r18, 0x73	; 115
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	49 e4       	ldi	r20, 0x49	; 73
    1b50:	68 e7       	ldi	r22, 0x78	; 120
    1b52:	70 e0       	ldi	r23, 0x00	; 0
    1b54:	8d e4       	ldi	r24, 0x4D	; 77
    1b56:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('N',120,'I',114);
    1b5a:	22 e7       	ldi	r18, 0x72	; 114
    1b5c:	30 e0       	ldi	r19, 0x00	; 0
    1b5e:	49 e4       	ldi	r20, 0x49	; 73
    1b60:	68 e7       	ldi	r22, 0x78	; 120
    1b62:	70 e0       	ldi	r23, 0x00	; 0
    1b64:	8e e4       	ldi	r24, 0x4E	; 78
    1b66:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('O',120,'I',113);
    1b6a:	21 e7       	ldi	r18, 0x71	; 113
    1b6c:	30 e0       	ldi	r19, 0x00	; 0
    1b6e:	49 e4       	ldi	r20, 0x49	; 73
    1b70:	68 e7       	ldi	r22, 0x78	; 120
    1b72:	70 e0       	ldi	r23, 0x00	; 0
    1b74:	8f e4       	ldi	r24, 0x4F	; 79
    1b76:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('P',120,'I',112);
    1b7a:	20 e7       	ldi	r18, 0x70	; 112
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	49 e4       	ldi	r20, 0x49	; 73
    1b80:	68 e7       	ldi	r22, 0x78	; 120
    1b82:	70 e0       	ldi	r23, 0x00	; 0
    1b84:	80 e5       	ldi	r24, 0x50	; 80
    1b86:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('O',120,'I',111);
    1b8a:	2f e6       	ldi	r18, 0x6F	; 111
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	49 e4       	ldi	r20, 0x49	; 73
    1b90:	68 e7       	ldi	r22, 0x78	; 120
    1b92:	70 e0       	ldi	r23, 0x00	; 0
    1b94:	8f e4       	ldi	r24, 0x4F	; 79
    1b96:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('N',120,'I',110);
    1b9a:	2e e6       	ldi	r18, 0x6E	; 110
    1b9c:	30 e0       	ldi	r19, 0x00	; 0
    1b9e:	49 e4       	ldi	r20, 0x49	; 73
    1ba0:	68 e7       	ldi	r22, 0x78	; 120
    1ba2:	70 e0       	ldi	r23, 0x00	; 0
    1ba4:	8e e4       	ldi	r24, 0x4E	; 78
    1ba6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('M',120,'I',109);
    1baa:	2d e6       	ldi	r18, 0x6D	; 109
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	49 e4       	ldi	r20, 0x49	; 73
    1bb0:	68 e7       	ldi	r22, 0x78	; 120
    1bb2:	70 e0       	ldi	r23, 0x00	; 0
    1bb4:	8d e4       	ldi	r24, 0x4D	; 77
    1bb6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('L',120,'I',108);
    1bba:	2c e6       	ldi	r18, 0x6C	; 108
    1bbc:	30 e0       	ldi	r19, 0x00	; 0
    1bbe:	49 e4       	ldi	r20, 0x49	; 73
    1bc0:	68 e7       	ldi	r22, 0x78	; 120
    1bc2:	70 e0       	ldi	r23, 0x00	; 0
    1bc4:	8c e4       	ldi	r24, 0x4C	; 76
    1bc6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('K',120,'I',107);
    1bca:	2b e6       	ldi	r18, 0x6B	; 107
    1bcc:	30 e0       	ldi	r19, 0x00	; 0
    1bce:	49 e4       	ldi	r20, 0x49	; 73
    1bd0:	68 e7       	ldi	r22, 0x78	; 120
    1bd2:	70 e0       	ldi	r23, 0x00	; 0
    1bd4:	8b e4       	ldi	r24, 0x4B	; 75
    1bd6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
		oled_animation_frame('J',120,'I',106);
    1bda:	2a e6       	ldi	r18, 0x6A	; 106
    1bdc:	30 e0       	ldi	r19, 0x00	; 0
    1bde:	49 e4       	ldi	r20, 0x49	; 73
    1be0:	68 e7       	ldi	r22, 0x78	; 120
    1be2:	70 e0       	ldi	r23, 0x00	; 0
    1be4:	8a e4       	ldi	r24, 0x4A	; 74
    1be6:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <oled_animation_frame>
    1bea:	c9 e6       	ldi	r28, 0x69	; 105
		for(int i=105; i>1; i--){
			oled_goto_col(i);
    1bec:	8c 2f       	mov	r24, r28
    1bee:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
			oled_write_char('I',0);
    1bf2:	60 e0       	ldi	r22, 0x00	; 0
    1bf4:	70 e0       	ldi	r23, 0x00	; 0
    1bf6:	89 e4       	ldi	r24, 0x49	; 73
    1bf8:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    1bfc:	83 ed       	ldi	r24, 0xD3	; 211
    1bfe:	90 e3       	ldi	r25, 0x30	; 48
    1c00:	01 97       	sbiw	r24, 0x01	; 1
    1c02:	f1 f7       	brne	.-4      	; 0x1c00 <oled_animation+0x208>
    1c04:	00 c0       	rjmp	.+0      	; 0x1c06 <oled_animation+0x20e>
    1c06:	00 00       	nop
			_delay_ms(50);
			oled_goto_col(i);
    1c08:	8c 2f       	mov	r24, r28
    1c0a:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
			oled_write_char('H',0);
    1c0e:	60 e0       	ldi	r22, 0x00	; 0
    1c10:	70 e0       	ldi	r23, 0x00	; 0
    1c12:	88 e4       	ldi	r24, 0x48	; 72
    1c14:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    1c18:	c1 50       	subi	r28, 0x01	; 1
		oled_animation_frame('N',120,'I',110);
		oled_animation_frame('M',120,'I',109);
		oled_animation_frame('L',120,'I',108);
		oled_animation_frame('K',120,'I',107);
		oled_animation_frame('J',120,'I',106);
		for(int i=105; i>1; i--){
    1c1a:	c1 30       	cpi	r28, 0x01	; 1
    1c1c:	39 f7       	brne	.-50     	; 0x1bec <oled_animation+0x1f4>
    1c1e:	01 50       	subi	r16, 0x01	; 1
    1c20:	11 09       	sbc	r17, r1

void oled_animation(int page){
	oled_goto_page(page);
	oled_goto_col(120);
	oled_write_char('J',0);
	for( int i = 0; i < 3; i++){
    1c22:	09 f0       	breq	.+2      	; 0x1c26 <oled_animation+0x22e>
    1c24:	f8 ce       	rjmp	.-528    	; 0x1a16 <oled_animation+0x1e>
			_delay_ms(50);
			oled_goto_col(i);
			oled_write_char('H',0);
		}
	}
}
    1c26:	cf 91       	pop	r28
    1c28:	1f 91       	pop	r17
    1c2a:	0f 91       	pop	r16
    1c2c:	08 95       	ret

00001c2e <oled_init>:
int fontsize = 8;


//oled write command
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
    1c2e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c32:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c36:	8e ea       	ldi	r24, 0xAE	; 174
    1c38:	80 83       	st	Z, r24
    1c3a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c3e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c42:	81 ea       	ldi	r24, 0xA1	; 161
    1c44:	80 83       	st	Z, r24
    1c46:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c4a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c4e:	8a ed       	ldi	r24, 0xDA	; 218
    1c50:	80 83       	st	Z, r24
    1c52:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c56:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c5a:	82 e1       	ldi	r24, 0x12	; 18
    1c5c:	80 83       	st	Z, r24
    1c5e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c62:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c66:	88 ec       	ldi	r24, 0xC8	; 200
    1c68:	80 83       	st	Z, r24
    1c6a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c6e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c72:	88 ea       	ldi	r24, 0xA8	; 168
    1c74:	80 83       	st	Z, r24
    1c76:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c7a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c7e:	8f e3       	ldi	r24, 0x3F	; 63
    1c80:	80 83       	st	Z, r24
    1c82:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c86:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c8a:	85 ed       	ldi	r24, 0xD5	; 213
    1c8c:	80 83       	st	Z, r24
    1c8e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c92:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c96:	80 e8       	ldi	r24, 0x80	; 128
    1c98:	80 83       	st	Z, r24
    1c9a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c9e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1ca2:	81 e8       	ldi	r24, 0x81	; 129
    1ca4:	80 83       	st	Z, r24
    1ca6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1caa:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cae:	80 e5       	ldi	r24, 0x50	; 80
    1cb0:	80 83       	st	Z, r24
    1cb2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cb6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cba:	89 ed       	ldi	r24, 0xD9	; 217
    1cbc:	80 83       	st	Z, r24
    1cbe:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cc2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cc6:	81 e2       	ldi	r24, 0x21	; 33
    1cc8:	80 83       	st	Z, r24
    1cca:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cce:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cd2:	80 e2       	ldi	r24, 0x20	; 32
    1cd4:	80 83       	st	Z, r24
    1cd6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cda:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cde:	82 e0       	ldi	r24, 0x02	; 2
    1ce0:	80 83       	st	Z, r24
    1ce2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1ce6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cea:	8b ed       	ldi	r24, 0xDB	; 219
    1cec:	80 83       	st	Z, r24
    1cee:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cf2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cf6:	80 e3       	ldi	r24, 0x30	; 48
    1cf8:	80 83       	st	Z, r24
    1cfa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cfe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1d02:	8d ea       	ldi	r24, 0xAD	; 173
    1d04:	80 83       	st	Z, r24
    1d06:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1d0a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1d0e:	10 82       	st	Z, r1
    1d10:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1d14:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1d18:	84 ea       	ldi	r24, 0xA4	; 164
    1d1a:	80 83       	st	Z, r24
    1d1c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1d20:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1d24:	86 ea       	ldi	r24, 0xA6	; 166
    1d26:	80 83       	st	Z, r24
    1d28:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1d2c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1d30:	8f ea       	ldi	r24, 0xAF	; 175
    1d32:	80 83       	st	Z, r24
	      oled_wrc(0xad);        //master configuration
	      oled_wrc(0x00);
	      oled_wrc(0xa4);        //out follows RAM content
	      oled_wrc(0xa6);        //set normal display
	      oled_wrc(0xaf);        // display on
		  oled_clear_screen();
    1d34:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <oled_clear_screen>
		  oled_goto_pos(0,0);
    1d38:	60 e0       	ldi	r22, 0x00	; 0
    1d3a:	80 e0       	ldi	r24, 0x00	; 0
    1d3c:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_goto_pos>
    1d40:	08 95       	ret

00001d42 <oled_print_screen_progmem>:

	
}

void oled_print_screen_progmem(int screenoffset){
    1d42:	ef 92       	push	r14
    1d44:	ff 92       	push	r15
    1d46:	1f 93       	push	r17
    1d48:	cf 93       	push	r28
    1d4a:	df 93       	push	r29
    1d4c:	cd b7       	in	r28, 0x3d	; 61
    1d4e:	de b7       	in	r29, 0x3e	; 62
    1d50:	60 97       	sbiw	r28, 0x10	; 16
    1d52:	0f b6       	in	r0, 0x3f	; 63
    1d54:	f8 94       	cli
    1d56:	de bf       	out	0x3e, r29	; 62
    1d58:	0f be       	out	0x3f, r0	; 63
    1d5a:	cd bf       	out	0x3d, r28	; 61
    1d5c:	88 0f       	add	r24, r24
    1d5e:	99 1f       	adc	r25, r25
    1d60:	9c 01       	movw	r18, r24
    1d62:	2a 5e       	subi	r18, 0xEA	; 234
    1d64:	35 4f       	sbci	r19, 0xF5	; 245
    1d66:	79 01       	movw	r14, r18
	char buffer[16];
	for(unsigned char i=0; i<8; i++){
    1d68:	10 e0       	ldi	r17, 0x00	; 0
		oled_goto_page(i);
    1d6a:	81 2f       	mov	r24, r17
    1d6c:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
		strcpy_P(buffer,(PGM_P)pgm_read_word(&table[i]+screenoffset));
    1d70:	f7 01       	movw	r30, r14
    1d72:	65 91       	lpm	r22, Z+
    1d74:	74 91       	lpm	r23, Z
    1d76:	ce 01       	movw	r24, r28
    1d78:	01 96       	adiw	r24, 0x01	; 1
    1d7a:	0e 94 af 13 	call	0x275e	; 0x275e <strcpy_P>
		oled_center_print(buffer,8);
    1d7e:	68 e0       	ldi	r22, 0x08	; 8
    1d80:	70 e0       	ldi	r23, 0x00	; 0
    1d82:	ce 01       	movw	r24, r28
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	0e 94 90 0c 	call	0x1920	; 0x1920 <oled_center_print>
	
}

void oled_print_screen_progmem(int screenoffset){
	char buffer[16];
	for(unsigned char i=0; i<8; i++){
    1d8a:	1f 5f       	subi	r17, 0xFF	; 255
    1d8c:	32 e0       	ldi	r19, 0x02	; 2
    1d8e:	e3 0e       	add	r14, r19
    1d90:	f1 1c       	adc	r15, r1
    1d92:	18 30       	cpi	r17, 0x08	; 8
    1d94:	51 f7       	brne	.-44     	; 0x1d6a <oled_print_screen_progmem+0x28>
		oled_goto_page(i);
		strcpy_P(buffer,(PGM_P)pgm_read_word(&table[i]+screenoffset));
		oled_center_print(buffer,8);
	}
}
    1d96:	60 96       	adiw	r28, 0x10	; 16
    1d98:	0f b6       	in	r0, 0x3f	; 63
    1d9a:	f8 94       	cli
    1d9c:	de bf       	out	0x3e, r29	; 62
    1d9e:	0f be       	out	0x3f, r0	; 63
    1da0:	cd bf       	out	0x3d, r28	; 61
    1da2:	df 91       	pop	r29
    1da4:	cf 91       	pop	r28
    1da6:	1f 91       	pop	r17
    1da8:	ff 90       	pop	r15
    1daa:	ef 90       	pop	r14
    1dac:	08 95       	ret

00001dae <oled_print_page_progmem>:

void oled_print_page_progmem(int screenoffset, int pageOffset){
    1dae:	ef 92       	push	r14
    1db0:	ff 92       	push	r15
    1db2:	0f 93       	push	r16
    1db4:	1f 93       	push	r17
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
    1dba:	cd b7       	in	r28, 0x3d	; 61
    1dbc:	de b7       	in	r29, 0x3e	; 62
    1dbe:	60 97       	sbiw	r28, 0x10	; 16
    1dc0:	0f b6       	in	r0, 0x3f	; 63
    1dc2:	f8 94       	cli
    1dc4:	de bf       	out	0x3e, r29	; 62
    1dc6:	0f be       	out	0x3f, r0	; 63
    1dc8:	cd bf       	out	0x3d, r28	; 61
    1dca:	8c 01       	movw	r16, r24
    1dcc:	7b 01       	movw	r14, r22
	char buffer[16];
	oled_goto_page(pageOffset);
    1dce:	86 2f       	mov	r24, r22
    1dd0:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
	strcpy_P(buffer,(PGM_P)pgm_read_word(&table[screenoffset+pageOffset]));
    1dd4:	f7 01       	movw	r30, r14
    1dd6:	e0 0f       	add	r30, r16
    1dd8:	f1 1f       	adc	r31, r17
    1dda:	ee 0f       	add	r30, r30
    1ddc:	ff 1f       	adc	r31, r31
    1dde:	ea 5e       	subi	r30, 0xEA	; 234
    1de0:	f5 4f       	sbci	r31, 0xF5	; 245
    1de2:	65 91       	lpm	r22, Z+
    1de4:	74 91       	lpm	r23, Z
    1de6:	ce 01       	movw	r24, r28
    1de8:	01 96       	adiw	r24, 0x01	; 1
    1dea:	0e 94 af 13 	call	0x275e	; 0x275e <strcpy_P>
	oled_center_print(buffer,8);
    1dee:	68 e0       	ldi	r22, 0x08	; 8
    1df0:	70 e0       	ldi	r23, 0x00	; 0
    1df2:	ce 01       	movw	r24, r28
    1df4:	01 96       	adiw	r24, 0x01	; 1
    1df6:	0e 94 90 0c 	call	0x1920	; 0x1920 <oled_center_print>
}
    1dfa:	60 96       	adiw	r28, 0x10	; 16
    1dfc:	0f b6       	in	r0, 0x3f	; 63
    1dfe:	f8 94       	cli
    1e00:	de bf       	out	0x3e, r29	; 62
    1e02:	0f be       	out	0x3f, r0	; 63
    1e04:	cd bf       	out	0x3d, r28	; 61
    1e06:	df 91       	pop	r29
    1e08:	cf 91       	pop	r28
    1e0a:	1f 91       	pop	r17
    1e0c:	0f 91       	pop	r16
    1e0e:	ff 90       	pop	r15
    1e10:	ef 90       	pop	r14
    1e12:	08 95       	ret

00001e14 <oled_print_time_used>:

void oled_print_time_used(void){
    1e14:	1f 93       	push	r17
    1e16:	cf 93       	push	r28
    1e18:	df 93       	push	r29
	int mseconds;
	int digit3char;
	int digit2char;
	int digit1char;
	int mdigitchar;
	seconds = timer_get_seconds();
    1e1a:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <timer_get_seconds>
    1e1e:	ec 01       	movw	r28, r24
	mseconds = timer_get_mseconds();
    1e20:	0e 94 f8 0f 	call	0x1ff0	; 0x1ff0 <timer_get_mseconds>
    1e24:	18 2f       	mov	r17, r24
	digit3char = digit3+'0';
	digit2char = digit2+'0';
	digit1char = digit1+'0';
	mdigitchar = mdigit+'0';
	
	oled_goto_page(4);
    1e26:	84 e0       	ldi	r24, 0x04	; 4
    1e28:	0e 94 16 0b 	call	0x162c	; 0x162c <oled_goto_page>
	oled_goto_col(63-(5*(8/2)));
    1e2c:	8b e2       	ldi	r24, 0x2B	; 43
    1e2e:	0e 94 2e 0b 	call	0x165c	; 0x165c <oled_goto_col>
	oled_write_char(digit3char,8);
    1e32:	ce 01       	movw	r24, r28
    1e34:	64 e6       	ldi	r22, 0x64	; 100
    1e36:	70 e0       	ldi	r23, 0x00	; 0
    1e38:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    1e3c:	86 2f       	mov	r24, r22
    1e3e:	68 e0       	ldi	r22, 0x08	; 8
    1e40:	70 e0       	ldi	r23, 0x00	; 0
    1e42:	80 5d       	subi	r24, 0xD0	; 208
    1e44:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
	oled_write_char(digit2char,8);
    1e48:	ce 01       	movw	r24, r28
    1e4a:	6a e0       	ldi	r22, 0x0A	; 10
    1e4c:	70 e0       	ldi	r23, 0x00	; 0
    1e4e:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    1e52:	96 2f       	mov	r25, r22
    1e54:	c8 2f       	mov	r28, r24
    1e56:	68 e0       	ldi	r22, 0x08	; 8
    1e58:	70 e0       	ldi	r23, 0x00	; 0
    1e5a:	80 e3       	ldi	r24, 0x30	; 48
    1e5c:	89 0f       	add	r24, r25
    1e5e:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
	oled_write_char(digit1char,8);
    1e62:	68 e0       	ldi	r22, 0x08	; 8
    1e64:	70 e0       	ldi	r23, 0x00	; 0
    1e66:	80 e3       	ldi	r24, 0x30	; 48
    1e68:	8c 0f       	add	r24, r28
    1e6a:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
	oled_write_char(44,8); //44=","
    1e6e:	68 e0       	ldi	r22, 0x08	; 8
    1e70:	70 e0       	ldi	r23, 0x00	; 0
    1e72:	8c e2       	ldi	r24, 0x2C	; 44
    1e74:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
	oled_write_char(mdigitchar,8);
    1e78:	68 e0       	ldi	r22, 0x08	; 8
    1e7a:	70 e0       	ldi	r23, 0x00	; 0
    1e7c:	80 e3       	ldi	r24, 0x30	; 48
    1e7e:	81 0f       	add	r24, r17
    1e80:	0e 94 a1 0b 	call	0x1742	; 0x1742 <oled_write_char>
    1e84:	df 91       	pop	r29
    1e86:	cf 91       	pop	r28
    1e88:	1f 91       	pop	r17
    1e8a:	08 95       	ret

00001e8c <slider_getPosition>:
    1e8c:	1f 93       	push	r17
    1e8e:	cf 93       	push	r28
    1e90:	df 93       	push	r29
    1e92:	82 e0       	ldi	r24, 0x02	; 2
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
    1e9a:	ec 01       	movw	r28, r24
    1e9c:	83 e0       	ldi	r24, 0x03	; 3
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
    1ea4:	9c 01       	movw	r18, r24
    1ea6:	48 2f       	mov	r20, r24
    1ea8:	c0 38       	cpi	r28, 0x80	; 128
    1eaa:	78 f0       	brcs	.+30     	; 0x1eca <slider_getPosition+0x3e>
    1eac:	dd 27       	eor	r29, r29
    1eae:	cf 57       	subi	r28, 0x7F	; 127
    1eb0:	d1 09       	sbc	r29, r1
    1eb2:	54 e6       	ldi	r21, 0x64	; 100
    1eb4:	5c 9f       	mul	r21, r28
    1eb6:	c0 01       	movw	r24, r0
    1eb8:	5d 9f       	mul	r21, r29
    1eba:	90 0d       	add	r25, r0
    1ebc:	11 24       	eor	r1, r1
    1ebe:	6f e7       	ldi	r22, 0x7F	; 127
    1ec0:	70 e0       	ldi	r23, 0x00	; 0
    1ec2:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    1ec6:	fb 01       	movw	r30, r22
    1ec8:	13 c0       	rjmp	.+38     	; 0x1ef0 <slider_getPosition+0x64>
    1eca:	cf 37       	cpi	r28, 0x7F	; 127
    1ecc:	78 f4       	brcc	.+30     	; 0x1eec <slider_getPosition+0x60>
    1ece:	dd 27       	eor	r29, r29
    1ed0:	cf 57       	subi	r28, 0x7F	; 127
    1ed2:	d1 09       	sbc	r29, r1
    1ed4:	54 e6       	ldi	r21, 0x64	; 100
    1ed6:	5c 9f       	mul	r21, r28
    1ed8:	c0 01       	movw	r24, r0
    1eda:	5d 9f       	mul	r21, r29
    1edc:	90 0d       	add	r25, r0
    1ede:	11 24       	eor	r1, r1
    1ee0:	6f e7       	ldi	r22, 0x7F	; 127
    1ee2:	70 e0       	ldi	r23, 0x00	; 0
    1ee4:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    1ee8:	fb 01       	movw	r30, r22
    1eea:	02 c0       	rjmp	.+4      	; 0x1ef0 <slider_getPosition+0x64>
    1eec:	e0 e0       	ldi	r30, 0x00	; 0
    1eee:	f0 e0       	ldi	r31, 0x00	; 0
    1ef0:	40 38       	cpi	r20, 0x80	; 128
    1ef2:	78 f0       	brcs	.+30     	; 0x1f12 <slider_getPosition+0x86>
    1ef4:	33 27       	eor	r19, r19
    1ef6:	2f 57       	subi	r18, 0x7F	; 127
    1ef8:	31 09       	sbc	r19, r1
    1efa:	44 e6       	ldi	r20, 0x64	; 100
    1efc:	42 9f       	mul	r20, r18
    1efe:	c0 01       	movw	r24, r0
    1f00:	43 9f       	mul	r20, r19
    1f02:	90 0d       	add	r25, r0
    1f04:	11 24       	eor	r1, r1
    1f06:	6f e7       	ldi	r22, 0x7F	; 127
    1f08:	70 e0       	ldi	r23, 0x00	; 0
    1f0a:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    1f0e:	9b 01       	movw	r18, r22
    1f10:	13 c0       	rjmp	.+38     	; 0x1f38 <slider_getPosition+0xac>
    1f12:	4f 37       	cpi	r20, 0x7F	; 127
    1f14:	78 f4       	brcc	.+30     	; 0x1f34 <slider_getPosition+0xa8>
    1f16:	33 27       	eor	r19, r19
    1f18:	2f 57       	subi	r18, 0x7F	; 127
    1f1a:	31 09       	sbc	r19, r1
    1f1c:	44 e6       	ldi	r20, 0x64	; 100
    1f1e:	42 9f       	mul	r20, r18
    1f20:	c0 01       	movw	r24, r0
    1f22:	43 9f       	mul	r20, r19
    1f24:	90 0d       	add	r25, r0
    1f26:	11 24       	eor	r1, r1
    1f28:	6f e7       	ldi	r22, 0x7F	; 127
    1f2a:	70 e0       	ldi	r23, 0x00	; 0
    1f2c:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    1f30:	9b 01       	movw	r18, r22
    1f32:	02 c0       	rjmp	.+4      	; 0x1f38 <slider_getPosition+0xac>
    1f34:	20 e0       	ldi	r18, 0x00	; 0
    1f36:	30 e0       	ldi	r19, 0x00	; 0
    1f38:	bf 01       	movw	r22, r30
    1f3a:	c9 01       	movw	r24, r18
    1f3c:	df 91       	pop	r29
    1f3e:	cf 91       	pop	r28
    1f40:	1f 91       	pop	r17
    1f42:	08 95       	ret

00001f44 <slider_sendPositionButtonCan>:
    1f44:	cf 93       	push	r28
    1f46:	df 93       	push	r29
    1f48:	cd b7       	in	r28, 0x3d	; 61
    1f4a:	de b7       	in	r29, 0x3e	; 62
    1f4c:	2b 97       	sbiw	r28, 0x0b	; 11
    1f4e:	0f b6       	in	r0, 0x3f	; 63
    1f50:	f8 94       	cli
    1f52:	de bf       	out	0x3e, r29	; 62
    1f54:	0f be       	out	0x3f, r0	; 63
    1f56:	cd bf       	out	0x3d, r28	; 61
    1f58:	21 e0       	ldi	r18, 0x01	; 1
    1f5a:	30 e0       	ldi	r19, 0x00	; 0
    1f5c:	3a 83       	std	Y+2, r19	; 0x02
    1f5e:	29 83       	std	Y+1, r18	; 0x01
    1f60:	93 e0       	ldi	r25, 0x03	; 3
    1f62:	9b 83       	std	Y+3, r25	; 0x03
    1f64:	6c 83       	std	Y+4, r22	; 0x04
    1f66:	8d 83       	std	Y+5, r24	; 0x05
    1f68:	86 b3       	in	r24, 0x16	; 22
    1f6a:	81 70       	andi	r24, 0x01	; 1
    1f6c:	8e 83       	std	Y+6, r24	; 0x06
    1f6e:	ce 01       	movw	r24, r28
    1f70:	01 96       	adiw	r24, 0x01	; 1
    1f72:	0e 94 97 06 	call	0xd2e	; 0xd2e <can_send_message>
    1f76:	2b 96       	adiw	r28, 0x0b	; 11
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	cd bf       	out	0x3d, r28	; 61
    1f82:	df 91       	pop	r29
    1f84:	cf 91       	pop	r28
    1f86:	08 95       	ret

00001f88 <spi_init>:
    1f88:	80 eb       	ldi	r24, 0xB0	; 176
    1f8a:	87 bb       	out	0x17, r24	; 23
    1f8c:	81 e5       	ldi	r24, 0x51	; 81
    1f8e:	8d b9       	out	0x0d, r24	; 13
    1f90:	c4 9a       	sbi	0x18, 4	; 24
    1f92:	c2 9a       	sbi	0x18, 2	; 24
    1f94:	08 95       	ret

00001f96 <spi_send>:
    1f96:	8f b9       	out	0x0f, r24	; 15
    1f98:	77 9b       	sbis	0x0e, 7	; 14
    1f9a:	fe cf       	rjmp	.-4      	; 0x1f98 <spi_send+0x2>
    1f9c:	08 95       	ret

00001f9e <spi_read>:
    1f9e:	85 e4       	ldi	r24, 0x45	; 69
    1fa0:	8f b9       	out	0x0f, r24	; 15
    1fa2:	77 9b       	sbis	0x0e, 7	; 14
    1fa4:	fe cf       	rjmp	.-4      	; 0x1fa2 <spi_read+0x4>
    1fa6:	8f b1       	in	r24, 0x0f	; 15
    1fa8:	08 95       	ret

00001faa <timer_init>:
static int mseconds = 0;
static uint8_t control;

void timer_init(void){
	
	cli();
    1faa:	f8 94       	cli
	counter = 0;
    1fac:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <counter+0x1>
    1fb0:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <counter>
	seconds = 0;
    1fb4:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <seconds+0x1>
    1fb8:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <seconds>
	mseconds = 0;
    1fbc:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <mseconds+0x1>
    1fc0:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <mseconds>
	TCCR0 |= (1<<CS02);
    1fc4:	83 b7       	in	r24, 0x33	; 51
    1fc6:	84 60       	ori	r24, 0x04	; 4
    1fc8:	83 bf       	out	0x33, r24	; 51
	
	
	TCCR0 |= (1<<WGM01); //Set mode to 'Clear Timer on Compare'
    1fca:	83 b7       	in	r24, 0x33	; 51
    1fcc:	88 60       	ori	r24, 0x08	; 8
    1fce:	83 bf       	out	0x33, r24	; 51
	TCCR0 &= ~(1<<WGM00);
    1fd0:	83 b7       	in	r24, 0x33	; 51
    1fd2:	8f 7b       	andi	r24, 0xBF	; 191
    1fd4:	83 bf       	out	0x33, r24	; 51
	
	int8_t counterVal = 192; //set the number that counter stops and creates interrupt at.
	OCR0 |= counterVal;
    1fd6:	81 b7       	in	r24, 0x31	; 49
    1fd8:	80 6c       	ori	r24, 0xC0	; 192
    1fda:	81 bf       	out	0x31, r24	; 49

	TIMSK |= (1<< OCIE0); //Enable interrupt by Output Compare
    1fdc:	89 b7       	in	r24, 0x39	; 57
    1fde:	81 60       	ori	r24, 0x01	; 1
    1fe0:	89 bf       	out	0x39, r24	; 57
	sei();
    1fe2:	78 94       	sei
    1fe4:	08 95       	ret

00001fe6 <timer_get_seconds>:
}

int timer_get_seconds(void){
	return seconds;
}
    1fe6:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <seconds>
    1fea:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <seconds+0x1>
    1fee:	08 95       	ret

00001ff0 <timer_get_mseconds>:

int timer_get_mseconds(void){
	return mseconds;
}
    1ff0:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <mseconds>
    1ff4:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <mseconds+0x1>
    1ff8:	08 95       	ret

00001ffa <__vector_16>:

ISR(TIMER0_COMP_vect){
    1ffa:	1f 92       	push	r1
    1ffc:	0f 92       	push	r0
    1ffe:	0f b6       	in	r0, 0x3f	; 63
    2000:	0f 92       	push	r0
    2002:	11 24       	eor	r1, r1
    2004:	2f 93       	push	r18
    2006:	3f 93       	push	r19
    2008:	4f 93       	push	r20
    200a:	5f 93       	push	r21
    200c:	6f 93       	push	r22
    200e:	7f 93       	push	r23
    2010:	8f 93       	push	r24
    2012:	9f 93       	push	r25
    2014:	af 93       	push	r26
    2016:	bf 93       	push	r27
    2018:	ef 93       	push	r30
    201a:	ff 93       	push	r31
	
	counter++;
    201c:	20 91 d0 01 	lds	r18, 0x01D0	; 0x8001d0 <counter>
    2020:	30 91 d1 01 	lds	r19, 0x01D1	; 0x8001d1 <counter+0x1>
    2024:	2f 5f       	subi	r18, 0xFF	; 255
    2026:	3f 4f       	sbci	r19, 0xFF	; 255
    2028:	30 93 d1 01 	sts	0x01D1, r19	; 0x8001d1 <counter+0x1>
    202c:	20 93 d0 01 	sts	0x01D0, r18	; 0x8001d0 <counter>
	if(counter%10 == 0){
    2030:	c9 01       	movw	r24, r18
    2032:	6a e0       	ldi	r22, 0x0A	; 10
    2034:	70 e0       	ldi	r23, 0x00	; 0
    2036:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    203a:	89 2b       	or	r24, r25
    203c:	a9 f5       	brne	.+106    	; 0x20a8 <__vector_16+0xae>
		mseconds++;
    203e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <mseconds>
    2042:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <mseconds+0x1>
    2046:	01 96       	adiw	r24, 0x01	; 1
    2048:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <mseconds+0x1>
    204c:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <mseconds>
		
		if(counter%100 == 0){
    2050:	c9 01       	movw	r24, r18
    2052:	64 e6       	ldi	r22, 0x64	; 100
    2054:	70 e0       	ldi	r23, 0x00	; 0
    2056:	0e 94 a0 11 	call	0x2340	; 0x2340 <__divmodhi4>
    205a:	89 2b       	or	r24, r25
    205c:	69 f4       	brne	.+26     	; 0x2078 <__vector_16+0x7e>
			seconds++;
    205e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <seconds>
    2062:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <seconds+0x1>
    2066:	01 96       	adiw	r24, 0x01	; 1
    2068:	90 93 cf 01 	sts	0x01CF, r25	; 0x8001cf <seconds+0x1>
    206c:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <seconds>
			mseconds = 0;
    2070:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <mseconds+0x1>
    2074:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <mseconds>
		}
		printf("Time: %d,%d \n\r", seconds, mseconds);
    2078:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <mseconds+0x1>
    207c:	8f 93       	push	r24
    207e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <mseconds>
    2082:	8f 93       	push	r24
    2084:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <seconds+0x1>
    2088:	8f 93       	push	r24
    208a:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <seconds>
    208e:	8f 93       	push	r24
    2090:	8a e8       	ldi	r24, 0x8A	; 138
    2092:	91 e0       	ldi	r25, 0x01	; 1
    2094:	9f 93       	push	r25
    2096:	8f 93       	push	r24
    2098:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
    209c:	0f 90       	pop	r0
    209e:	0f 90       	pop	r0
    20a0:	0f 90       	pop	r0
    20a2:	0f 90       	pop	r0
    20a4:	0f 90       	pop	r0
    20a6:	0f 90       	pop	r0
	}
}
    20a8:	ff 91       	pop	r31
    20aa:	ef 91       	pop	r30
    20ac:	bf 91       	pop	r27
    20ae:	af 91       	pop	r26
    20b0:	9f 91       	pop	r25
    20b2:	8f 91       	pop	r24
    20b4:	7f 91       	pop	r23
    20b6:	6f 91       	pop	r22
    20b8:	5f 91       	pop	r21
    20ba:	4f 91       	pop	r20
    20bc:	3f 91       	pop	r19
    20be:	2f 91       	pop	r18
    20c0:	0f 90       	pop	r0
    20c2:	0f be       	out	0x3f, r0	; 63
    20c4:	0f 90       	pop	r0
    20c6:	1f 90       	pop	r1
    20c8:	18 95       	reti

000020ca <timer2_init>:

void timer2_init(void){
	cli();
    20ca:	f8 94       	cli
	TCCR2 = 0;
    20cc:	17 bc       	out	0x27, r1	; 39
	TCCR2 |= (1 << CS22) | (1 << CS21) | (1 << CS20); //Clock selection. MCK/1024 = 4,8 KHz
    20ce:	87 b5       	in	r24, 0x27	; 39
    20d0:	87 60       	ori	r24, 0x07	; 7
    20d2:	87 bd       	out	0x27, r24	; 39
	
	int8_t counterVal = 255; //set the number that counter stops and creates interrupt at.
	OCR2 |= counterVal;
    20d4:	82 b5       	in	r24, 0x22	; 34
    20d6:	8f ef       	ldi	r24, 0xFF	; 255
    20d8:	82 bd       	out	0x22, r24	; 34
	
	TCCR2 |= (1 << WGM21); //Mode of operation: Clear Timer on Compare
    20da:	87 b5       	in	r24, 0x27	; 39
    20dc:	88 60       	ori	r24, 0x08	; 8
    20de:	87 bd       	out	0x27, r24	; 39
	TCCR2 &= ~(1 << WGM20);
    20e0:	87 b5       	in	r24, 0x27	; 39
    20e2:	8f 7b       	andi	r24, 0xBF	; 191
    20e4:	87 bd       	out	0x27, r24	; 39
	
	TIMSK |= (1 << OCIE2); //Enable interrupts on Output Compare event
    20e6:	89 b7       	in	r24, 0x39	; 57
    20e8:	80 61       	ori	r24, 0x10	; 16
    20ea:	89 bf       	out	0x39, r24	; 57
	sei();
    20ec:	78 94       	sei
    20ee:	08 95       	ret

000020f0 <timer2_stop>:
}

void timer2_stop(void){
	TCCR2 &= ~((1 << CS22) | (1 << CS21)); //Stop timer
    20f0:	87 b5       	in	r24, 0x27	; 39
    20f2:	89 7f       	andi	r24, 0xF9	; 249
    20f4:	87 bd       	out	0x27, r24	; 39
	TCNT2 = 0;
    20f6:	13 bc       	out	0x23, r1	; 35
	
	TIMSK &= ~(1 << OCIE2);
    20f8:	89 b7       	in	r24, 0x39	; 57
    20fa:	8f 7e       	andi	r24, 0xEF	; 239
    20fc:	89 bf       	out	0x39, r24	; 57
    20fe:	08 95       	ret

00002100 <timer2_start>:
}

void timer2_start(void){
	TCCR2 |= (1 << CS22) | (1 << CS21) | (1 << CS20); //Clock selection. MCK/1024 = 4,8 KHz
    2100:	87 b5       	in	r24, 0x27	; 39
    2102:	87 60       	ori	r24, 0x07	; 7
    2104:	87 bd       	out	0x27, r24	; 39
	TIMSK |= (1 << OCIE2);
    2106:	89 b7       	in	r24, 0x39	; 57
    2108:	80 61       	ori	r24, 0x10	; 16
    210a:	89 bf       	out	0x39, r24	; 57
    210c:	08 95       	ret

0000210e <timer2_set_ctrl>:
}

void timer2_set_ctrl(uint8_t ctrl){
	control = ctrl;
    210e:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <control>
    2112:	08 95       	ret

00002114 <__vector_10>:
}

ISR(TIMER2_COMP_vect){
    2114:	1f 92       	push	r1
    2116:	0f 92       	push	r0
    2118:	0f b6       	in	r0, 0x3f	; 63
    211a:	0f 92       	push	r0
    211c:	11 24       	eor	r1, r1
    211e:	2f 93       	push	r18
    2120:	3f 93       	push	r19
    2122:	4f 93       	push	r20
    2124:	5f 93       	push	r21
    2126:	6f 93       	push	r22
    2128:	7f 93       	push	r23
    212a:	8f 93       	push	r24
    212c:	9f 93       	push	r25
    212e:	af 93       	push	r26
    2130:	bf 93       	push	r27
    2132:	ef 93       	push	r30
    2134:	ff 93       	push	r31
	if(control){
    2136:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <control>
    213a:	88 23       	and	r24, r24
    213c:	29 f0       	breq	.+10     	; 0x2148 <__vector_10+0x34>
		slider_sendPositionButtonCan(slider_getPosition());
    213e:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <slider_getPosition>
    2142:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <slider_sendPositionButtonCan>
    2146:	04 c0       	rjmp	.+8      	; 0x2150 <__vector_10+0x3c>
		
	}
	else if(!control){
		joystick_sendPositionButtonCan(joystick_getPosition());
    2148:	0e 94 40 07 	call	0xe80	; 0xe80 <joystick_getPosition>
    214c:	0e 94 d6 07 	call	0xfac	; 0xfac <joystick_sendPositionButtonCan>
	}
	else {
		printf("XMEM error");
	}
    2150:	ff 91       	pop	r31
    2152:	ef 91       	pop	r30
    2154:	bf 91       	pop	r27
    2156:	af 91       	pop	r26
    2158:	9f 91       	pop	r25
    215a:	8f 91       	pop	r24
    215c:	7f 91       	pop	r23
    215e:	6f 91       	pop	r22
    2160:	5f 91       	pop	r21
    2162:	4f 91       	pop	r20
    2164:	3f 91       	pop	r19
    2166:	2f 91       	pop	r18
    2168:	0f 90       	pop	r0
    216a:	0f be       	out	0x3f, r0	; 63
    216c:	0f 90       	pop	r0
    216e:	1f 90       	pop	r1
    2170:	18 95       	reti

00002172 <USART_Init>:
    2172:	90 bd       	out	0x20, r25	; 32
    2174:	89 b9       	out	0x09, r24	; 9
    2176:	88 e1       	ldi	r24, 0x18	; 24
    2178:	8a b9       	out	0x0a, r24	; 10
    217a:	8e e8       	ldi	r24, 0x8E	; 142
    217c:	80 bd       	out	0x20, r24	; 32
    217e:	60 e0       	ldi	r22, 0x00	; 0
    2180:	70 e0       	ldi	r23, 0x00	; 0
    2182:	8a ec       	ldi	r24, 0xCA	; 202
    2184:	90 e1       	ldi	r25, 0x10	; 16
    2186:	0e 94 ca 13 	call	0x2794	; 0x2794 <fdevopen>
    218a:	08 95       	ret

0000218c <USART_Transmit>:
    218c:	5d 9b       	sbis	0x0b, 5	; 11
    218e:	fe cf       	rjmp	.-4      	; 0x218c <USART_Transmit>
    2190:	8c b9       	out	0x0c, r24	; 12
    2192:	08 95       	ret

00002194 <USART_PUTCHAR>:
    2194:	0e 94 c6 10 	call	0x218c	; 0x218c <USART_Transmit>
    2198:	80 e0       	ldi	r24, 0x00	; 0
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	08 95       	ret

0000219e <xmem_init>:
#include <avr/io.h>
#include "DRIVER_XMEM.h"


void xmem_init(void){
	MCUCR |= (1 << SRE); //enable XMEM
    219e:	85 b7       	in	r24, 0x35	; 53
    21a0:	80 68       	ori	r24, 0x80	; 128
    21a2:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //Mask unused bits/pins, which is PC4-PC7
    21a4:	80 b7       	in	r24, 0x30	; 48
    21a6:	80 62       	ori	r24, 0x20	; 32
    21a8:	80 bf       	out	0x30, r24	; 48
    21aa:	08 95       	ret

000021ac <xmem_write>:
}

void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	ext_mem[addr] = data;
    21ac:	fb 01       	movw	r30, r22
    21ae:	f0 5f       	subi	r31, 0xF0	; 240
    21b0:	80 83       	st	Z, r24
    21b2:	08 95       	ret

000021b4 <xmem_read>:
}

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	uint8_t ret_val = ext_mem[addr];
    21b4:	90 5f       	subi	r25, 0xF0	; 240
    21b6:	fc 01       	movw	r30, r24
    21b8:	80 81       	ld	r24, Z
	return ret_val;
}
    21ba:	08 95       	ret

000021bc <mcp_read>:
    21bc:	cf 93       	push	r28
    21be:	c8 2f       	mov	r28, r24
    21c0:	c4 98       	cbi	0x18, 4	; 24
    21c2:	83 e0       	ldi	r24, 0x03	; 3
    21c4:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    21c8:	8c 2f       	mov	r24, r28
    21ca:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    21ce:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <spi_read>
    21d2:	c4 9a       	sbi	0x18, 4	; 24
    21d4:	cf 91       	pop	r28
    21d6:	08 95       	ret

000021d8 <mcp_write>:
    21d8:	cf 93       	push	r28
    21da:	df 93       	push	r29
    21dc:	d8 2f       	mov	r29, r24
    21de:	c6 2f       	mov	r28, r22
    21e0:	c4 98       	cbi	0x18, 4	; 24
    21e2:	82 e0       	ldi	r24, 0x02	; 2
    21e4:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    21e8:	8d 2f       	mov	r24, r29
    21ea:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    21ee:	8c 2f       	mov	r24, r28
    21f0:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    21f4:	c4 9a       	sbi	0x18, 4	; 24
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
    21fa:	08 95       	ret

000021fc <mcp_req_to_send>:
    21fc:	c4 98       	cbi	0x18, 4	; 24
    21fe:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    2202:	c4 9a       	sbi	0x18, 4	; 24
    2204:	08 95       	ret

00002206 <mcp_bit_modify>:
    2206:	1f 93       	push	r17
    2208:	cf 93       	push	r28
    220a:	df 93       	push	r29
    220c:	18 2f       	mov	r17, r24
    220e:	d6 2f       	mov	r29, r22
    2210:	c4 2f       	mov	r28, r20
    2212:	c4 98       	cbi	0x18, 4	; 24
    2214:	85 e0       	ldi	r24, 0x05	; 5
    2216:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    221a:	81 2f       	mov	r24, r17
    221c:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    2220:	8d 2f       	mov	r24, r29
    2222:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    2226:	8c 2f       	mov	r24, r28
    2228:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    222c:	c4 9a       	sbi	0x18, 4	; 24
    222e:	df 91       	pop	r29
    2230:	cf 91       	pop	r28
    2232:	1f 91       	pop	r17
    2234:	08 95       	ret

00002236 <mcp_reset>:
    2236:	c4 98       	cbi	0x18, 4	; 24
    2238:	80 ec       	ldi	r24, 0xC0	; 192
    223a:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <spi_send>
    223e:	c4 9a       	sbi	0x18, 4	; 24
    2240:	8f e3       	ldi	r24, 0x3F	; 63
    2242:	9c e9       	ldi	r25, 0x9C	; 156
    2244:	01 97       	sbiw	r24, 0x01	; 1
    2246:	f1 f7       	brne	.-4      	; 0x2244 <mcp_reset+0xe>
    2248:	00 c0       	rjmp	.+0      	; 0x224a <mcp_reset+0x14>
    224a:	00 00       	nop
    224c:	08 95       	ret

0000224e <mcp_init>:
    224e:	0e 94 c4 0f 	call	0x1f88	; 0x1f88 <spi_init>
    2252:	0e 94 1b 11 	call	0x2236	; 0x2236 <mcp_reset>
    2256:	8f e3       	ldi	r24, 0x3F	; 63
    2258:	9f e1       	ldi	r25, 0x1F	; 31
    225a:	01 97       	sbiw	r24, 0x01	; 1
    225c:	f1 f7       	brne	.-4      	; 0x225a <mcp_init+0xc>
    225e:	00 c0       	rjmp	.+0      	; 0x2260 <mcp_init+0x12>
    2260:	00 00       	nop
    2262:	8e e0       	ldi	r24, 0x0E	; 14
    2264:	0e 94 de 10 	call	0x21bc	; 0x21bc <mcp_read>
    2268:	98 2f       	mov	r25, r24
    226a:	90 7e       	andi	r25, 0xE0	; 224
    226c:	90 38       	cpi	r25, 0x80	; 128
    226e:	61 f0       	breq	.+24     	; 0x2288 <mcp_init+0x3a>
    2270:	1f 92       	push	r1
    2272:	8f 93       	push	r24
    2274:	89 e9       	ldi	r24, 0x99	; 153
    2276:	91 e0       	ldi	r25, 0x01	; 1
    2278:	9f 93       	push	r25
    227a:	8f 93       	push	r24
    227c:	0e 94 15 14 	call	0x282a	; 0x282a <printf>
    2280:	0f 90       	pop	r0
    2282:	0f 90       	pop	r0
    2284:	0f 90       	pop	r0
    2286:	0f 90       	pop	r0
    2288:	08 95       	ret

0000228a <main>:
    228a:	8f e1       	ldi	r24, 0x1F	; 31
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	0e 94 b9 10 	call	0x2172	; 0x2172 <USART_Init>
    2292:	0e 94 cf 10 	call	0x219e	; 0x219e <xmem_init>
    2296:	0e 94 17 0e 	call	0x1c2e	; 0x1c2e <oled_init>
    229a:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <menu_init>
    229e:	0e 94 59 06 	call	0xcb2	; 0xcb2 <adc_init>
    22a2:	0e 94 f0 06 	call	0xde0	; 0xde0 <joystick_calibrate>
    22a6:	0e 94 75 06 	call	0xcea	; 0xcea <can_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    22aa:	85 e0       	ldi	r24, 0x05	; 5
    22ac:	8a 95       	dec	r24
    22ae:	f1 f7       	brne	.-4      	; 0x22ac <main+0x22>
    22b0:	00 00       	nop
    22b2:	0e 94 3b 0a 	call	0x1476	; 0x1476 <navigate>
    22b6:	f9 cf       	rjmp	.-14     	; 0x22aa <main+0x20>

000022b8 <util_sort>:
    22b8:	cf 93       	push	r28
    22ba:	df 93       	push	r29
    22bc:	eb 01       	movw	r28, r22
    22be:	21 97       	sbiw	r28, 0x01	; 1
    22c0:	1c 16       	cp	r1, r28
    22c2:	1d 06       	cpc	r1, r29
    22c4:	14 f5       	brge	.+68     	; 0x230a <util_sort+0x52>
    22c6:	61 50       	subi	r22, 0x01	; 1
    22c8:	70 48       	sbci	r23, 0x80	; 128
    22ca:	66 0f       	add	r22, r22
    22cc:	77 1f       	adc	r23, r23
    22ce:	68 0f       	add	r22, r24
    22d0:	79 1f       	adc	r23, r25
    22d2:	17 c0       	rjmp	.+46     	; 0x2302 <util_sort+0x4a>
    22d4:	fc 01       	movw	r30, r24
    22d6:	21 91       	ld	r18, Z+
    22d8:	31 91       	ld	r19, Z+
    22da:	40 81       	ld	r20, Z
    22dc:	51 81       	ldd	r21, Z+1	; 0x01
    22de:	42 17       	cp	r20, r18
    22e0:	53 07       	cpc	r21, r19
    22e2:	34 f4       	brge	.+12     	; 0x22f0 <util_sort+0x38>
    22e4:	df 01       	movw	r26, r30
    22e6:	12 97       	sbiw	r26, 0x02	; 2
    22e8:	4d 93       	st	X+, r20
    22ea:	5c 93       	st	X, r21
    22ec:	31 83       	std	Z+1, r19	; 0x01
    22ee:	20 83       	st	Z, r18
    22f0:	e6 17       	cp	r30, r22
    22f2:	f7 07       	cpc	r31, r23
    22f4:	81 f7       	brne	.-32     	; 0x22d6 <util_sort+0x1e>
    22f6:	21 97       	sbiw	r28, 0x01	; 1
    22f8:	62 50       	subi	r22, 0x02	; 2
    22fa:	71 09       	sbc	r23, r1
    22fc:	68 17       	cp	r22, r24
    22fe:	79 07       	cpc	r23, r25
    2300:	21 f0       	breq	.+8      	; 0x230a <util_sort+0x52>
    2302:	1c 16       	cp	r1, r28
    2304:	1d 06       	cpc	r1, r29
    2306:	34 f3       	brlt	.-52     	; 0x22d4 <util_sort+0x1c>
    2308:	f6 cf       	rjmp	.-20     	; 0x22f6 <util_sort+0x3e>
    230a:	df 91       	pop	r29
    230c:	cf 91       	pop	r28
    230e:	08 95       	ret

00002310 <util_median>:
    2310:	0f 93       	push	r16
    2312:	1f 93       	push	r17
    2314:	cf 93       	push	r28
    2316:	df 93       	push	r29
    2318:	8c 01       	movw	r16, r24
    231a:	eb 01       	movw	r28, r22
    231c:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <util_sort>
    2320:	21 96       	adiw	r28, 0x01	; 1
    2322:	ce 01       	movw	r24, r28
    2324:	0a f4       	brpl	.+2      	; 0x2328 <util_median+0x18>
    2326:	01 96       	adiw	r24, 0x01	; 1
    2328:	fc 01       	movw	r30, r24
    232a:	ee 7f       	andi	r30, 0xFE	; 254
    232c:	32 97       	sbiw	r30, 0x02	; 2
    232e:	e0 0f       	add	r30, r16
    2330:	f1 1f       	adc	r31, r17
    2332:	80 81       	ld	r24, Z
    2334:	91 81       	ldd	r25, Z+1	; 0x01
    2336:	df 91       	pop	r29
    2338:	cf 91       	pop	r28
    233a:	1f 91       	pop	r17
    233c:	0f 91       	pop	r16
    233e:	08 95       	ret

00002340 <__divmodhi4>:
    2340:	97 fb       	bst	r25, 7
    2342:	07 2e       	mov	r0, r23
    2344:	16 f4       	brtc	.+4      	; 0x234a <__divmodhi4+0xa>
    2346:	00 94       	com	r0
    2348:	07 d0       	rcall	.+14     	; 0x2358 <__divmodhi4_neg1>
    234a:	77 fd       	sbrc	r23, 7
    234c:	09 d0       	rcall	.+18     	; 0x2360 <__divmodhi4_neg2>
    234e:	0e 94 b4 11 	call	0x2368	; 0x2368 <__udivmodhi4>
    2352:	07 fc       	sbrc	r0, 7
    2354:	05 d0       	rcall	.+10     	; 0x2360 <__divmodhi4_neg2>
    2356:	3e f4       	brtc	.+14     	; 0x2366 <__divmodhi4_exit>

00002358 <__divmodhi4_neg1>:
    2358:	90 95       	com	r25
    235a:	81 95       	neg	r24
    235c:	9f 4f       	sbci	r25, 0xFF	; 255
    235e:	08 95       	ret

00002360 <__divmodhi4_neg2>:
    2360:	70 95       	com	r23
    2362:	61 95       	neg	r22
    2364:	7f 4f       	sbci	r23, 0xFF	; 255

00002366 <__divmodhi4_exit>:
    2366:	08 95       	ret

00002368 <__udivmodhi4>:
    2368:	aa 1b       	sub	r26, r26
    236a:	bb 1b       	sub	r27, r27
    236c:	51 e1       	ldi	r21, 0x11	; 17
    236e:	07 c0       	rjmp	.+14     	; 0x237e <__udivmodhi4_ep>

00002370 <__udivmodhi4_loop>:
    2370:	aa 1f       	adc	r26, r26
    2372:	bb 1f       	adc	r27, r27
    2374:	a6 17       	cp	r26, r22
    2376:	b7 07       	cpc	r27, r23
    2378:	10 f0       	brcs	.+4      	; 0x237e <__udivmodhi4_ep>
    237a:	a6 1b       	sub	r26, r22
    237c:	b7 0b       	sbc	r27, r23

0000237e <__udivmodhi4_ep>:
    237e:	88 1f       	adc	r24, r24
    2380:	99 1f       	adc	r25, r25
    2382:	5a 95       	dec	r21
    2384:	a9 f7       	brne	.-22     	; 0x2370 <__udivmodhi4_loop>
    2386:	80 95       	com	r24
    2388:	90 95       	com	r25
    238a:	bc 01       	movw	r22, r24
    238c:	cd 01       	movw	r24, r26
    238e:	08 95       	ret

00002390 <malloc>:
    2390:	0f 93       	push	r16
    2392:	1f 93       	push	r17
    2394:	cf 93       	push	r28
    2396:	df 93       	push	r29
    2398:	82 30       	cpi	r24, 0x02	; 2
    239a:	91 05       	cpc	r25, r1
    239c:	10 f4       	brcc	.+4      	; 0x23a2 <malloc+0x12>
    239e:	82 e0       	ldi	r24, 0x02	; 2
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <__flp>
    23a6:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <__flp+0x1>
    23aa:	20 e0       	ldi	r18, 0x00	; 0
    23ac:	30 e0       	ldi	r19, 0x00	; 0
    23ae:	a0 e0       	ldi	r26, 0x00	; 0
    23b0:	b0 e0       	ldi	r27, 0x00	; 0
    23b2:	30 97       	sbiw	r30, 0x00	; 0
    23b4:	19 f1       	breq	.+70     	; 0x23fc <malloc+0x6c>
    23b6:	40 81       	ld	r20, Z
    23b8:	51 81       	ldd	r21, Z+1	; 0x01
    23ba:	02 81       	ldd	r16, Z+2	; 0x02
    23bc:	13 81       	ldd	r17, Z+3	; 0x03
    23be:	48 17       	cp	r20, r24
    23c0:	59 07       	cpc	r21, r25
    23c2:	c8 f0       	brcs	.+50     	; 0x23f6 <malloc+0x66>
    23c4:	84 17       	cp	r24, r20
    23c6:	95 07       	cpc	r25, r21
    23c8:	69 f4       	brne	.+26     	; 0x23e4 <malloc+0x54>
    23ca:	10 97       	sbiw	r26, 0x00	; 0
    23cc:	31 f0       	breq	.+12     	; 0x23da <malloc+0x4a>
    23ce:	12 96       	adiw	r26, 0x02	; 2
    23d0:	0c 93       	st	X, r16
    23d2:	12 97       	sbiw	r26, 0x02	; 2
    23d4:	13 96       	adiw	r26, 0x03	; 3
    23d6:	1c 93       	st	X, r17
    23d8:	27 c0       	rjmp	.+78     	; 0x2428 <malloc+0x98>
    23da:	00 93 dc 01 	sts	0x01DC, r16	; 0x8001dc <__flp>
    23de:	10 93 dd 01 	sts	0x01DD, r17	; 0x8001dd <__flp+0x1>
    23e2:	22 c0       	rjmp	.+68     	; 0x2428 <malloc+0x98>
    23e4:	21 15       	cp	r18, r1
    23e6:	31 05       	cpc	r19, r1
    23e8:	19 f0       	breq	.+6      	; 0x23f0 <malloc+0x60>
    23ea:	42 17       	cp	r20, r18
    23ec:	53 07       	cpc	r21, r19
    23ee:	18 f4       	brcc	.+6      	; 0x23f6 <malloc+0x66>
    23f0:	9a 01       	movw	r18, r20
    23f2:	bd 01       	movw	r22, r26
    23f4:	ef 01       	movw	r28, r30
    23f6:	df 01       	movw	r26, r30
    23f8:	f8 01       	movw	r30, r16
    23fa:	db cf       	rjmp	.-74     	; 0x23b2 <malloc+0x22>
    23fc:	21 15       	cp	r18, r1
    23fe:	31 05       	cpc	r19, r1
    2400:	f9 f0       	breq	.+62     	; 0x2440 <malloc+0xb0>
    2402:	28 1b       	sub	r18, r24
    2404:	39 0b       	sbc	r19, r25
    2406:	24 30       	cpi	r18, 0x04	; 4
    2408:	31 05       	cpc	r19, r1
    240a:	80 f4       	brcc	.+32     	; 0x242c <malloc+0x9c>
    240c:	8a 81       	ldd	r24, Y+2	; 0x02
    240e:	9b 81       	ldd	r25, Y+3	; 0x03
    2410:	61 15       	cp	r22, r1
    2412:	71 05       	cpc	r23, r1
    2414:	21 f0       	breq	.+8      	; 0x241e <malloc+0x8e>
    2416:	fb 01       	movw	r30, r22
    2418:	93 83       	std	Z+3, r25	; 0x03
    241a:	82 83       	std	Z+2, r24	; 0x02
    241c:	04 c0       	rjmp	.+8      	; 0x2426 <malloc+0x96>
    241e:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <__flp+0x1>
    2422:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <__flp>
    2426:	fe 01       	movw	r30, r28
    2428:	32 96       	adiw	r30, 0x02	; 2
    242a:	44 c0       	rjmp	.+136    	; 0x24b4 <malloc+0x124>
    242c:	fe 01       	movw	r30, r28
    242e:	e2 0f       	add	r30, r18
    2430:	f3 1f       	adc	r31, r19
    2432:	81 93       	st	Z+, r24
    2434:	91 93       	st	Z+, r25
    2436:	22 50       	subi	r18, 0x02	; 2
    2438:	31 09       	sbc	r19, r1
    243a:	39 83       	std	Y+1, r19	; 0x01
    243c:	28 83       	st	Y, r18
    243e:	3a c0       	rjmp	.+116    	; 0x24b4 <malloc+0x124>
    2440:	20 91 da 01 	lds	r18, 0x01DA	; 0x8001da <__brkval>
    2444:	30 91 db 01 	lds	r19, 0x01DB	; 0x8001db <__brkval+0x1>
    2448:	23 2b       	or	r18, r19
    244a:	41 f4       	brne	.+16     	; 0x245c <malloc+0xcc>
    244c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2450:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2454:	30 93 db 01 	sts	0x01DB, r19	; 0x8001db <__brkval+0x1>
    2458:	20 93 da 01 	sts	0x01DA, r18	; 0x8001da <__brkval>
    245c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2460:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    2464:	21 15       	cp	r18, r1
    2466:	31 05       	cpc	r19, r1
    2468:	41 f4       	brne	.+16     	; 0x247a <malloc+0xea>
    246a:	2d b7       	in	r18, 0x3d	; 61
    246c:	3e b7       	in	r19, 0x3e	; 62
    246e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2472:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2476:	24 1b       	sub	r18, r20
    2478:	35 0b       	sbc	r19, r21
    247a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <__brkval>
    247e:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <__brkval+0x1>
    2482:	e2 17       	cp	r30, r18
    2484:	f3 07       	cpc	r31, r19
    2486:	a0 f4       	brcc	.+40     	; 0x24b0 <malloc+0x120>
    2488:	2e 1b       	sub	r18, r30
    248a:	3f 0b       	sbc	r19, r31
    248c:	28 17       	cp	r18, r24
    248e:	39 07       	cpc	r19, r25
    2490:	78 f0       	brcs	.+30     	; 0x24b0 <malloc+0x120>
    2492:	ac 01       	movw	r20, r24
    2494:	4e 5f       	subi	r20, 0xFE	; 254
    2496:	5f 4f       	sbci	r21, 0xFF	; 255
    2498:	24 17       	cp	r18, r20
    249a:	35 07       	cpc	r19, r21
    249c:	48 f0       	brcs	.+18     	; 0x24b0 <malloc+0x120>
    249e:	4e 0f       	add	r20, r30
    24a0:	5f 1f       	adc	r21, r31
    24a2:	50 93 db 01 	sts	0x01DB, r21	; 0x8001db <__brkval+0x1>
    24a6:	40 93 da 01 	sts	0x01DA, r20	; 0x8001da <__brkval>
    24aa:	81 93       	st	Z+, r24
    24ac:	91 93       	st	Z+, r25
    24ae:	02 c0       	rjmp	.+4      	; 0x24b4 <malloc+0x124>
    24b0:	e0 e0       	ldi	r30, 0x00	; 0
    24b2:	f0 e0       	ldi	r31, 0x00	; 0
    24b4:	cf 01       	movw	r24, r30
    24b6:	df 91       	pop	r29
    24b8:	cf 91       	pop	r28
    24ba:	1f 91       	pop	r17
    24bc:	0f 91       	pop	r16
    24be:	08 95       	ret

000024c0 <free>:
    24c0:	cf 93       	push	r28
    24c2:	df 93       	push	r29
    24c4:	00 97       	sbiw	r24, 0x00	; 0
    24c6:	09 f4       	brne	.+2      	; 0x24ca <free+0xa>
    24c8:	81 c0       	rjmp	.+258    	; 0x25cc <free+0x10c>
    24ca:	fc 01       	movw	r30, r24
    24cc:	32 97       	sbiw	r30, 0x02	; 2
    24ce:	13 82       	std	Z+3, r1	; 0x03
    24d0:	12 82       	std	Z+2, r1	; 0x02
    24d2:	a0 91 dc 01 	lds	r26, 0x01DC	; 0x8001dc <__flp>
    24d6:	b0 91 dd 01 	lds	r27, 0x01DD	; 0x8001dd <__flp+0x1>
    24da:	10 97       	sbiw	r26, 0x00	; 0
    24dc:	81 f4       	brne	.+32     	; 0x24fe <free+0x3e>
    24de:	20 81       	ld	r18, Z
    24e0:	31 81       	ldd	r19, Z+1	; 0x01
    24e2:	82 0f       	add	r24, r18
    24e4:	93 1f       	adc	r25, r19
    24e6:	20 91 da 01 	lds	r18, 0x01DA	; 0x8001da <__brkval>
    24ea:	30 91 db 01 	lds	r19, 0x01DB	; 0x8001db <__brkval+0x1>
    24ee:	28 17       	cp	r18, r24
    24f0:	39 07       	cpc	r19, r25
    24f2:	51 f5       	brne	.+84     	; 0x2548 <free+0x88>
    24f4:	f0 93 db 01 	sts	0x01DB, r31	; 0x8001db <__brkval+0x1>
    24f8:	e0 93 da 01 	sts	0x01DA, r30	; 0x8001da <__brkval>
    24fc:	67 c0       	rjmp	.+206    	; 0x25cc <free+0x10c>
    24fe:	ed 01       	movw	r28, r26
    2500:	20 e0       	ldi	r18, 0x00	; 0
    2502:	30 e0       	ldi	r19, 0x00	; 0
    2504:	ce 17       	cp	r28, r30
    2506:	df 07       	cpc	r29, r31
    2508:	40 f4       	brcc	.+16     	; 0x251a <free+0x5a>
    250a:	4a 81       	ldd	r20, Y+2	; 0x02
    250c:	5b 81       	ldd	r21, Y+3	; 0x03
    250e:	9e 01       	movw	r18, r28
    2510:	41 15       	cp	r20, r1
    2512:	51 05       	cpc	r21, r1
    2514:	f1 f0       	breq	.+60     	; 0x2552 <free+0x92>
    2516:	ea 01       	movw	r28, r20
    2518:	f5 cf       	rjmp	.-22     	; 0x2504 <free+0x44>
    251a:	d3 83       	std	Z+3, r29	; 0x03
    251c:	c2 83       	std	Z+2, r28	; 0x02
    251e:	40 81       	ld	r20, Z
    2520:	51 81       	ldd	r21, Z+1	; 0x01
    2522:	84 0f       	add	r24, r20
    2524:	95 1f       	adc	r25, r21
    2526:	c8 17       	cp	r28, r24
    2528:	d9 07       	cpc	r29, r25
    252a:	59 f4       	brne	.+22     	; 0x2542 <free+0x82>
    252c:	88 81       	ld	r24, Y
    252e:	99 81       	ldd	r25, Y+1	; 0x01
    2530:	84 0f       	add	r24, r20
    2532:	95 1f       	adc	r25, r21
    2534:	02 96       	adiw	r24, 0x02	; 2
    2536:	91 83       	std	Z+1, r25	; 0x01
    2538:	80 83       	st	Z, r24
    253a:	8a 81       	ldd	r24, Y+2	; 0x02
    253c:	9b 81       	ldd	r25, Y+3	; 0x03
    253e:	93 83       	std	Z+3, r25	; 0x03
    2540:	82 83       	std	Z+2, r24	; 0x02
    2542:	21 15       	cp	r18, r1
    2544:	31 05       	cpc	r19, r1
    2546:	29 f4       	brne	.+10     	; 0x2552 <free+0x92>
    2548:	f0 93 dd 01 	sts	0x01DD, r31	; 0x8001dd <__flp+0x1>
    254c:	e0 93 dc 01 	sts	0x01DC, r30	; 0x8001dc <__flp>
    2550:	3d c0       	rjmp	.+122    	; 0x25cc <free+0x10c>
    2552:	e9 01       	movw	r28, r18
    2554:	fb 83       	std	Y+3, r31	; 0x03
    2556:	ea 83       	std	Y+2, r30	; 0x02
    2558:	49 91       	ld	r20, Y+
    255a:	59 91       	ld	r21, Y+
    255c:	c4 0f       	add	r28, r20
    255e:	d5 1f       	adc	r29, r21
    2560:	ec 17       	cp	r30, r28
    2562:	fd 07       	cpc	r31, r29
    2564:	61 f4       	brne	.+24     	; 0x257e <free+0xbe>
    2566:	80 81       	ld	r24, Z
    2568:	91 81       	ldd	r25, Z+1	; 0x01
    256a:	84 0f       	add	r24, r20
    256c:	95 1f       	adc	r25, r21
    256e:	02 96       	adiw	r24, 0x02	; 2
    2570:	e9 01       	movw	r28, r18
    2572:	99 83       	std	Y+1, r25	; 0x01
    2574:	88 83       	st	Y, r24
    2576:	82 81       	ldd	r24, Z+2	; 0x02
    2578:	93 81       	ldd	r25, Z+3	; 0x03
    257a:	9b 83       	std	Y+3, r25	; 0x03
    257c:	8a 83       	std	Y+2, r24	; 0x02
    257e:	e0 e0       	ldi	r30, 0x00	; 0
    2580:	f0 e0       	ldi	r31, 0x00	; 0
    2582:	12 96       	adiw	r26, 0x02	; 2
    2584:	8d 91       	ld	r24, X+
    2586:	9c 91       	ld	r25, X
    2588:	13 97       	sbiw	r26, 0x03	; 3
    258a:	00 97       	sbiw	r24, 0x00	; 0
    258c:	19 f0       	breq	.+6      	; 0x2594 <free+0xd4>
    258e:	fd 01       	movw	r30, r26
    2590:	dc 01       	movw	r26, r24
    2592:	f7 cf       	rjmp	.-18     	; 0x2582 <free+0xc2>
    2594:	8d 91       	ld	r24, X+
    2596:	9c 91       	ld	r25, X
    2598:	11 97       	sbiw	r26, 0x01	; 1
    259a:	9d 01       	movw	r18, r26
    259c:	2e 5f       	subi	r18, 0xFE	; 254
    259e:	3f 4f       	sbci	r19, 0xFF	; 255
    25a0:	82 0f       	add	r24, r18
    25a2:	93 1f       	adc	r25, r19
    25a4:	20 91 da 01 	lds	r18, 0x01DA	; 0x8001da <__brkval>
    25a8:	30 91 db 01 	lds	r19, 0x01DB	; 0x8001db <__brkval+0x1>
    25ac:	28 17       	cp	r18, r24
    25ae:	39 07       	cpc	r19, r25
    25b0:	69 f4       	brne	.+26     	; 0x25cc <free+0x10c>
    25b2:	30 97       	sbiw	r30, 0x00	; 0
    25b4:	29 f4       	brne	.+10     	; 0x25c0 <free+0x100>
    25b6:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <__flp+0x1>
    25ba:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <__flp>
    25be:	02 c0       	rjmp	.+4      	; 0x25c4 <free+0x104>
    25c0:	13 82       	std	Z+3, r1	; 0x03
    25c2:	12 82       	std	Z+2, r1	; 0x02
    25c4:	b0 93 db 01 	sts	0x01DB, r27	; 0x8001db <__brkval+0x1>
    25c8:	a0 93 da 01 	sts	0x01DA, r26	; 0x8001da <__brkval>
    25cc:	df 91       	pop	r29
    25ce:	cf 91       	pop	r28
    25d0:	08 95       	ret

000025d2 <realloc>:
    25d2:	a0 e0       	ldi	r26, 0x00	; 0
    25d4:	b0 e0       	ldi	r27, 0x00	; 0
    25d6:	ef ee       	ldi	r30, 0xEF	; 239
    25d8:	f2 e1       	ldi	r31, 0x12	; 18
    25da:	0c 94 e3 16 	jmp	0x2dc6	; 0x2dc6 <__prologue_saves__+0x8>
    25de:	ec 01       	movw	r28, r24
    25e0:	00 97       	sbiw	r24, 0x00	; 0
    25e2:	21 f4       	brne	.+8      	; 0x25ec <realloc+0x1a>
    25e4:	cb 01       	movw	r24, r22
    25e6:	0e 94 c8 11 	call	0x2390	; 0x2390 <malloc>
    25ea:	b4 c0       	rjmp	.+360    	; 0x2754 <realloc+0x182>
    25ec:	fc 01       	movw	r30, r24
    25ee:	e6 0f       	add	r30, r22
    25f0:	f7 1f       	adc	r31, r23
    25f2:	9c 01       	movw	r18, r24
    25f4:	22 50       	subi	r18, 0x02	; 2
    25f6:	31 09       	sbc	r19, r1
    25f8:	e2 17       	cp	r30, r18
    25fa:	f3 07       	cpc	r31, r19
    25fc:	08 f4       	brcc	.+2      	; 0x2600 <realloc+0x2e>
    25fe:	a8 c0       	rjmp	.+336    	; 0x2750 <realloc+0x17e>
    2600:	d9 01       	movw	r26, r18
    2602:	0d 91       	ld	r16, X+
    2604:	1c 91       	ld	r17, X
    2606:	11 97       	sbiw	r26, 0x01	; 1
    2608:	06 17       	cp	r16, r22
    260a:	17 07       	cpc	r17, r23
    260c:	b0 f0       	brcs	.+44     	; 0x263a <realloc+0x68>
    260e:	05 30       	cpi	r16, 0x05	; 5
    2610:	11 05       	cpc	r17, r1
    2612:	08 f4       	brcc	.+2      	; 0x2616 <realloc+0x44>
    2614:	9b c0       	rjmp	.+310    	; 0x274c <realloc+0x17a>
    2616:	c8 01       	movw	r24, r16
    2618:	04 97       	sbiw	r24, 0x04	; 4
    261a:	86 17       	cp	r24, r22
    261c:	97 07       	cpc	r25, r23
    261e:	08 f4       	brcc	.+2      	; 0x2622 <realloc+0x50>
    2620:	95 c0       	rjmp	.+298    	; 0x274c <realloc+0x17a>
    2622:	02 50       	subi	r16, 0x02	; 2
    2624:	11 09       	sbc	r17, r1
    2626:	06 1b       	sub	r16, r22
    2628:	17 0b       	sbc	r17, r23
    262a:	01 93       	st	Z+, r16
    262c:	11 93       	st	Z+, r17
    262e:	6d 93       	st	X+, r22
    2630:	7c 93       	st	X, r23
    2632:	cf 01       	movw	r24, r30
    2634:	0e 94 60 12 	call	0x24c0	; 0x24c0 <free>
    2638:	89 c0       	rjmp	.+274    	; 0x274c <realloc+0x17a>
    263a:	5b 01       	movw	r10, r22
    263c:	a0 1a       	sub	r10, r16
    263e:	b1 0a       	sbc	r11, r17
    2640:	4c 01       	movw	r8, r24
    2642:	80 0e       	add	r8, r16
    2644:	91 1e       	adc	r9, r17
    2646:	a0 91 dc 01 	lds	r26, 0x01DC	; 0x8001dc <__flp>
    264a:	b0 91 dd 01 	lds	r27, 0x01DD	; 0x8001dd <__flp+0x1>
    264e:	61 2c       	mov	r6, r1
    2650:	71 2c       	mov	r7, r1
    2652:	e1 2c       	mov	r14, r1
    2654:	f1 2c       	mov	r15, r1
    2656:	10 97       	sbiw	r26, 0x00	; 0
    2658:	09 f4       	brne	.+2      	; 0x265c <realloc+0x8a>
    265a:	46 c0       	rjmp	.+140    	; 0x26e8 <realloc+0x116>
    265c:	8d 91       	ld	r24, X+
    265e:	9c 91       	ld	r25, X
    2660:	11 97       	sbiw	r26, 0x01	; 1
    2662:	a8 15       	cp	r26, r8
    2664:	b9 05       	cpc	r27, r9
    2666:	b1 f5       	brne	.+108    	; 0x26d4 <realloc+0x102>
    2668:	6c 01       	movw	r12, r24
    266a:	42 e0       	ldi	r20, 0x02	; 2
    266c:	c4 0e       	add	r12, r20
    266e:	d1 1c       	adc	r13, r1
    2670:	ca 14       	cp	r12, r10
    2672:	db 04       	cpc	r13, r11
    2674:	78 f1       	brcs	.+94     	; 0x26d4 <realloc+0x102>
    2676:	4c 01       	movw	r8, r24
    2678:	8a 18       	sub	r8, r10
    267a:	9b 08       	sbc	r9, r11
    267c:	64 01       	movw	r12, r8
    267e:	42 e0       	ldi	r20, 0x02	; 2
    2680:	c4 0e       	add	r12, r20
    2682:	d1 1c       	adc	r13, r1
    2684:	12 96       	adiw	r26, 0x02	; 2
    2686:	bc 90       	ld	r11, X
    2688:	12 97       	sbiw	r26, 0x02	; 2
    268a:	13 96       	adiw	r26, 0x03	; 3
    268c:	ac 91       	ld	r26, X
    268e:	b5 e0       	ldi	r27, 0x05	; 5
    2690:	cb 16       	cp	r12, r27
    2692:	d1 04       	cpc	r13, r1
    2694:	40 f0       	brcs	.+16     	; 0x26a6 <realloc+0xd4>
    2696:	b2 82       	std	Z+2, r11	; 0x02
    2698:	a3 83       	std	Z+3, r26	; 0x03
    269a:	91 82       	std	Z+1, r9	; 0x01
    269c:	80 82       	st	Z, r8
    269e:	d9 01       	movw	r26, r18
    26a0:	6d 93       	st	X+, r22
    26a2:	7c 93       	st	X, r23
    26a4:	09 c0       	rjmp	.+18     	; 0x26b8 <realloc+0xe6>
    26a6:	0e 5f       	subi	r16, 0xFE	; 254
    26a8:	1f 4f       	sbci	r17, 0xFF	; 255
    26aa:	80 0f       	add	r24, r16
    26ac:	91 1f       	adc	r25, r17
    26ae:	f9 01       	movw	r30, r18
    26b0:	91 83       	std	Z+1, r25	; 0x01
    26b2:	80 83       	st	Z, r24
    26b4:	eb 2d       	mov	r30, r11
    26b6:	fa 2f       	mov	r31, r26
    26b8:	e1 14       	cp	r14, r1
    26ba:	f1 04       	cpc	r15, r1
    26bc:	31 f0       	breq	.+12     	; 0x26ca <realloc+0xf8>
    26be:	d7 01       	movw	r26, r14
    26c0:	13 96       	adiw	r26, 0x03	; 3
    26c2:	fc 93       	st	X, r31
    26c4:	ee 93       	st	-X, r30
    26c6:	12 97       	sbiw	r26, 0x02	; 2
    26c8:	41 c0       	rjmp	.+130    	; 0x274c <realloc+0x17a>
    26ca:	f0 93 dd 01 	sts	0x01DD, r31	; 0x8001dd <__flp+0x1>
    26ce:	e0 93 dc 01 	sts	0x01DC, r30	; 0x8001dc <__flp>
    26d2:	3c c0       	rjmp	.+120    	; 0x274c <realloc+0x17a>
    26d4:	68 16       	cp	r6, r24
    26d6:	79 06       	cpc	r7, r25
    26d8:	08 f4       	brcc	.+2      	; 0x26dc <realloc+0x10a>
    26da:	3c 01       	movw	r6, r24
    26dc:	7d 01       	movw	r14, r26
    26de:	12 96       	adiw	r26, 0x02	; 2
    26e0:	0d 90       	ld	r0, X+
    26e2:	bc 91       	ld	r27, X
    26e4:	a0 2d       	mov	r26, r0
    26e6:	b7 cf       	rjmp	.-146    	; 0x2656 <realloc+0x84>
    26e8:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <__brkval>
    26ec:	90 91 db 01 	lds	r25, 0x01DB	; 0x8001db <__brkval+0x1>
    26f0:	88 16       	cp	r8, r24
    26f2:	99 06       	cpc	r9, r25
    26f4:	e1 f4       	brne	.+56     	; 0x272e <realloc+0x15c>
    26f6:	66 16       	cp	r6, r22
    26f8:	77 06       	cpc	r7, r23
    26fa:	c8 f4       	brcc	.+50     	; 0x272e <realloc+0x15c>
    26fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2700:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    2704:	00 97       	sbiw	r24, 0x00	; 0
    2706:	41 f4       	brne	.+16     	; 0x2718 <realloc+0x146>
    2708:	8d b7       	in	r24, 0x3d	; 61
    270a:	9e b7       	in	r25, 0x3e	; 62
    270c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2710:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2714:	84 1b       	sub	r24, r20
    2716:	95 0b       	sbc	r25, r21
    2718:	e8 17       	cp	r30, r24
    271a:	f9 07       	cpc	r31, r25
    271c:	c8 f4       	brcc	.+50     	; 0x2750 <realloc+0x17e>
    271e:	f0 93 db 01 	sts	0x01DB, r31	; 0x8001db <__brkval+0x1>
    2722:	e0 93 da 01 	sts	0x01DA, r30	; 0x8001da <__brkval>
    2726:	f9 01       	movw	r30, r18
    2728:	71 83       	std	Z+1, r23	; 0x01
    272a:	60 83       	st	Z, r22
    272c:	0f c0       	rjmp	.+30     	; 0x274c <realloc+0x17a>
    272e:	cb 01       	movw	r24, r22
    2730:	0e 94 c8 11 	call	0x2390	; 0x2390 <malloc>
    2734:	7c 01       	movw	r14, r24
    2736:	00 97       	sbiw	r24, 0x00	; 0
    2738:	59 f0       	breq	.+22     	; 0x2750 <realloc+0x17e>
    273a:	a8 01       	movw	r20, r16
    273c:	be 01       	movw	r22, r28
    273e:	0e 94 b6 13 	call	0x276c	; 0x276c <memcpy>
    2742:	ce 01       	movw	r24, r28
    2744:	0e 94 60 12 	call	0x24c0	; 0x24c0 <free>
    2748:	c7 01       	movw	r24, r14
    274a:	04 c0       	rjmp	.+8      	; 0x2754 <realloc+0x182>
    274c:	ce 01       	movw	r24, r28
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <realloc+0x182>
    2750:	80 e0       	ldi	r24, 0x00	; 0
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	cd b7       	in	r28, 0x3d	; 61
    2756:	de b7       	in	r29, 0x3e	; 62
    2758:	ee e0       	ldi	r30, 0x0E	; 14
    275a:	0c 94 ff 16 	jmp	0x2dfe	; 0x2dfe <__epilogue_restores__+0x8>

0000275e <strcpy_P>:
    275e:	fb 01       	movw	r30, r22
    2760:	dc 01       	movw	r26, r24
    2762:	05 90       	lpm	r0, Z+
    2764:	0d 92       	st	X+, r0
    2766:	00 20       	and	r0, r0
    2768:	e1 f7       	brne	.-8      	; 0x2762 <strcpy_P+0x4>
    276a:	08 95       	ret

0000276c <memcpy>:
    276c:	fb 01       	movw	r30, r22
    276e:	dc 01       	movw	r26, r24
    2770:	02 c0       	rjmp	.+4      	; 0x2776 <memcpy+0xa>
    2772:	01 90       	ld	r0, Z+
    2774:	0d 92       	st	X+, r0
    2776:	41 50       	subi	r20, 0x01	; 1
    2778:	50 40       	sbci	r21, 0x00	; 0
    277a:	d8 f7       	brcc	.-10     	; 0x2772 <memcpy+0x6>
    277c:	08 95       	ret

0000277e <strcat>:
    277e:	fb 01       	movw	r30, r22
    2780:	dc 01       	movw	r26, r24
    2782:	0d 90       	ld	r0, X+
    2784:	00 20       	and	r0, r0
    2786:	e9 f7       	brne	.-6      	; 0x2782 <strcat+0x4>
    2788:	11 97       	sbiw	r26, 0x01	; 1
    278a:	01 90       	ld	r0, Z+
    278c:	0d 92       	st	X+, r0
    278e:	00 20       	and	r0, r0
    2790:	e1 f7       	brne	.-8      	; 0x278a <strcat+0xc>
    2792:	08 95       	ret

00002794 <fdevopen>:
    2794:	0f 93       	push	r16
    2796:	1f 93       	push	r17
    2798:	cf 93       	push	r28
    279a:	df 93       	push	r29
    279c:	00 97       	sbiw	r24, 0x00	; 0
    279e:	31 f4       	brne	.+12     	; 0x27ac <fdevopen+0x18>
    27a0:	61 15       	cp	r22, r1
    27a2:	71 05       	cpc	r23, r1
    27a4:	19 f4       	brne	.+6      	; 0x27ac <fdevopen+0x18>
    27a6:	80 e0       	ldi	r24, 0x00	; 0
    27a8:	90 e0       	ldi	r25, 0x00	; 0
    27aa:	3a c0       	rjmp	.+116    	; 0x2820 <fdevopen+0x8c>
    27ac:	8b 01       	movw	r16, r22
    27ae:	ec 01       	movw	r28, r24
    27b0:	6e e0       	ldi	r22, 0x0E	; 14
    27b2:	70 e0       	ldi	r23, 0x00	; 0
    27b4:	81 e0       	ldi	r24, 0x01	; 1
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	0e 94 0c 16 	call	0x2c18	; 0x2c18 <calloc>
    27bc:	fc 01       	movw	r30, r24
    27be:	89 2b       	or	r24, r25
    27c0:	91 f3       	breq	.-28     	; 0x27a6 <fdevopen+0x12>
    27c2:	80 e8       	ldi	r24, 0x80	; 128
    27c4:	83 83       	std	Z+3, r24	; 0x03
    27c6:	01 15       	cp	r16, r1
    27c8:	11 05       	cpc	r17, r1
    27ca:	71 f0       	breq	.+28     	; 0x27e8 <fdevopen+0x54>
    27cc:	13 87       	std	Z+11, r17	; 0x0b
    27ce:	02 87       	std	Z+10, r16	; 0x0a
    27d0:	81 e8       	ldi	r24, 0x81	; 129
    27d2:	83 83       	std	Z+3, r24	; 0x03
    27d4:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <__iob>
    27d8:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <__iob+0x1>
    27dc:	89 2b       	or	r24, r25
    27de:	21 f4       	brne	.+8      	; 0x27e8 <fdevopen+0x54>
    27e0:	f0 93 df 01 	sts	0x01DF, r31	; 0x8001df <__iob+0x1>
    27e4:	e0 93 de 01 	sts	0x01DE, r30	; 0x8001de <__iob>
    27e8:	20 97       	sbiw	r28, 0x00	; 0
    27ea:	c9 f0       	breq	.+50     	; 0x281e <fdevopen+0x8a>
    27ec:	d1 87       	std	Z+9, r29	; 0x09
    27ee:	c0 87       	std	Z+8, r28	; 0x08
    27f0:	83 81       	ldd	r24, Z+3	; 0x03
    27f2:	82 60       	ori	r24, 0x02	; 2
    27f4:	83 83       	std	Z+3, r24	; 0x03
    27f6:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <__iob+0x2>
    27fa:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <__iob+0x3>
    27fe:	89 2b       	or	r24, r25
    2800:	71 f4       	brne	.+28     	; 0x281e <fdevopen+0x8a>
    2802:	f0 93 e1 01 	sts	0x01E1, r31	; 0x8001e1 <__iob+0x3>
    2806:	e0 93 e0 01 	sts	0x01E0, r30	; 0x8001e0 <__iob+0x2>
    280a:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <__iob+0x4>
    280e:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <__iob+0x5>
    2812:	89 2b       	or	r24, r25
    2814:	21 f4       	brne	.+8      	; 0x281e <fdevopen+0x8a>
    2816:	f0 93 e3 01 	sts	0x01E3, r31	; 0x8001e3 <__iob+0x5>
    281a:	e0 93 e2 01 	sts	0x01E2, r30	; 0x8001e2 <__iob+0x4>
    281e:	cf 01       	movw	r24, r30
    2820:	df 91       	pop	r29
    2822:	cf 91       	pop	r28
    2824:	1f 91       	pop	r17
    2826:	0f 91       	pop	r16
    2828:	08 95       	ret

0000282a <printf>:
    282a:	a0 e0       	ldi	r26, 0x00	; 0
    282c:	b0 e0       	ldi	r27, 0x00	; 0
    282e:	eb e1       	ldi	r30, 0x1B	; 27
    2830:	f4 e1       	ldi	r31, 0x14	; 20
    2832:	0c 94 ef 16 	jmp	0x2dde	; 0x2dde <__prologue_saves__+0x20>
    2836:	ae 01       	movw	r20, r28
    2838:	4b 5f       	subi	r20, 0xFB	; 251
    283a:	5f 4f       	sbci	r21, 0xFF	; 255
    283c:	fa 01       	movw	r30, r20
    283e:	61 91       	ld	r22, Z+
    2840:	71 91       	ld	r23, Z+
    2842:	af 01       	movw	r20, r30
    2844:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <__iob+0x2>
    2848:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <__iob+0x3>
    284c:	0e 94 2b 14 	call	0x2856	; 0x2856 <vfprintf>
    2850:	e2 e0       	ldi	r30, 0x02	; 2
    2852:	0c 94 0b 17 	jmp	0x2e16	; 0x2e16 <__epilogue_restores__+0x20>

00002856 <vfprintf>:
    2856:	ab e0       	ldi	r26, 0x0B	; 11
    2858:	b0 e0       	ldi	r27, 0x00	; 0
    285a:	e1 e3       	ldi	r30, 0x31	; 49
    285c:	f4 e1       	ldi	r31, 0x14	; 20
    285e:	0c 94 df 16 	jmp	0x2dbe	; 0x2dbe <__prologue_saves__>
    2862:	6c 01       	movw	r12, r24
    2864:	7b 01       	movw	r14, r22
    2866:	8a 01       	movw	r16, r20
    2868:	fc 01       	movw	r30, r24
    286a:	17 82       	std	Z+7, r1	; 0x07
    286c:	16 82       	std	Z+6, r1	; 0x06
    286e:	83 81       	ldd	r24, Z+3	; 0x03
    2870:	81 ff       	sbrs	r24, 1
    2872:	cc c1       	rjmp	.+920    	; 0x2c0c <vfprintf+0x3b6>
    2874:	ce 01       	movw	r24, r28
    2876:	01 96       	adiw	r24, 0x01	; 1
    2878:	3c 01       	movw	r6, r24
    287a:	f6 01       	movw	r30, r12
    287c:	93 81       	ldd	r25, Z+3	; 0x03
    287e:	f7 01       	movw	r30, r14
    2880:	93 fd       	sbrc	r25, 3
    2882:	85 91       	lpm	r24, Z+
    2884:	93 ff       	sbrs	r25, 3
    2886:	81 91       	ld	r24, Z+
    2888:	7f 01       	movw	r14, r30
    288a:	88 23       	and	r24, r24
    288c:	09 f4       	brne	.+2      	; 0x2890 <vfprintf+0x3a>
    288e:	ba c1       	rjmp	.+884    	; 0x2c04 <vfprintf+0x3ae>
    2890:	85 32       	cpi	r24, 0x25	; 37
    2892:	39 f4       	brne	.+14     	; 0x28a2 <vfprintf+0x4c>
    2894:	93 fd       	sbrc	r25, 3
    2896:	85 91       	lpm	r24, Z+
    2898:	93 ff       	sbrs	r25, 3
    289a:	81 91       	ld	r24, Z+
    289c:	7f 01       	movw	r14, r30
    289e:	85 32       	cpi	r24, 0x25	; 37
    28a0:	29 f4       	brne	.+10     	; 0x28ac <vfprintf+0x56>
    28a2:	b6 01       	movw	r22, r12
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    28aa:	e7 cf       	rjmp	.-50     	; 0x287a <vfprintf+0x24>
    28ac:	91 2c       	mov	r9, r1
    28ae:	21 2c       	mov	r2, r1
    28b0:	31 2c       	mov	r3, r1
    28b2:	ff e1       	ldi	r31, 0x1F	; 31
    28b4:	f3 15       	cp	r31, r3
    28b6:	d8 f0       	brcs	.+54     	; 0x28ee <vfprintf+0x98>
    28b8:	8b 32       	cpi	r24, 0x2B	; 43
    28ba:	79 f0       	breq	.+30     	; 0x28da <vfprintf+0x84>
    28bc:	38 f4       	brcc	.+14     	; 0x28cc <vfprintf+0x76>
    28be:	80 32       	cpi	r24, 0x20	; 32
    28c0:	79 f0       	breq	.+30     	; 0x28e0 <vfprintf+0x8a>
    28c2:	83 32       	cpi	r24, 0x23	; 35
    28c4:	a1 f4       	brne	.+40     	; 0x28ee <vfprintf+0x98>
    28c6:	23 2d       	mov	r18, r3
    28c8:	20 61       	ori	r18, 0x10	; 16
    28ca:	1d c0       	rjmp	.+58     	; 0x2906 <vfprintf+0xb0>
    28cc:	8d 32       	cpi	r24, 0x2D	; 45
    28ce:	61 f0       	breq	.+24     	; 0x28e8 <vfprintf+0x92>
    28d0:	80 33       	cpi	r24, 0x30	; 48
    28d2:	69 f4       	brne	.+26     	; 0x28ee <vfprintf+0x98>
    28d4:	23 2d       	mov	r18, r3
    28d6:	21 60       	ori	r18, 0x01	; 1
    28d8:	16 c0       	rjmp	.+44     	; 0x2906 <vfprintf+0xb0>
    28da:	83 2d       	mov	r24, r3
    28dc:	82 60       	ori	r24, 0x02	; 2
    28de:	38 2e       	mov	r3, r24
    28e0:	e3 2d       	mov	r30, r3
    28e2:	e4 60       	ori	r30, 0x04	; 4
    28e4:	3e 2e       	mov	r3, r30
    28e6:	2a c0       	rjmp	.+84     	; 0x293c <vfprintf+0xe6>
    28e8:	f3 2d       	mov	r31, r3
    28ea:	f8 60       	ori	r31, 0x08	; 8
    28ec:	1d c0       	rjmp	.+58     	; 0x2928 <vfprintf+0xd2>
    28ee:	37 fc       	sbrc	r3, 7
    28f0:	2d c0       	rjmp	.+90     	; 0x294c <vfprintf+0xf6>
    28f2:	20 ed       	ldi	r18, 0xD0	; 208
    28f4:	28 0f       	add	r18, r24
    28f6:	2a 30       	cpi	r18, 0x0A	; 10
    28f8:	40 f0       	brcs	.+16     	; 0x290a <vfprintf+0xb4>
    28fa:	8e 32       	cpi	r24, 0x2E	; 46
    28fc:	b9 f4       	brne	.+46     	; 0x292c <vfprintf+0xd6>
    28fe:	36 fc       	sbrc	r3, 6
    2900:	81 c1       	rjmp	.+770    	; 0x2c04 <vfprintf+0x3ae>
    2902:	23 2d       	mov	r18, r3
    2904:	20 64       	ori	r18, 0x40	; 64
    2906:	32 2e       	mov	r3, r18
    2908:	19 c0       	rjmp	.+50     	; 0x293c <vfprintf+0xe6>
    290a:	36 fe       	sbrs	r3, 6
    290c:	06 c0       	rjmp	.+12     	; 0x291a <vfprintf+0xc4>
    290e:	8a e0       	ldi	r24, 0x0A	; 10
    2910:	98 9e       	mul	r9, r24
    2912:	20 0d       	add	r18, r0
    2914:	11 24       	eor	r1, r1
    2916:	92 2e       	mov	r9, r18
    2918:	11 c0       	rjmp	.+34     	; 0x293c <vfprintf+0xe6>
    291a:	ea e0       	ldi	r30, 0x0A	; 10
    291c:	2e 9e       	mul	r2, r30
    291e:	20 0d       	add	r18, r0
    2920:	11 24       	eor	r1, r1
    2922:	22 2e       	mov	r2, r18
    2924:	f3 2d       	mov	r31, r3
    2926:	f0 62       	ori	r31, 0x20	; 32
    2928:	3f 2e       	mov	r3, r31
    292a:	08 c0       	rjmp	.+16     	; 0x293c <vfprintf+0xe6>
    292c:	8c 36       	cpi	r24, 0x6C	; 108
    292e:	21 f4       	brne	.+8      	; 0x2938 <vfprintf+0xe2>
    2930:	83 2d       	mov	r24, r3
    2932:	80 68       	ori	r24, 0x80	; 128
    2934:	38 2e       	mov	r3, r24
    2936:	02 c0       	rjmp	.+4      	; 0x293c <vfprintf+0xe6>
    2938:	88 36       	cpi	r24, 0x68	; 104
    293a:	41 f4       	brne	.+16     	; 0x294c <vfprintf+0xf6>
    293c:	f7 01       	movw	r30, r14
    293e:	93 fd       	sbrc	r25, 3
    2940:	85 91       	lpm	r24, Z+
    2942:	93 ff       	sbrs	r25, 3
    2944:	81 91       	ld	r24, Z+
    2946:	7f 01       	movw	r14, r30
    2948:	81 11       	cpse	r24, r1
    294a:	b3 cf       	rjmp	.-154    	; 0x28b2 <vfprintf+0x5c>
    294c:	98 2f       	mov	r25, r24
    294e:	9f 7d       	andi	r25, 0xDF	; 223
    2950:	95 54       	subi	r25, 0x45	; 69
    2952:	93 30       	cpi	r25, 0x03	; 3
    2954:	28 f4       	brcc	.+10     	; 0x2960 <vfprintf+0x10a>
    2956:	0c 5f       	subi	r16, 0xFC	; 252
    2958:	1f 4f       	sbci	r17, 0xFF	; 255
    295a:	9f e3       	ldi	r25, 0x3F	; 63
    295c:	99 83       	std	Y+1, r25	; 0x01
    295e:	0d c0       	rjmp	.+26     	; 0x297a <vfprintf+0x124>
    2960:	83 36       	cpi	r24, 0x63	; 99
    2962:	31 f0       	breq	.+12     	; 0x2970 <vfprintf+0x11a>
    2964:	83 37       	cpi	r24, 0x73	; 115
    2966:	71 f0       	breq	.+28     	; 0x2984 <vfprintf+0x12e>
    2968:	83 35       	cpi	r24, 0x53	; 83
    296a:	09 f0       	breq	.+2      	; 0x296e <vfprintf+0x118>
    296c:	59 c0       	rjmp	.+178    	; 0x2a20 <vfprintf+0x1ca>
    296e:	21 c0       	rjmp	.+66     	; 0x29b2 <vfprintf+0x15c>
    2970:	f8 01       	movw	r30, r16
    2972:	80 81       	ld	r24, Z
    2974:	89 83       	std	Y+1, r24	; 0x01
    2976:	0e 5f       	subi	r16, 0xFE	; 254
    2978:	1f 4f       	sbci	r17, 0xFF	; 255
    297a:	88 24       	eor	r8, r8
    297c:	83 94       	inc	r8
    297e:	91 2c       	mov	r9, r1
    2980:	53 01       	movw	r10, r6
    2982:	13 c0       	rjmp	.+38     	; 0x29aa <vfprintf+0x154>
    2984:	28 01       	movw	r4, r16
    2986:	f2 e0       	ldi	r31, 0x02	; 2
    2988:	4f 0e       	add	r4, r31
    298a:	51 1c       	adc	r5, r1
    298c:	f8 01       	movw	r30, r16
    298e:	a0 80       	ld	r10, Z
    2990:	b1 80       	ldd	r11, Z+1	; 0x01
    2992:	36 fe       	sbrs	r3, 6
    2994:	03 c0       	rjmp	.+6      	; 0x299c <vfprintf+0x146>
    2996:	69 2d       	mov	r22, r9
    2998:	70 e0       	ldi	r23, 0x00	; 0
    299a:	02 c0       	rjmp	.+4      	; 0x29a0 <vfprintf+0x14a>
    299c:	6f ef       	ldi	r22, 0xFF	; 255
    299e:	7f ef       	ldi	r23, 0xFF	; 255
    29a0:	c5 01       	movw	r24, r10
    29a2:	0e 94 3a 16 	call	0x2c74	; 0x2c74 <strnlen>
    29a6:	4c 01       	movw	r8, r24
    29a8:	82 01       	movw	r16, r4
    29aa:	f3 2d       	mov	r31, r3
    29ac:	ff 77       	andi	r31, 0x7F	; 127
    29ae:	3f 2e       	mov	r3, r31
    29b0:	16 c0       	rjmp	.+44     	; 0x29de <vfprintf+0x188>
    29b2:	28 01       	movw	r4, r16
    29b4:	22 e0       	ldi	r18, 0x02	; 2
    29b6:	42 0e       	add	r4, r18
    29b8:	51 1c       	adc	r5, r1
    29ba:	f8 01       	movw	r30, r16
    29bc:	a0 80       	ld	r10, Z
    29be:	b1 80       	ldd	r11, Z+1	; 0x01
    29c0:	36 fe       	sbrs	r3, 6
    29c2:	03 c0       	rjmp	.+6      	; 0x29ca <vfprintf+0x174>
    29c4:	69 2d       	mov	r22, r9
    29c6:	70 e0       	ldi	r23, 0x00	; 0
    29c8:	02 c0       	rjmp	.+4      	; 0x29ce <vfprintf+0x178>
    29ca:	6f ef       	ldi	r22, 0xFF	; 255
    29cc:	7f ef       	ldi	r23, 0xFF	; 255
    29ce:	c5 01       	movw	r24, r10
    29d0:	0e 94 28 16 	call	0x2c50	; 0x2c50 <strnlen_P>
    29d4:	4c 01       	movw	r8, r24
    29d6:	f3 2d       	mov	r31, r3
    29d8:	f0 68       	ori	r31, 0x80	; 128
    29da:	3f 2e       	mov	r3, r31
    29dc:	82 01       	movw	r16, r4
    29de:	33 fc       	sbrc	r3, 3
    29e0:	1b c0       	rjmp	.+54     	; 0x2a18 <vfprintf+0x1c2>
    29e2:	82 2d       	mov	r24, r2
    29e4:	90 e0       	ldi	r25, 0x00	; 0
    29e6:	88 16       	cp	r8, r24
    29e8:	99 06       	cpc	r9, r25
    29ea:	b0 f4       	brcc	.+44     	; 0x2a18 <vfprintf+0x1c2>
    29ec:	b6 01       	movw	r22, r12
    29ee:	80 e2       	ldi	r24, 0x20	; 32
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    29f6:	2a 94       	dec	r2
    29f8:	f4 cf       	rjmp	.-24     	; 0x29e2 <vfprintf+0x18c>
    29fa:	f5 01       	movw	r30, r10
    29fc:	37 fc       	sbrc	r3, 7
    29fe:	85 91       	lpm	r24, Z+
    2a00:	37 fe       	sbrs	r3, 7
    2a02:	81 91       	ld	r24, Z+
    2a04:	5f 01       	movw	r10, r30
    2a06:	b6 01       	movw	r22, r12
    2a08:	90 e0       	ldi	r25, 0x00	; 0
    2a0a:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2a0e:	21 10       	cpse	r2, r1
    2a10:	2a 94       	dec	r2
    2a12:	21 e0       	ldi	r18, 0x01	; 1
    2a14:	82 1a       	sub	r8, r18
    2a16:	91 08       	sbc	r9, r1
    2a18:	81 14       	cp	r8, r1
    2a1a:	91 04       	cpc	r9, r1
    2a1c:	71 f7       	brne	.-36     	; 0x29fa <vfprintf+0x1a4>
    2a1e:	e8 c0       	rjmp	.+464    	; 0x2bf0 <vfprintf+0x39a>
    2a20:	84 36       	cpi	r24, 0x64	; 100
    2a22:	11 f0       	breq	.+4      	; 0x2a28 <vfprintf+0x1d2>
    2a24:	89 36       	cpi	r24, 0x69	; 105
    2a26:	41 f5       	brne	.+80     	; 0x2a78 <vfprintf+0x222>
    2a28:	f8 01       	movw	r30, r16
    2a2a:	37 fe       	sbrs	r3, 7
    2a2c:	07 c0       	rjmp	.+14     	; 0x2a3c <vfprintf+0x1e6>
    2a2e:	60 81       	ld	r22, Z
    2a30:	71 81       	ldd	r23, Z+1	; 0x01
    2a32:	82 81       	ldd	r24, Z+2	; 0x02
    2a34:	93 81       	ldd	r25, Z+3	; 0x03
    2a36:	0c 5f       	subi	r16, 0xFC	; 252
    2a38:	1f 4f       	sbci	r17, 0xFF	; 255
    2a3a:	08 c0       	rjmp	.+16     	; 0x2a4c <vfprintf+0x1f6>
    2a3c:	60 81       	ld	r22, Z
    2a3e:	71 81       	ldd	r23, Z+1	; 0x01
    2a40:	07 2e       	mov	r0, r23
    2a42:	00 0c       	add	r0, r0
    2a44:	88 0b       	sbc	r24, r24
    2a46:	99 0b       	sbc	r25, r25
    2a48:	0e 5f       	subi	r16, 0xFE	; 254
    2a4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a4c:	f3 2d       	mov	r31, r3
    2a4e:	ff 76       	andi	r31, 0x6F	; 111
    2a50:	3f 2e       	mov	r3, r31
    2a52:	97 ff       	sbrs	r25, 7
    2a54:	09 c0       	rjmp	.+18     	; 0x2a68 <vfprintf+0x212>
    2a56:	90 95       	com	r25
    2a58:	80 95       	com	r24
    2a5a:	70 95       	com	r23
    2a5c:	61 95       	neg	r22
    2a5e:	7f 4f       	sbci	r23, 0xFF	; 255
    2a60:	8f 4f       	sbci	r24, 0xFF	; 255
    2a62:	9f 4f       	sbci	r25, 0xFF	; 255
    2a64:	f0 68       	ori	r31, 0x80	; 128
    2a66:	3f 2e       	mov	r3, r31
    2a68:	2a e0       	ldi	r18, 0x0A	; 10
    2a6a:	30 e0       	ldi	r19, 0x00	; 0
    2a6c:	a3 01       	movw	r20, r6
    2a6e:	0e 94 81 16 	call	0x2d02	; 0x2d02 <__ultoa_invert>
    2a72:	88 2e       	mov	r8, r24
    2a74:	86 18       	sub	r8, r6
    2a76:	45 c0       	rjmp	.+138    	; 0x2b02 <vfprintf+0x2ac>
    2a78:	85 37       	cpi	r24, 0x75	; 117
    2a7a:	31 f4       	brne	.+12     	; 0x2a88 <vfprintf+0x232>
    2a7c:	23 2d       	mov	r18, r3
    2a7e:	2f 7e       	andi	r18, 0xEF	; 239
    2a80:	b2 2e       	mov	r11, r18
    2a82:	2a e0       	ldi	r18, 0x0A	; 10
    2a84:	30 e0       	ldi	r19, 0x00	; 0
    2a86:	25 c0       	rjmp	.+74     	; 0x2ad2 <vfprintf+0x27c>
    2a88:	93 2d       	mov	r25, r3
    2a8a:	99 7f       	andi	r25, 0xF9	; 249
    2a8c:	b9 2e       	mov	r11, r25
    2a8e:	8f 36       	cpi	r24, 0x6F	; 111
    2a90:	c1 f0       	breq	.+48     	; 0x2ac2 <vfprintf+0x26c>
    2a92:	18 f4       	brcc	.+6      	; 0x2a9a <vfprintf+0x244>
    2a94:	88 35       	cpi	r24, 0x58	; 88
    2a96:	79 f0       	breq	.+30     	; 0x2ab6 <vfprintf+0x260>
    2a98:	b5 c0       	rjmp	.+362    	; 0x2c04 <vfprintf+0x3ae>
    2a9a:	80 37       	cpi	r24, 0x70	; 112
    2a9c:	19 f0       	breq	.+6      	; 0x2aa4 <vfprintf+0x24e>
    2a9e:	88 37       	cpi	r24, 0x78	; 120
    2aa0:	21 f0       	breq	.+8      	; 0x2aaa <vfprintf+0x254>
    2aa2:	b0 c0       	rjmp	.+352    	; 0x2c04 <vfprintf+0x3ae>
    2aa4:	e9 2f       	mov	r30, r25
    2aa6:	e0 61       	ori	r30, 0x10	; 16
    2aa8:	be 2e       	mov	r11, r30
    2aaa:	b4 fe       	sbrs	r11, 4
    2aac:	0d c0       	rjmp	.+26     	; 0x2ac8 <vfprintf+0x272>
    2aae:	fb 2d       	mov	r31, r11
    2ab0:	f4 60       	ori	r31, 0x04	; 4
    2ab2:	bf 2e       	mov	r11, r31
    2ab4:	09 c0       	rjmp	.+18     	; 0x2ac8 <vfprintf+0x272>
    2ab6:	34 fe       	sbrs	r3, 4
    2ab8:	0a c0       	rjmp	.+20     	; 0x2ace <vfprintf+0x278>
    2aba:	29 2f       	mov	r18, r25
    2abc:	26 60       	ori	r18, 0x06	; 6
    2abe:	b2 2e       	mov	r11, r18
    2ac0:	06 c0       	rjmp	.+12     	; 0x2ace <vfprintf+0x278>
    2ac2:	28 e0       	ldi	r18, 0x08	; 8
    2ac4:	30 e0       	ldi	r19, 0x00	; 0
    2ac6:	05 c0       	rjmp	.+10     	; 0x2ad2 <vfprintf+0x27c>
    2ac8:	20 e1       	ldi	r18, 0x10	; 16
    2aca:	30 e0       	ldi	r19, 0x00	; 0
    2acc:	02 c0       	rjmp	.+4      	; 0x2ad2 <vfprintf+0x27c>
    2ace:	20 e1       	ldi	r18, 0x10	; 16
    2ad0:	32 e0       	ldi	r19, 0x02	; 2
    2ad2:	f8 01       	movw	r30, r16
    2ad4:	b7 fe       	sbrs	r11, 7
    2ad6:	07 c0       	rjmp	.+14     	; 0x2ae6 <vfprintf+0x290>
    2ad8:	60 81       	ld	r22, Z
    2ada:	71 81       	ldd	r23, Z+1	; 0x01
    2adc:	82 81       	ldd	r24, Z+2	; 0x02
    2ade:	93 81       	ldd	r25, Z+3	; 0x03
    2ae0:	0c 5f       	subi	r16, 0xFC	; 252
    2ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ae4:	06 c0       	rjmp	.+12     	; 0x2af2 <vfprintf+0x29c>
    2ae6:	60 81       	ld	r22, Z
    2ae8:	71 81       	ldd	r23, Z+1	; 0x01
    2aea:	80 e0       	ldi	r24, 0x00	; 0
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	0e 5f       	subi	r16, 0xFE	; 254
    2af0:	1f 4f       	sbci	r17, 0xFF	; 255
    2af2:	a3 01       	movw	r20, r6
    2af4:	0e 94 81 16 	call	0x2d02	; 0x2d02 <__ultoa_invert>
    2af8:	88 2e       	mov	r8, r24
    2afa:	86 18       	sub	r8, r6
    2afc:	fb 2d       	mov	r31, r11
    2afe:	ff 77       	andi	r31, 0x7F	; 127
    2b00:	3f 2e       	mov	r3, r31
    2b02:	36 fe       	sbrs	r3, 6
    2b04:	0d c0       	rjmp	.+26     	; 0x2b20 <vfprintf+0x2ca>
    2b06:	23 2d       	mov	r18, r3
    2b08:	2e 7f       	andi	r18, 0xFE	; 254
    2b0a:	a2 2e       	mov	r10, r18
    2b0c:	89 14       	cp	r8, r9
    2b0e:	58 f4       	brcc	.+22     	; 0x2b26 <vfprintf+0x2d0>
    2b10:	34 fe       	sbrs	r3, 4
    2b12:	0b c0       	rjmp	.+22     	; 0x2b2a <vfprintf+0x2d4>
    2b14:	32 fc       	sbrc	r3, 2
    2b16:	09 c0       	rjmp	.+18     	; 0x2b2a <vfprintf+0x2d4>
    2b18:	83 2d       	mov	r24, r3
    2b1a:	8e 7e       	andi	r24, 0xEE	; 238
    2b1c:	a8 2e       	mov	r10, r24
    2b1e:	05 c0       	rjmp	.+10     	; 0x2b2a <vfprintf+0x2d4>
    2b20:	b8 2c       	mov	r11, r8
    2b22:	a3 2c       	mov	r10, r3
    2b24:	03 c0       	rjmp	.+6      	; 0x2b2c <vfprintf+0x2d6>
    2b26:	b8 2c       	mov	r11, r8
    2b28:	01 c0       	rjmp	.+2      	; 0x2b2c <vfprintf+0x2d6>
    2b2a:	b9 2c       	mov	r11, r9
    2b2c:	a4 fe       	sbrs	r10, 4
    2b2e:	0f c0       	rjmp	.+30     	; 0x2b4e <vfprintf+0x2f8>
    2b30:	fe 01       	movw	r30, r28
    2b32:	e8 0d       	add	r30, r8
    2b34:	f1 1d       	adc	r31, r1
    2b36:	80 81       	ld	r24, Z
    2b38:	80 33       	cpi	r24, 0x30	; 48
    2b3a:	21 f4       	brne	.+8      	; 0x2b44 <vfprintf+0x2ee>
    2b3c:	9a 2d       	mov	r25, r10
    2b3e:	99 7e       	andi	r25, 0xE9	; 233
    2b40:	a9 2e       	mov	r10, r25
    2b42:	09 c0       	rjmp	.+18     	; 0x2b56 <vfprintf+0x300>
    2b44:	a2 fe       	sbrs	r10, 2
    2b46:	06 c0       	rjmp	.+12     	; 0x2b54 <vfprintf+0x2fe>
    2b48:	b3 94       	inc	r11
    2b4a:	b3 94       	inc	r11
    2b4c:	04 c0       	rjmp	.+8      	; 0x2b56 <vfprintf+0x300>
    2b4e:	8a 2d       	mov	r24, r10
    2b50:	86 78       	andi	r24, 0x86	; 134
    2b52:	09 f0       	breq	.+2      	; 0x2b56 <vfprintf+0x300>
    2b54:	b3 94       	inc	r11
    2b56:	a3 fc       	sbrc	r10, 3
    2b58:	11 c0       	rjmp	.+34     	; 0x2b7c <vfprintf+0x326>
    2b5a:	a0 fe       	sbrs	r10, 0
    2b5c:	06 c0       	rjmp	.+12     	; 0x2b6a <vfprintf+0x314>
    2b5e:	b2 14       	cp	r11, r2
    2b60:	88 f4       	brcc	.+34     	; 0x2b84 <vfprintf+0x32e>
    2b62:	28 0c       	add	r2, r8
    2b64:	92 2c       	mov	r9, r2
    2b66:	9b 18       	sub	r9, r11
    2b68:	0e c0       	rjmp	.+28     	; 0x2b86 <vfprintf+0x330>
    2b6a:	b2 14       	cp	r11, r2
    2b6c:	60 f4       	brcc	.+24     	; 0x2b86 <vfprintf+0x330>
    2b6e:	b6 01       	movw	r22, r12
    2b70:	80 e2       	ldi	r24, 0x20	; 32
    2b72:	90 e0       	ldi	r25, 0x00	; 0
    2b74:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2b78:	b3 94       	inc	r11
    2b7a:	f7 cf       	rjmp	.-18     	; 0x2b6a <vfprintf+0x314>
    2b7c:	b2 14       	cp	r11, r2
    2b7e:	18 f4       	brcc	.+6      	; 0x2b86 <vfprintf+0x330>
    2b80:	2b 18       	sub	r2, r11
    2b82:	02 c0       	rjmp	.+4      	; 0x2b88 <vfprintf+0x332>
    2b84:	98 2c       	mov	r9, r8
    2b86:	21 2c       	mov	r2, r1
    2b88:	a4 fe       	sbrs	r10, 4
    2b8a:	10 c0       	rjmp	.+32     	; 0x2bac <vfprintf+0x356>
    2b8c:	b6 01       	movw	r22, r12
    2b8e:	80 e3       	ldi	r24, 0x30	; 48
    2b90:	90 e0       	ldi	r25, 0x00	; 0
    2b92:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2b96:	a2 fe       	sbrs	r10, 2
    2b98:	17 c0       	rjmp	.+46     	; 0x2bc8 <vfprintf+0x372>
    2b9a:	a1 fc       	sbrc	r10, 1
    2b9c:	03 c0       	rjmp	.+6      	; 0x2ba4 <vfprintf+0x34e>
    2b9e:	88 e7       	ldi	r24, 0x78	; 120
    2ba0:	90 e0       	ldi	r25, 0x00	; 0
    2ba2:	02 c0       	rjmp	.+4      	; 0x2ba8 <vfprintf+0x352>
    2ba4:	88 e5       	ldi	r24, 0x58	; 88
    2ba6:	90 e0       	ldi	r25, 0x00	; 0
    2ba8:	b6 01       	movw	r22, r12
    2baa:	0c c0       	rjmp	.+24     	; 0x2bc4 <vfprintf+0x36e>
    2bac:	8a 2d       	mov	r24, r10
    2bae:	86 78       	andi	r24, 0x86	; 134
    2bb0:	59 f0       	breq	.+22     	; 0x2bc8 <vfprintf+0x372>
    2bb2:	a1 fe       	sbrs	r10, 1
    2bb4:	02 c0       	rjmp	.+4      	; 0x2bba <vfprintf+0x364>
    2bb6:	8b e2       	ldi	r24, 0x2B	; 43
    2bb8:	01 c0       	rjmp	.+2      	; 0x2bbc <vfprintf+0x366>
    2bba:	80 e2       	ldi	r24, 0x20	; 32
    2bbc:	a7 fc       	sbrc	r10, 7
    2bbe:	8d e2       	ldi	r24, 0x2D	; 45
    2bc0:	b6 01       	movw	r22, r12
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2bc8:	89 14       	cp	r8, r9
    2bca:	38 f4       	brcc	.+14     	; 0x2bda <vfprintf+0x384>
    2bcc:	b6 01       	movw	r22, r12
    2bce:	80 e3       	ldi	r24, 0x30	; 48
    2bd0:	90 e0       	ldi	r25, 0x00	; 0
    2bd2:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2bd6:	9a 94       	dec	r9
    2bd8:	f7 cf       	rjmp	.-18     	; 0x2bc8 <vfprintf+0x372>
    2bda:	8a 94       	dec	r8
    2bdc:	f3 01       	movw	r30, r6
    2bde:	e8 0d       	add	r30, r8
    2be0:	f1 1d       	adc	r31, r1
    2be2:	80 81       	ld	r24, Z
    2be4:	b6 01       	movw	r22, r12
    2be6:	90 e0       	ldi	r25, 0x00	; 0
    2be8:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2bec:	81 10       	cpse	r8, r1
    2bee:	f5 cf       	rjmp	.-22     	; 0x2bda <vfprintf+0x384>
    2bf0:	22 20       	and	r2, r2
    2bf2:	09 f4       	brne	.+2      	; 0x2bf6 <vfprintf+0x3a0>
    2bf4:	42 ce       	rjmp	.-892    	; 0x287a <vfprintf+0x24>
    2bf6:	b6 01       	movw	r22, r12
    2bf8:	80 e2       	ldi	r24, 0x20	; 32
    2bfa:	90 e0       	ldi	r25, 0x00	; 0
    2bfc:	0e 94 45 16 	call	0x2c8a	; 0x2c8a <fputc>
    2c00:	2a 94       	dec	r2
    2c02:	f6 cf       	rjmp	.-20     	; 0x2bf0 <vfprintf+0x39a>
    2c04:	f6 01       	movw	r30, r12
    2c06:	86 81       	ldd	r24, Z+6	; 0x06
    2c08:	97 81       	ldd	r25, Z+7	; 0x07
    2c0a:	02 c0       	rjmp	.+4      	; 0x2c10 <vfprintf+0x3ba>
    2c0c:	8f ef       	ldi	r24, 0xFF	; 255
    2c0e:	9f ef       	ldi	r25, 0xFF	; 255
    2c10:	2b 96       	adiw	r28, 0x0b	; 11
    2c12:	e2 e1       	ldi	r30, 0x12	; 18
    2c14:	0c 94 fb 16 	jmp	0x2df6	; 0x2df6 <__epilogue_restores__>

00002c18 <calloc>:
    2c18:	0f 93       	push	r16
    2c1a:	1f 93       	push	r17
    2c1c:	cf 93       	push	r28
    2c1e:	df 93       	push	r29
    2c20:	86 9f       	mul	r24, r22
    2c22:	80 01       	movw	r16, r0
    2c24:	87 9f       	mul	r24, r23
    2c26:	10 0d       	add	r17, r0
    2c28:	96 9f       	mul	r25, r22
    2c2a:	10 0d       	add	r17, r0
    2c2c:	11 24       	eor	r1, r1
    2c2e:	c8 01       	movw	r24, r16
    2c30:	0e 94 c8 11 	call	0x2390	; 0x2390 <malloc>
    2c34:	ec 01       	movw	r28, r24
    2c36:	00 97       	sbiw	r24, 0x00	; 0
    2c38:	29 f0       	breq	.+10     	; 0x2c44 <calloc+0x2c>
    2c3a:	a8 01       	movw	r20, r16
    2c3c:	60 e0       	ldi	r22, 0x00	; 0
    2c3e:	70 e0       	ldi	r23, 0x00	; 0
    2c40:	0e 94 33 16 	call	0x2c66	; 0x2c66 <memset>
    2c44:	ce 01       	movw	r24, r28
    2c46:	df 91       	pop	r29
    2c48:	cf 91       	pop	r28
    2c4a:	1f 91       	pop	r17
    2c4c:	0f 91       	pop	r16
    2c4e:	08 95       	ret

00002c50 <strnlen_P>:
    2c50:	fc 01       	movw	r30, r24
    2c52:	05 90       	lpm	r0, Z+
    2c54:	61 50       	subi	r22, 0x01	; 1
    2c56:	70 40       	sbci	r23, 0x00	; 0
    2c58:	01 10       	cpse	r0, r1
    2c5a:	d8 f7       	brcc	.-10     	; 0x2c52 <strnlen_P+0x2>
    2c5c:	80 95       	com	r24
    2c5e:	90 95       	com	r25
    2c60:	8e 0f       	add	r24, r30
    2c62:	9f 1f       	adc	r25, r31
    2c64:	08 95       	ret

00002c66 <memset>:
    2c66:	dc 01       	movw	r26, r24
    2c68:	01 c0       	rjmp	.+2      	; 0x2c6c <memset+0x6>
    2c6a:	6d 93       	st	X+, r22
    2c6c:	41 50       	subi	r20, 0x01	; 1
    2c6e:	50 40       	sbci	r21, 0x00	; 0
    2c70:	e0 f7       	brcc	.-8      	; 0x2c6a <memset+0x4>
    2c72:	08 95       	ret

00002c74 <strnlen>:
    2c74:	fc 01       	movw	r30, r24
    2c76:	61 50       	subi	r22, 0x01	; 1
    2c78:	70 40       	sbci	r23, 0x00	; 0
    2c7a:	01 90       	ld	r0, Z+
    2c7c:	01 10       	cpse	r0, r1
    2c7e:	d8 f7       	brcc	.-10     	; 0x2c76 <strnlen+0x2>
    2c80:	80 95       	com	r24
    2c82:	90 95       	com	r25
    2c84:	8e 0f       	add	r24, r30
    2c86:	9f 1f       	adc	r25, r31
    2c88:	08 95       	ret

00002c8a <fputc>:
    2c8a:	0f 93       	push	r16
    2c8c:	1f 93       	push	r17
    2c8e:	cf 93       	push	r28
    2c90:	df 93       	push	r29
    2c92:	fb 01       	movw	r30, r22
    2c94:	23 81       	ldd	r18, Z+3	; 0x03
    2c96:	21 fd       	sbrc	r18, 1
    2c98:	03 c0       	rjmp	.+6      	; 0x2ca0 <fputc+0x16>
    2c9a:	8f ef       	ldi	r24, 0xFF	; 255
    2c9c:	9f ef       	ldi	r25, 0xFF	; 255
    2c9e:	2c c0       	rjmp	.+88     	; 0x2cf8 <fputc+0x6e>
    2ca0:	22 ff       	sbrs	r18, 2
    2ca2:	16 c0       	rjmp	.+44     	; 0x2cd0 <fputc+0x46>
    2ca4:	46 81       	ldd	r20, Z+6	; 0x06
    2ca6:	57 81       	ldd	r21, Z+7	; 0x07
    2ca8:	24 81       	ldd	r18, Z+4	; 0x04
    2caa:	35 81       	ldd	r19, Z+5	; 0x05
    2cac:	42 17       	cp	r20, r18
    2cae:	53 07       	cpc	r21, r19
    2cb0:	44 f4       	brge	.+16     	; 0x2cc2 <fputc+0x38>
    2cb2:	a0 81       	ld	r26, Z
    2cb4:	b1 81       	ldd	r27, Z+1	; 0x01
    2cb6:	9d 01       	movw	r18, r26
    2cb8:	2f 5f       	subi	r18, 0xFF	; 255
    2cba:	3f 4f       	sbci	r19, 0xFF	; 255
    2cbc:	31 83       	std	Z+1, r19	; 0x01
    2cbe:	20 83       	st	Z, r18
    2cc0:	8c 93       	st	X, r24
    2cc2:	26 81       	ldd	r18, Z+6	; 0x06
    2cc4:	37 81       	ldd	r19, Z+7	; 0x07
    2cc6:	2f 5f       	subi	r18, 0xFF	; 255
    2cc8:	3f 4f       	sbci	r19, 0xFF	; 255
    2cca:	37 83       	std	Z+7, r19	; 0x07
    2ccc:	26 83       	std	Z+6, r18	; 0x06
    2cce:	14 c0       	rjmp	.+40     	; 0x2cf8 <fputc+0x6e>
    2cd0:	8b 01       	movw	r16, r22
    2cd2:	ec 01       	movw	r28, r24
    2cd4:	fb 01       	movw	r30, r22
    2cd6:	00 84       	ldd	r0, Z+8	; 0x08
    2cd8:	f1 85       	ldd	r31, Z+9	; 0x09
    2cda:	e0 2d       	mov	r30, r0
    2cdc:	09 95       	icall
    2cde:	89 2b       	or	r24, r25
    2ce0:	e1 f6       	brne	.-72     	; 0x2c9a <fputc+0x10>
    2ce2:	d8 01       	movw	r26, r16
    2ce4:	16 96       	adiw	r26, 0x06	; 6
    2ce6:	8d 91       	ld	r24, X+
    2ce8:	9c 91       	ld	r25, X
    2cea:	17 97       	sbiw	r26, 0x07	; 7
    2cec:	01 96       	adiw	r24, 0x01	; 1
    2cee:	17 96       	adiw	r26, 0x07	; 7
    2cf0:	9c 93       	st	X, r25
    2cf2:	8e 93       	st	-X, r24
    2cf4:	16 97       	sbiw	r26, 0x06	; 6
    2cf6:	ce 01       	movw	r24, r28
    2cf8:	df 91       	pop	r29
    2cfa:	cf 91       	pop	r28
    2cfc:	1f 91       	pop	r17
    2cfe:	0f 91       	pop	r16
    2d00:	08 95       	ret

00002d02 <__ultoa_invert>:
    2d02:	fa 01       	movw	r30, r20
    2d04:	aa 27       	eor	r26, r26
    2d06:	28 30       	cpi	r18, 0x08	; 8
    2d08:	51 f1       	breq	.+84     	; 0x2d5e <__ultoa_invert+0x5c>
    2d0a:	20 31       	cpi	r18, 0x10	; 16
    2d0c:	81 f1       	breq	.+96     	; 0x2d6e <__ultoa_invert+0x6c>
    2d0e:	e8 94       	clt
    2d10:	6f 93       	push	r22
    2d12:	6e 7f       	andi	r22, 0xFE	; 254
    2d14:	6e 5f       	subi	r22, 0xFE	; 254
    2d16:	7f 4f       	sbci	r23, 0xFF	; 255
    2d18:	8f 4f       	sbci	r24, 0xFF	; 255
    2d1a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d1c:	af 4f       	sbci	r26, 0xFF	; 255
    2d1e:	b1 e0       	ldi	r27, 0x01	; 1
    2d20:	3e d0       	rcall	.+124    	; 0x2d9e <__ultoa_invert+0x9c>
    2d22:	b4 e0       	ldi	r27, 0x04	; 4
    2d24:	3c d0       	rcall	.+120    	; 0x2d9e <__ultoa_invert+0x9c>
    2d26:	67 0f       	add	r22, r23
    2d28:	78 1f       	adc	r23, r24
    2d2a:	89 1f       	adc	r24, r25
    2d2c:	9a 1f       	adc	r25, r26
    2d2e:	a1 1d       	adc	r26, r1
    2d30:	68 0f       	add	r22, r24
    2d32:	79 1f       	adc	r23, r25
    2d34:	8a 1f       	adc	r24, r26
    2d36:	91 1d       	adc	r25, r1
    2d38:	a1 1d       	adc	r26, r1
    2d3a:	6a 0f       	add	r22, r26
    2d3c:	71 1d       	adc	r23, r1
    2d3e:	81 1d       	adc	r24, r1
    2d40:	91 1d       	adc	r25, r1
    2d42:	a1 1d       	adc	r26, r1
    2d44:	20 d0       	rcall	.+64     	; 0x2d86 <__ultoa_invert+0x84>
    2d46:	09 f4       	brne	.+2      	; 0x2d4a <__ultoa_invert+0x48>
    2d48:	68 94       	set
    2d4a:	3f 91       	pop	r19
    2d4c:	2a e0       	ldi	r18, 0x0A	; 10
    2d4e:	26 9f       	mul	r18, r22
    2d50:	11 24       	eor	r1, r1
    2d52:	30 19       	sub	r19, r0
    2d54:	30 5d       	subi	r19, 0xD0	; 208
    2d56:	31 93       	st	Z+, r19
    2d58:	de f6       	brtc	.-74     	; 0x2d10 <__ultoa_invert+0xe>
    2d5a:	cf 01       	movw	r24, r30
    2d5c:	08 95       	ret
    2d5e:	46 2f       	mov	r20, r22
    2d60:	47 70       	andi	r20, 0x07	; 7
    2d62:	40 5d       	subi	r20, 0xD0	; 208
    2d64:	41 93       	st	Z+, r20
    2d66:	b3 e0       	ldi	r27, 0x03	; 3
    2d68:	0f d0       	rcall	.+30     	; 0x2d88 <__ultoa_invert+0x86>
    2d6a:	c9 f7       	brne	.-14     	; 0x2d5e <__ultoa_invert+0x5c>
    2d6c:	f6 cf       	rjmp	.-20     	; 0x2d5a <__ultoa_invert+0x58>
    2d6e:	46 2f       	mov	r20, r22
    2d70:	4f 70       	andi	r20, 0x0F	; 15
    2d72:	40 5d       	subi	r20, 0xD0	; 208
    2d74:	4a 33       	cpi	r20, 0x3A	; 58
    2d76:	18 f0       	brcs	.+6      	; 0x2d7e <__ultoa_invert+0x7c>
    2d78:	49 5d       	subi	r20, 0xD9	; 217
    2d7a:	31 fd       	sbrc	r19, 1
    2d7c:	40 52       	subi	r20, 0x20	; 32
    2d7e:	41 93       	st	Z+, r20
    2d80:	02 d0       	rcall	.+4      	; 0x2d86 <__ultoa_invert+0x84>
    2d82:	a9 f7       	brne	.-22     	; 0x2d6e <__ultoa_invert+0x6c>
    2d84:	ea cf       	rjmp	.-44     	; 0x2d5a <__ultoa_invert+0x58>
    2d86:	b4 e0       	ldi	r27, 0x04	; 4
    2d88:	a6 95       	lsr	r26
    2d8a:	97 95       	ror	r25
    2d8c:	87 95       	ror	r24
    2d8e:	77 95       	ror	r23
    2d90:	67 95       	ror	r22
    2d92:	ba 95       	dec	r27
    2d94:	c9 f7       	brne	.-14     	; 0x2d88 <__ultoa_invert+0x86>
    2d96:	00 97       	sbiw	r24, 0x00	; 0
    2d98:	61 05       	cpc	r22, r1
    2d9a:	71 05       	cpc	r23, r1
    2d9c:	08 95       	ret
    2d9e:	9b 01       	movw	r18, r22
    2da0:	ac 01       	movw	r20, r24
    2da2:	0a 2e       	mov	r0, r26
    2da4:	06 94       	lsr	r0
    2da6:	57 95       	ror	r21
    2da8:	47 95       	ror	r20
    2daa:	37 95       	ror	r19
    2dac:	27 95       	ror	r18
    2dae:	ba 95       	dec	r27
    2db0:	c9 f7       	brne	.-14     	; 0x2da4 <__ultoa_invert+0xa2>
    2db2:	62 0f       	add	r22, r18
    2db4:	73 1f       	adc	r23, r19
    2db6:	84 1f       	adc	r24, r20
    2db8:	95 1f       	adc	r25, r21
    2dba:	a0 1d       	adc	r26, r0
    2dbc:	08 95       	ret

00002dbe <__prologue_saves__>:
    2dbe:	2f 92       	push	r2
    2dc0:	3f 92       	push	r3
    2dc2:	4f 92       	push	r4
    2dc4:	5f 92       	push	r5
    2dc6:	6f 92       	push	r6
    2dc8:	7f 92       	push	r7
    2dca:	8f 92       	push	r8
    2dcc:	9f 92       	push	r9
    2dce:	af 92       	push	r10
    2dd0:	bf 92       	push	r11
    2dd2:	cf 92       	push	r12
    2dd4:	df 92       	push	r13
    2dd6:	ef 92       	push	r14
    2dd8:	ff 92       	push	r15
    2dda:	0f 93       	push	r16
    2ddc:	1f 93       	push	r17
    2dde:	cf 93       	push	r28
    2de0:	df 93       	push	r29
    2de2:	cd b7       	in	r28, 0x3d	; 61
    2de4:	de b7       	in	r29, 0x3e	; 62
    2de6:	ca 1b       	sub	r28, r26
    2de8:	db 0b       	sbc	r29, r27
    2dea:	0f b6       	in	r0, 0x3f	; 63
    2dec:	f8 94       	cli
    2dee:	de bf       	out	0x3e, r29	; 62
    2df0:	0f be       	out	0x3f, r0	; 63
    2df2:	cd bf       	out	0x3d, r28	; 61
    2df4:	09 94       	ijmp

00002df6 <__epilogue_restores__>:
    2df6:	2a 88       	ldd	r2, Y+18	; 0x12
    2df8:	39 88       	ldd	r3, Y+17	; 0x11
    2dfa:	48 88       	ldd	r4, Y+16	; 0x10
    2dfc:	5f 84       	ldd	r5, Y+15	; 0x0f
    2dfe:	6e 84       	ldd	r6, Y+14	; 0x0e
    2e00:	7d 84       	ldd	r7, Y+13	; 0x0d
    2e02:	8c 84       	ldd	r8, Y+12	; 0x0c
    2e04:	9b 84       	ldd	r9, Y+11	; 0x0b
    2e06:	aa 84       	ldd	r10, Y+10	; 0x0a
    2e08:	b9 84       	ldd	r11, Y+9	; 0x09
    2e0a:	c8 84       	ldd	r12, Y+8	; 0x08
    2e0c:	df 80       	ldd	r13, Y+7	; 0x07
    2e0e:	ee 80       	ldd	r14, Y+6	; 0x06
    2e10:	fd 80       	ldd	r15, Y+5	; 0x05
    2e12:	0c 81       	ldd	r16, Y+4	; 0x04
    2e14:	1b 81       	ldd	r17, Y+3	; 0x03
    2e16:	aa 81       	ldd	r26, Y+2	; 0x02
    2e18:	b9 81       	ldd	r27, Y+1	; 0x01
    2e1a:	ce 0f       	add	r28, r30
    2e1c:	d1 1d       	adc	r29, r1
    2e1e:	0f b6       	in	r0, 0x3f	; 63
    2e20:	f8 94       	cli
    2e22:	de bf       	out	0x3e, r29	; 62
    2e24:	0f be       	out	0x3f, r0	; 63
    2e26:	cd bf       	out	0x3d, r28	; 61
    2e28:	ed 01       	movw	r28, r26
    2e2a:	08 95       	ret

00002e2c <_exit>:
    2e2c:	f8 94       	cli

00002e2e <__stop_program>:
    2e2e:	ff cf       	rjmp	.-2      	; 0x2e2e <__stop_program>
