
Byggern2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b6  00800100  00002df2  00002e86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002df2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  008001b6  008001b6  00002f3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002f98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003a0  00000000  00000000  00002fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004e20  00000000  00000000  00003374  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001979  00000000  00000000  00008194  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002068  00000000  00000000  00009b0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000095c  00000000  00000000  0000bb78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ff4  00000000  00000000  0000c4d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002482  00000000  00000000  0000d4c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000330  00000000  00000000  0000f94a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 23 06 	jmp	0xc46	; 0xc46 <__ctors_end>
       4:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__vector_1>
       8:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
       c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      10:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      14:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      18:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      1c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      20:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      24:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      28:	0c 94 6b 10 	jmp	0x20d6	; 0x20d6 <__vector_10>
      2c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      30:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      34:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      38:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      3c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      40:	0c 94 de 0f 	jmp	0x1fbc	; 0x1fbc <__vector_16>
      44:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      48:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      4c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      50:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      54:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      58:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      5c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      60:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      64:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      68:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>
      6c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	18 24       	eor	r1, r8
     152:	42 99       	sbic	0x08, 2	; 8
     154:	24 42       	sbci	r18, 0x24	; 36
     156:	81 00       	.word	0x0081	; ????
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	81 42       	sbci	r24, 0x21	; 33
     162:	24 99       	sbic	0x04, 4	; 4
     164:	42 24       	eor	r4, r2
     166:	18 00       	.word	0x0018	; ????
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	ff 3e       	cpi	r31, 0xEF	; 239
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	ff 08       	sbc	r15, r15
     182:	3e 00       	.word	0x003e	; ????
     184:	00 00       	nop
     186:	00 00       	nop
     188:	ff 08       	sbc	r15, r15
     18a:	08 3e       	cpi	r16, 0xE8	; 232
     18c:	00 00       	nop
     18e:	00 00       	nop
     190:	ff 08       	sbc	r15, r15
     192:	08 08       	sbc	r0, r8
     194:	3e 00       	.word	0x003e	; ????
     196:	00 00       	nop
     198:	ff 08       	sbc	r15, r15
     19a:	08 08       	sbc	r0, r8
     19c:	08 3e       	cpi	r16, 0xE8	; 232
     19e:	00 00       	nop
     1a0:	ff 08       	sbc	r15, r15
     1a2:	08 08       	sbc	r0, r8
     1a4:	08 08       	sbc	r0, r8
     1a6:	3e 00       	.word	0x003e	; ????
     1a8:	ff 08       	sbc	r15, r15
     1aa:	08 08       	sbc	r0, r8
     1ac:	08 08       	sbc	r0, r8
     1ae:	08 3e       	cpi	r16, 0xE8	; 232
	...
     1b8:	3c 7e       	andi	r19, 0xEC	; 236
     1ba:	ff ff       	.word	0xffff	; ????
     1bc:	ff ff       	.word	0xffff	; ????
     1be:	7e 3c       	cpi	r23, 0xCE	; 206
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	3e ff       	.word	0xff3e	; ????
     1c8:	00 00       	nop
     1ca:	00 00       	nop
     1cc:	00 3e       	cpi	r16, 0xE0	; 224
     1ce:	08 ff       	.word	0xff08	; ????
     1d0:	00 00       	nop
     1d2:	00 00       	nop
     1d4:	3e 08       	sbc	r3, r14
     1d6:	08 ff       	.word	0xff08	; ????
     1d8:	00 00       	nop
     1da:	00 3e       	cpi	r16, 0xE0	; 224
     1dc:	08 08       	sbc	r0, r8
     1de:	08 ff       	.word	0xff08	; ????
     1e0:	00 00       	nop
     1e2:	3e 08       	sbc	r3, r14
     1e4:	08 08       	sbc	r0, r8
     1e6:	08 ff       	.word	0xff08	; ????
     1e8:	00 3e       	cpi	r16, 0xE0	; 224
     1ea:	08 08       	sbc	r0, r8
     1ec:	08 08       	sbc	r0, r8
     1ee:	08 ff       	.word	0xff08	; ????
     1f0:	3e 08       	sbc	r3, r14
     1f2:	08 08       	sbc	r0, r8
     1f4:	08 08       	sbc	r0, r8
     1f6:	08 ff       	.word	0xff08	; ????
	...
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
	...
     2a4:	03 00       	.word	0x0003	; ????
     2a6:	00 00       	nop
     2a8:	00 00       	nop
     2aa:	00 00       	nop
     2ac:	f8 00       	.word	0x00f8	; ????
     2ae:	00 00       	nop
     2b0:	00 00       	nop
     2b2:	00 00       	nop
     2b4:	04 00       	.word	0x0004	; ????
     2b6:	00 00       	nop
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	00 00       	nop
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	00 c4       	rjmp	.+2048   	; 0xac2 <table+0xac>
     2c2:	00 fd       	sbrc	r16, 0
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <font4>:
     368:	00 00 00 00 00 5c 00 00 0c 00 0c 00 7c 28 7c 28     .....\......|(|(
     378:	58 dc 68 00 24 10 48 00 28 54 28 40 00 0c 00 00     X.h.$.H.(T(@....
     388:	00 78 84 00 84 78 00 00 54 38 54 00 10 7c 10 00     .x...x..T8T..|..
     398:	80 40 00 00 10 10 10 00 00 40 00 00 60 10 0c 00     .@.......@..`...
     3a8:	38 54 38 00 48 7c 40 00 48 64 58 00 44 54 2c 00     8T8.H|@.HdX.DT,.
     3b8:	1c 10 7c 00 5c 54 24 00 38 54 24 00 64 14 0c 00     ..|.\T$.8T$.d...
     3c8:	68 54 2c 00 48 54 38 00 00 48 00 00 80 48 00 00     hT,.HT8..H...H..
     3d8:	10 28 44 00 28 28 28 00 44 28 10 00 04 54 08 00     .(D.(((.D(...T..
     3e8:	38 44 5c 00 78 14 78 00 7c 54 28 00 38 44 28 00     8D\.x.x.|T(.8D(.
     3f8:	7c 44 38 00 7c 54 44 00 7c 14 04 00 38 44 74 00     |D8.|TD.|...8Dt.
     408:	7c 10 7c 00 44 7c 44 00 20 40 3c 00 7c 10 6c 00     |.|.D|D. @<.|.l.
     418:	7c 40 40 00 7c 18 7c 00 78 10 3c 00 38 44 38 00     |@@.|.|.x.<.8D8.
     428:	7c 14 08 00 38 44 b8 00 7c 14 68 00 48 54 24 00     |...8D..|.h.HT$.
     438:	04 7c 04 00 7c 40 7c 00 3c 60 3c 00 7c 30 7c 00     .|..|@|.<`<.|0|.
     448:	6c 10 6c 00 0c 70 0c 00 64 54 4c 00 00 7c 44 00     l.l..p..dTL..|D.
     458:	0c 10 60 00 44 7c 00 00 08 04 08 00 80 80 80 00     ..`.D|..........
     468:	00 04 08 00 30 48 78 00 7c 48 30 00 30 48 48 00     ....0Hx.|H0.0HH.
     478:	30 48 7c 00 30 68 50 00 10 78 14 00 90 a8 78 00     0H|.0hP..x....x.
     488:	7c 08 70 00 50 74 40 00 80 80 74 00 7c 10 68 00     |.p.Pt@...t.|.h.
     498:	44 7c 40 00 78 10 78 00 78 08 70 00 30 48 30 00     D|@.x.x.x.p.0H0.
     4a8:	f8 28 10 00 30 48 f8 00 78 10 08 00 50 58 28 00     .(..0H..x...PX(.
     4b8:	08 3c 48 00 38 40 78 00 38 40 38 00 78 20 78 00     .<H.8@x.8@8.x x.
     4c8:	48 30 48 00 98 a0 78 00 48 68 58 00 10 78 84 00     H0H...x.HhX..x..
     4d8:	00 7c 00 00 84 78 10 00 08 04 08 04                 .|...x......

000004e4 <font6>:
	...
     4ec:	5f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14 00     _...............
     4fc:	24 2a 7f 2a 12 00 23 13 08 64 62 00 36 49 55 22     $*.*..#..db.6IU"
     50c:	50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00 41     P........."A...A
     51c:	22 1c 00 00 08 2a 1c 2a 08 00 08 08 3e 08 08 00     "....*.*....>...
     52c:	00 50 30 00 00 00 08 08 08 08 08 00 00 60 60 00     .P0..........``.
     53c:	00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00 42     .. .....>QIE>..B
     54c:	7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31 00     .@..BaQIF.!AEK1.
     55c:	18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49 49     ......'EEE9.<JII
     56c:	30 00 01 71 09 05 03 00 36 49 49 49 36 00 06 49     0..q....6III6..I
     57c:	49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00 00     I)...66....V6...
     58c:	08 1c 2a 08 08 00 14 14 14 14 14 00 08 08 2a 1c     ..*...........*.
     59c:	08 00 02 01 51 09 06 00 32 49 79 41 3e 00 7e 11     ....Q...2IyA>.~.
     5ac:	11 11 7e 00 7f 49 49 49 36 00 3e 41 41 41 22 00     ..~..III6.>AAA".
     5bc:	7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09 01     .AA"...IIIA.....
     5cc:	01 00 3e 41 41 51 32 00 7f 08 08 08 7f 00 00 41     ..>AAQ2........A
     5dc:	7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41 00     .A.. @A?....."A.
     5ec:	7f 40 40 40 40 00 7f 02 04 02 7f 00 7f 04 08 10     .@@@@...........
     5fc:	7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e 41     ..>AAA>.......>A
     60c:	51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31 00     Q!^....)F.FIII1.
     61c:	01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40 20     ......?@@@?.. @ 
     62c:	1f 00 7f 20 18 20 7f 00 63 14 08 14 63 00 03 04     ... . ..c...c...
     63c:	78 04 03 00 61 51 49 45 43 00 00 00 7f 41 41 00     x...aQIEC....AA.
     64c:	02 04 08 10 20 00 41 41 7f 00 00 00 04 02 01 02     .... .AA........
     65c:	04 00 40 40 40 40 40 00 00 01 02 04 00 00 20 54     ..@@@@@....... T
     66c:	54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20 00     TTx..HDD8.8DDD .
     67c:	38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09 01     8DDH..8TTT...~..
     68c:	02 00 08 14 54 54 3c 00 7f 08 04 04 78 00 00 44     ....TT<.....x..D
     69c:	7d 40 00 00 20 40 44 3d 00 00 00 7f 10 28 44 00     }@.. @D=.....(D.
     6ac:	00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04 04     .A.@..|...x.|...
     6bc:	78 00 38 44 44 44 38 00 7c 14 14 14 08 00 08 14     x.8DDD8.|.......
     6cc:	14 18 7c 00 7c 08 04 04 08 00 48 54 54 54 20 00     ..|.|.....HTTT .
     6dc:	04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40 20     .?D@ .<@@ |.. @ 
     6ec:	1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 0c 50     ..<@0@<.D(.(D..P
     6fc:	50 50 3c 00 44 64 54 4c 44 00 00 08 36 41 00 00     PP<.DdTLD...6A..
     70c:	00 00 7f 00 00 00 00 41 36 08 00 00 02 01 03 02     .......A6.......
     71c:	01 00                                               ..

0000071e <font8>:
	...
     726:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     736:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     746:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     756:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     766:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     776:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     786:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     796:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     7a6:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     7b6:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     7c6:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     7d6:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     7e6:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     7f6:	00 a0 ec 6c 00 00 00 00 18 24 42 99 24 42 81 00     ...l.....$B.$B..
     806:	14 14 14 14 14 14 00 00 81 42 24 99 42 24 18 00     .........B$.B$..
     816:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     826:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     836:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     846:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     856:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     866:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     876:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     886:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     896:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     8a6:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     8b6:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     8c6:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     8d6:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     8e6:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     8f6:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     906:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     916:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     926:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     936:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     946:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     956:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     966:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     976:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     986:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     996:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     9a6:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     9b6:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     9c6:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     9d6:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     9e6:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     9f6:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     a06:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

00000a16 <table>:
     a16:	3c 0c 3b 0c 33 0c 2b 0c 20 0c 16 0c 0c 0c 0b 0c     <.;.3.+. .......
     a26:	0a 0c 09 0c ff 0b f5 0b e8 0b dc 0b d0 0b cf 0b     ................
     a36:	ce 0b c3 0b b7 0b b6 0b aa 0b 9a 0b 99 0b 98 0b     ................
     a46:	97 0b 90 0b 8b 0b 8a 0b 89 0b 88 0b 87 0b 86 0b     ................
     a56:	7b 0b 7a 0b 71 0b 6a 0b 69 0b 68 0b 67 0b 66 0b     {.z.q.j.i.h.g.f.
     a66:	65 0b 64 0b 59 0b 50 0b 4f 0b 4e 0b 4d 0b 4c 0b     e.d.Y.P.O.N.M.L.
     a76:	4b 0b 4a 0b 41 0b 3a 0b 39 0b 38 0b 37 0b 36 0b     K.J.A.:.9.8.7.6.
     a86:	35 0b 34 0b 2d 0b 26 0b 25 0b 24 0b 23 0b 22 0b     5.4.-.&.%.$.#.".
     a96:	21 0b 20 0b 14 0b 13 0b 06 0b f7 0a f6 0a f5 0a     !. .............
     aa6:	eb 0a ea 0a e9 0a e8 0a e7 0a e6 0a e5 0a e4 0a     ................
     ab6:	e3 0a d9 0a d8 0a ca 0a c9 0a c8 0a c7 0a c6 0a     ................

00000ac6 <gameover_8>:
	...

00000ac7 <gameover_7>:
	...

00000ac8 <gameover_6>:
	...

00000ac9 <gameover_5>:
	...

00000aca <gameover_4>:
     aca:	53 45 43 4f 4e 44 53 20 55 53 45 44 3a 00           SECONDS USED:.

00000ad8 <gameover_3>:
	...

00000ad9 <gameover_2>:
     ad9:	47 41 4d 45 20 4f 56 45 52 00                       GAME OVER.

00000ae3 <gameover_1>:
	...

00000ae4 <animation_8>:
	...

00000ae5 <animation_7>:
	...

00000ae6 <animation_6>:
	...

00000ae7 <animation_5>:
	...

00000ae8 <animation_4>:
	...

00000ae9 <animation_3>:
	...

00000aea <animation_2>:
	...

00000aeb <animation_1>:
     aeb:	41 4e 49 4d 41 54 49 4f 4e 00                       ANIMATION.

00000af5 <calibrate_8>:
	...

00000af6 <calibrate_7>:
	...

00000af7 <calibrate_6>:
     af7:	54 48 45 20 43 4f 4e 54 52 4f 4c 4c 45 52 00        THE CONTROLLER.

00000b06 <calibrate_5>:
     b06:	44 4f 20 4e 4f 54 20 54 4f 55 43 48 00              DO NOT TOUCH.

00000b13 <calibrate_4>:
	...

00000b14 <calibrate_3>:
     b14:	43 41 4c 49 42 52 41 54 49 4e 47 00                 CALIBRATING.

00000b20 <calibrate_2>:
	...

00000b21 <calibrate_1>:
	...

00000b22 <slider_8>:
	...

00000b23 <slider_7>:
	...

00000b24 <slider_6>:
	...

00000b25 <slider_5>:
	...

00000b26 <slider_4>:
     b26:	43 48 4f 53 45 4e 00                                CHOSEN.

00000b2d <slider_3>:
     b2d:	53 4c 49 44 45 52 00                                SLIDER.

00000b34 <slider_2>:
	...

00000b35 <slider_1>:
	...

00000b36 <joystick_8>:
	...

00000b37 <joystick_7>:
	...

00000b38 <joystick_6>:
	...

00000b39 <joystick_5>:
	...

00000b3a <joystick_4>:
     b3a:	43 48 4f 53 45 4e 00                                CHOSEN.

00000b41 <joystick_3>:
     b41:	4a 4f 59 53 54 49 43 4b 00                          JOYSTICK.

00000b4a <joystick_2>:
	...

00000b4b <joystick_1>:
	...

00000b4c <controllerP_8>:
	...

00000b4d <controllerP_7>:
	...

00000b4e <controllerP_6>:
	...

00000b4f <controllerP_5>:
	...

00000b50 <controllerP_4>:
     b50:	3e 53 4c 49 44 45 52 3c 00                          >SLIDER<.

00000b59 <controllerP_3>:
     b59:	3e 4a 4f 59 53 54 49 43 4b 3c 00                    >JOYSTICK<.

00000b64 <controllerP_2>:
	...

00000b65 <controllerP_1>:
	...

00000b66 <controller_8>:
	...

00000b67 <controller_7>:
	...

00000b68 <controller_6>:
	...

00000b69 <controller_5>:
	...

00000b6a <controller_4>:
     b6a:	53 4c 49 44 45 52 00                                SLIDER.

00000b71 <controller_3>:
     b71:	4a 4f 59 53 54 49 43 4b 00                          JOYSTICK.

00000b7a <controller_2>:
	...

00000b7b <controller_1>:
     b7b:	43 4f 4e 54 52 4f 4c 4c 45 52 00                    CONTROLLER.

00000b86 <p2_8>:
	...

00000b87 <p2_7>:
	...

00000b88 <p2_6>:
	...

00000b89 <p2_5>:
	...

00000b8a <p2_4>:
	...

00000b8b <p2_3>:
     b8b:	53 4f 4f 4e 00                                      SOON.

00000b90 <p2_2>:
     b90:	43 4f 4d 49 4e 47 00                                COMING.

00000b97 <p2_1>:
	...

00000b98 <p1_8>:
	...

00000b99 <p1_7>:
	...

00000b9a <p1_6>:
     b9a:	42 55 54 54 4f 4e 20 54 4f 20 53 54 41 52 54 00     BUTTON TO START.

00000baa <p1_5>:
     baa:	50 52 45 53 53 20 52 49 47 48 54 00                 PRESS RIGHT.

00000bb6 <p1_4>:
	...

00000bb7 <p1_3>:
     bb7:	4f 4e 20 53 4f 4c 45 4e 4f 49 44 00                 ON SOLENOID.

00000bc3 <p1_2>:
     bc3:	50 4c 41 43 45 20 42 41 4c 4c 00                    PLACE BALL.

00000bce <p1_1>:
	...

00000bcf <mainP_8>:
	...

00000bd0 <mainP_7>:
     bd0:	3e 41 4e 49 4d 41 54 49 4f 4e 3c 00                 >ANIMATION<.

00000bdc <mainP_6>:
     bdc:	3e 43 41 4c 49 42 52 41 54 45 3c 00                 >CALIBRATE<.

00000be8 <mainP_5>:
     be8:	3e 43 4f 4e 54 52 4f 4c 4c 45 52 3c 00              >CONTROLLER<.

00000bf5 <mainP_4>:
     bf5:	3e 32 50 4c 41 59 45 52 3c 00                       >2PLAYER<.

00000bff <mainP_3>:
     bff:	3e 31 50 4c 41 59 45 52 3c 00                       >1PLAYER<.

00000c09 <mainP_2>:
	...

00000c0a <mainP_1>:
	...

00000c0b <main_8>:
	...

00000c0c <main_7>:
     c0c:	41 4e 49 4d 41 54 49 4f 4e 00                       ANIMATION.

00000c16 <main_6>:
     c16:	43 41 4c 49 42 52 41 54 45 00                       CALIBRATE.

00000c20 <main_5>:
     c20:	43 4f 4e 54 52 4f 4c 4c 45 52 00                    CONTROLLER.

00000c2b <main_4>:
     c2b:	32 50 4c 41 59 45 52 00                             2PLAYER.

00000c33 <main_3>:
     c33:	31 50 4c 41 59 45 52 00                             1PLAYER.

00000c3b <main_2>:
	...

00000c3c <main_1>:
     c3c:	50 49 4e 47 50 4f 4e 47 00 00                       PINGPONG..

00000c46 <__ctors_end>:
     c46:	11 24       	eor	r1, r1
     c48:	1f be       	out	0x3f, r1	; 63
     c4a:	cf ef       	ldi	r28, 0xFF	; 255
     c4c:	d4 e0       	ldi	r29, 0x04	; 4
     c4e:	de bf       	out	0x3e, r29	; 62
     c50:	cd bf       	out	0x3d, r28	; 61

00000c52 <__do_copy_data>:
     c52:	11 e0       	ldi	r17, 0x01	; 1
     c54:	a0 e0       	ldi	r26, 0x00	; 0
     c56:	b1 e0       	ldi	r27, 0x01	; 1
     c58:	e2 ef       	ldi	r30, 0xF2	; 242
     c5a:	fd e2       	ldi	r31, 0x2D	; 45
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <__do_copy_data+0x10>
     c5e:	05 90       	lpm	r0, Z+
     c60:	0d 92       	st	X+, r0
     c62:	a6 3b       	cpi	r26, 0xB6	; 182
     c64:	b1 07       	cpc	r27, r17
     c66:	d9 f7       	brne	.-10     	; 0xc5e <__do_copy_data+0xc>

00000c68 <__do_clear_bss>:
     c68:	21 e0       	ldi	r18, 0x01	; 1
     c6a:	a6 eb       	ldi	r26, 0xB6	; 182
     c6c:	b1 e0       	ldi	r27, 0x01	; 1
     c6e:	01 c0       	rjmp	.+2      	; 0xc72 <.do_clear_bss_start>

00000c70 <.do_clear_bss_loop>:
     c70:	1d 92       	st	X+, r1

00000c72 <.do_clear_bss_start>:
     c72:	a4 3d       	cpi	r26, 0xD4	; 212
     c74:	b2 07       	cpc	r27, r18
     c76:	e1 f7       	brne	.-8      	; 0xc70 <.do_clear_bss_loop>
     c78:	0e 94 26 11 	call	0x224c	; 0x224c <main>
     c7c:	0c 94 f7 16 	jmp	0x2dee	; 0x2dee <_exit>

00000c80 <__bad_interrupt>:
     c80:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000c84 <clock_init>:
     c84:	8c 9a       	sbi	0x11, 4	; 17
     c86:	f8 94       	cli
     c88:	eb e8       	ldi	r30, 0x8B	; 139
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	80 81       	ld	r24, Z
     c8e:	80 64       	ori	r24, 0x40	; 64
     c90:	80 83       	st	Z, r24
     c92:	ea e8       	ldi	r30, 0x8A	; 138
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	81 60       	ori	r24, 0x01	; 1
     c9a:	80 83       	st	Z, r24
     c9c:	80 81       	ld	r24, Z
     c9e:	88 60       	ori	r24, 0x08	; 8
     ca0:	80 83       	st	Z, r24
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     caa:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     cae:	78 94       	sei
     cb0:	08 95       	ret

00000cb2 <adc_init>:
     cb2:	0e 94 42 06 	call	0xc84	; 0xc84 <clock_init>
     cb6:	08 95       	ret

00000cb8 <adc_read>:
     cb8:	cf 93       	push	r28
     cba:	c8 2f       	mov	r28, r24
     cbc:	0e 94 b0 10 	call	0x2160	; 0x2160 <xmem_init>
     cc0:	60 e0       	ldi	r22, 0x00	; 0
     cc2:	74 e0       	ldi	r23, 0x04	; 4
     cc4:	8c 2f       	mov	r24, r28
     cc6:	80 68       	ori	r24, 0x80	; 128
     cc8:	0e 94 b7 10 	call	0x216e	; 0x216e <xmem_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ccc:	80 e1       	ldi	r24, 0x10	; 16
     cce:	8a 95       	dec	r24
     cd0:	f1 f7       	brne	.-4      	; 0xcce <adc_read+0x16>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <adc_read+0x1c>
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	94 e0       	ldi	r25, 0x04	; 4
     cd8:	0e 94 bb 10 	call	0x2176	; 0x2176 <xmem_read>
     cdc:	90 e1       	ldi	r25, 0x10	; 16
     cde:	9a 95       	dec	r25
     ce0:	f1 f7       	brne	.-4      	; 0xcde <adc_read+0x26>
     ce2:	00 c0       	rjmp	.+0      	; 0xce4 <adc_read+0x2c>
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	cf 91       	pop	r28
     ce8:	08 95       	ret

00000cea <can_init>:
     cea:	0e 94 08 11 	call	0x2210	; 0x2210 <mcp_init>
     cee:	61 e0       	ldi	r22, 0x01	; 1
     cf0:	88 e2       	ldi	r24, 0x28	; 40
     cf2:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     cf6:	65 eb       	ldi	r22, 0xB5	; 181
     cf8:	89 e2       	ldi	r24, 0x29	; 41
     cfa:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     cfe:	63 e4       	ldi	r22, 0x43	; 67
     d00:	8a e2       	ldi	r24, 0x2A	; 42
     d02:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	8f e0       	ldi	r24, 0x0F	; 15
     d0a:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d0e:	f8 94       	cli
     d10:	85 b7       	in	r24, 0x35	; 53
     d12:	82 60       	ori	r24, 0x02	; 2
     d14:	85 bf       	out	0x35, r24	; 53
     d16:	85 b7       	in	r24, 0x35	; 53
     d18:	8e 7f       	andi	r24, 0xFE	; 254
     d1a:	85 bf       	out	0x35, r24	; 53
     d1c:	8b b7       	in	r24, 0x3b	; 59
     d1e:	80 64       	ori	r24, 0x40	; 64
     d20:	8b bf       	out	0x3b, r24	; 59
     d22:	78 94       	sei
     d24:	61 e0       	ldi	r22, 0x01	; 1
     d26:	8b e2       	ldi	r24, 0x2B	; 43
     d28:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d2c:	08 95       	ret

00000d2e <can_send_message>:
     d2e:	ff 92       	push	r15
     d30:	0f 93       	push	r16
     d32:	1f 93       	push	r17
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	ec 01       	movw	r28, r24
     d3a:	08 81       	ld	r16, Y
     d3c:	19 81       	ldd	r17, Y+1	; 0x01
     d3e:	b8 01       	movw	r22, r16
     d40:	76 95       	lsr	r23
     d42:	67 95       	ror	r22
     d44:	76 95       	lsr	r23
     d46:	67 95       	ror	r22
     d48:	76 95       	lsr	r23
     d4a:	67 95       	ror	r22
     d4c:	81 e3       	ldi	r24, 0x31	; 49
     d4e:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d52:	60 2f       	mov	r22, r16
     d54:	62 95       	swap	r22
     d56:	66 0f       	add	r22, r22
     d58:	60 7e       	andi	r22, 0xE0	; 224
     d5a:	82 e3       	ldi	r24, 0x32	; 50
     d5c:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d60:	fa 80       	ldd	r15, Y+2	; 0x02
     d62:	6f 2d       	mov	r22, r15
     d64:	6f 70       	andi	r22, 0x0F	; 15
     d66:	85 e3       	ldi	r24, 0x35	; 53
     d68:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d6c:	ff 20       	and	r15, r15
     d6e:	79 f0       	breq	.+30     	; 0xd8e <can_send_message+0x60>
     d70:	8e 01       	movw	r16, r28
     d72:	0d 5f       	subi	r16, 0xFD	; 253
     d74:	1f 4f       	sbci	r17, 0xFF	; 255
     d76:	d6 e3       	ldi	r29, 0x36	; 54
     d78:	df 0d       	add	r29, r15
     d7a:	c6 e3       	ldi	r28, 0x36	; 54
     d7c:	f8 01       	movw	r30, r16
     d7e:	61 91       	ld	r22, Z+
     d80:	8f 01       	movw	r16, r30
     d82:	8c 2f       	mov	r24, r28
     d84:	0e 94 cd 10 	call	0x219a	; 0x219a <mcp_write>
     d88:	cf 5f       	subi	r28, 0xFF	; 255
     d8a:	cd 13       	cpse	r28, r29
     d8c:	f7 cf       	rjmp	.-18     	; 0xd7c <can_send_message+0x4e>
     d8e:	81 e8       	ldi	r24, 0x81	; 129
     d90:	0e 94 df 10 	call	0x21be	; 0x21be <mcp_req_to_send>
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	ff 90       	pop	r15
     d9e:	08 95       	ret

00000da0 <__vector_1>:
     da0:	1f 92       	push	r1
     da2:	0f 92       	push	r0
     da4:	0f b6       	in	r0, 0x3f	; 63
     da6:	0f 92       	push	r0
     da8:	11 24       	eor	r1, r1
     daa:	8f 93       	push	r24
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <__data_end>
     db2:	8f 91       	pop	r24
     db4:	0f 90       	pop	r0
     db6:	0f be       	out	0x3f, r0	; 63
     db8:	0f 90       	pop	r0
     dba:	1f 90       	pop	r1
     dbc:	18 95       	reti

00000dbe <can_clearIfInterrupted>:
     dbe:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <__data_end>
     dc2:	81 30       	cpi	r24, 0x01	; 1
     dc4:	51 f4       	brne	.+20     	; 0xdda <can_clearIfInterrupted+0x1c>
     dc6:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <__data_end>
     dca:	40 e0       	ldi	r20, 0x00	; 0
     dcc:	61 e0       	ldi	r22, 0x01	; 1
     dce:	8c e2       	ldi	r24, 0x2C	; 44
     dd0:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <mcp_bit_modify>
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	08 95       	ret
     dda:	80 e0       	ldi	r24, 0x00	; 0
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	08 95       	ret

00000de0 <joystick_calibrate>:
     de0:	cf 92       	push	r12
     de2:	df 92       	push	r13
     de4:	ef 92       	push	r14
     de6:	ff 92       	push	r15
     de8:	0f 93       	push	r16
     dea:	1f 93       	push	r17
     dec:	cf 93       	push	r28
     dee:	df 93       	push	r29
     df0:	cd b7       	in	r28, 0x3d	; 61
     df2:	de b7       	in	r29, 0x3e	; 62
     df4:	c0 59       	subi	r28, 0x90	; 144
     df6:	d1 40       	sbci	r29, 0x01	; 1
     df8:	0f b6       	in	r0, 0x3f	; 63
     dfa:	f8 94       	cli
     dfc:	de bf       	out	0x3e, r29	; 62
     dfe:	0f be       	out	0x3f, r0	; 63
     e00:	cd bf       	out	0x3d, r28	; 61
     e02:	8e 01       	movw	r16, r28
     e04:	07 53       	subi	r16, 0x37	; 55
     e06:	1f 4f       	sbci	r17, 0xFF	; 255
     e08:	ce 01       	movw	r24, r28
     e0a:	01 96       	adiw	r24, 0x01	; 1
     e0c:	7c 01       	movw	r14, r24
     e0e:	6e 01       	movw	r12, r28
     e10:	9f e6       	ldi	r25, 0x6F	; 111
     e12:	c9 1a       	sub	r12, r25
     e14:	9e ef       	ldi	r25, 0xFE	; 254
     e16:	d9 0a       	sbc	r13, r25
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e20:	f8 01       	movw	r30, r16
     e22:	81 93       	st	Z+, r24
     e24:	91 93       	st	Z+, r25
     e26:	8f 01       	movw	r16, r30
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e30:	f7 01       	movw	r30, r14
     e32:	81 93       	st	Z+, r24
     e34:	91 93       	st	Z+, r25
     e36:	7f 01       	movw	r14, r30
     e38:	0c 15       	cp	r16, r12
     e3a:	1d 05       	cpc	r17, r13
     e3c:	69 f7       	brne	.-38     	; 0xe18 <joystick_calibrate+0x38>
     e3e:	64 e6       	ldi	r22, 0x64	; 100
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	ce 01       	movw	r24, r28
     e44:	87 53       	subi	r24, 0x37	; 55
     e46:	9f 4f       	sbci	r25, 0xFF	; 255
     e48:	0e 94 69 11 	call	0x22d2	; 0x22d2 <util_median>
     e4c:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <x_offset>
     e50:	64 e6       	ldi	r22, 0x64	; 100
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	ce 01       	movw	r24, r28
     e56:	01 96       	adiw	r24, 0x01	; 1
     e58:	0e 94 69 11 	call	0x22d2	; 0x22d2 <util_median>
     e5c:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <y_offset>
     e60:	c0 57       	subi	r28, 0x70	; 112
     e62:	de 4f       	sbci	r29, 0xFE	; 254
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	cd bf       	out	0x3d, r28	; 61
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	1f 91       	pop	r17
     e74:	0f 91       	pop	r16
     e76:	ff 90       	pop	r15
     e78:	ef 90       	pop	r14
     e7a:	df 90       	pop	r13
     e7c:	cf 90       	pop	r12
     e7e:	08 95       	ret

00000e80 <joystick_getPosition>:
     e80:	1f 93       	push	r17
     e82:	cf 93       	push	r28
     e84:	df 93       	push	r29
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e8e:	ec 01       	movw	r28, r24
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
     e98:	9c 01       	movw	r18, r24
     e9a:	48 2f       	mov	r20, r24
     e9c:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <x_offset>
     ea0:	8c 17       	cp	r24, r28
     ea2:	a8 f4       	brcc	.+42     	; 0xece <joystick_getPosition+0x4e>
     ea4:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <x_offset>
     ea8:	50 91 c3 01 	lds	r21, 0x01C3	; 0x8001c3 <x_offset>
     eac:	dd 27       	eor	r29, r29
     eae:	c8 1b       	sub	r28, r24
     eb0:	d1 09       	sbc	r29, r1
     eb2:	64 e6       	ldi	r22, 0x64	; 100
     eb4:	6c 9f       	mul	r22, r28
     eb6:	c0 01       	movw	r24, r0
     eb8:	6d 9f       	mul	r22, r29
     eba:	90 0d       	add	r25, r0
     ebc:	11 24       	eor	r1, r1
     ebe:	6f ef       	ldi	r22, 0xFF	; 255
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	65 1b       	sub	r22, r21
     ec4:	71 09       	sbc	r23, r1
     ec6:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
     eca:	fb 01       	movw	r30, r22
     ecc:	18 c0       	rjmp	.+48     	; 0xefe <joystick_getPosition+0x7e>
     ece:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <x_offset>
     ed2:	c8 17       	cp	r28, r24
     ed4:	90 f4       	brcc	.+36     	; 0xefa <joystick_getPosition+0x7a>
     ed6:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <x_offset>
     eda:	60 91 c3 01 	lds	r22, 0x01C3	; 0x8001c3 <x_offset>
     ede:	dd 27       	eor	r29, r29
     ee0:	c8 1b       	sub	r28, r24
     ee2:	d1 09       	sbc	r29, r1
     ee4:	54 e6       	ldi	r21, 0x64	; 100
     ee6:	5c 9f       	mul	r21, r28
     ee8:	c0 01       	movw	r24, r0
     eea:	5d 9f       	mul	r21, r29
     eec:	90 0d       	add	r25, r0
     eee:	11 24       	eor	r1, r1
     ef0:	70 e0       	ldi	r23, 0x00	; 0
     ef2:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
     ef6:	fb 01       	movw	r30, r22
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <joystick_getPosition+0x7e>
     efa:	e0 e0       	ldi	r30, 0x00	; 0
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <y_offset>
     f02:	84 17       	cp	r24, r20
     f04:	a8 f4       	brcc	.+42     	; 0xf30 <joystick_getPosition+0xb0>
     f06:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <y_offset>
     f0a:	40 91 c2 01 	lds	r20, 0x01C2	; 0x8001c2 <y_offset>
     f0e:	33 27       	eor	r19, r19
     f10:	28 1b       	sub	r18, r24
     f12:	31 09       	sbc	r19, r1
     f14:	54 e6       	ldi	r21, 0x64	; 100
     f16:	52 9f       	mul	r21, r18
     f18:	c0 01       	movw	r24, r0
     f1a:	53 9f       	mul	r21, r19
     f1c:	90 0d       	add	r25, r0
     f1e:	11 24       	eor	r1, r1
     f20:	6f ef       	ldi	r22, 0xFF	; 255
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	64 1b       	sub	r22, r20
     f26:	71 09       	sbc	r23, r1
     f28:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
     f2c:	9b 01       	movw	r18, r22
     f2e:	18 c0       	rjmp	.+48     	; 0xf60 <joystick_getPosition+0xe0>
     f30:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <y_offset>
     f34:	48 17       	cp	r20, r24
     f36:	90 f4       	brcc	.+36     	; 0xf5c <joystick_getPosition+0xdc>
     f38:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <y_offset>
     f3c:	60 91 c2 01 	lds	r22, 0x01C2	; 0x8001c2 <y_offset>
     f40:	33 27       	eor	r19, r19
     f42:	28 1b       	sub	r18, r24
     f44:	31 09       	sbc	r19, r1
     f46:	44 e6       	ldi	r20, 0x64	; 100
     f48:	42 9f       	mul	r20, r18
     f4a:	c0 01       	movw	r24, r0
     f4c:	43 9f       	mul	r20, r19
     f4e:	90 0d       	add	r25, r0
     f50:	11 24       	eor	r1, r1
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
     f58:	9b 01       	movw	r18, r22
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <joystick_getPosition+0xe0>
     f5c:	20 e0       	ldi	r18, 0x00	; 0
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	bf 01       	movw	r22, r30
     f62:	c9 01       	movw	r24, r18
     f64:	df 91       	pop	r29
     f66:	cf 91       	pop	r28
     f68:	1f 91       	pop	r17
     f6a:	08 95       	ret

00000f6c <joystick_getDirection>:
     f6c:	0e 94 40 07 	call	0xe80	; 0xe80 <joystick_getPosition>
     f70:	6e 3c       	cpi	r22, 0xCE	; 206
     f72:	ef ef       	ldi	r30, 0xFF	; 255
     f74:	7e 07       	cpc	r23, r30
     f76:	84 f0       	brlt	.+32     	; 0xf98 <joystick_getDirection+0x2c>
     f78:	63 33       	cpi	r22, 0x33	; 51
     f7a:	71 05       	cpc	r23, r1
     f7c:	7c f4       	brge	.+30     	; 0xf9c <joystick_getDirection+0x30>
     f7e:	8e 3c       	cpi	r24, 0xCE	; 206
     f80:	2f ef       	ldi	r18, 0xFF	; 255
     f82:	92 07       	cpc	r25, r18
     f84:	6c f0       	brlt	.+26     	; 0xfa0 <joystick_getDirection+0x34>
     f86:	c3 97       	sbiw	r24, 0x33	; 51
     f88:	6c f4       	brge	.+26     	; 0xfa4 <joystick_getDirection+0x38>
     f8a:	6e 5c       	subi	r22, 0xCE	; 206
     f8c:	7f 4f       	sbci	r23, 0xFF	; 255
     f8e:	65 36       	cpi	r22, 0x65	; 101
     f90:	71 05       	cpc	r23, r1
     f92:	50 f0       	brcs	.+20     	; 0xfa8 <joystick_getDirection+0x3c>
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	08 95       	ret
     f98:	80 e0       	ldi	r24, 0x00	; 0
     f9a:	08 95       	ret
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	08 95       	ret
     fa0:	82 e0       	ldi	r24, 0x02	; 2
     fa2:	08 95       	ret
     fa4:	83 e0       	ldi	r24, 0x03	; 3
     fa6:	08 95       	ret
     fa8:	84 e0       	ldi	r24, 0x04	; 4
     faa:	08 95       	ret

00000fac <joystick_sendPositionButtonCan>:
     fac:	cf 93       	push	r28
     fae:	df 93       	push	r29
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	2b 97       	sbiw	r28, 0x0b	; 11
     fb6:	0f b6       	in	r0, 0x3f	; 63
     fb8:	f8 94       	cli
     fba:	de bf       	out	0x3e, r29	; 62
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	21 e0       	ldi	r18, 0x01	; 1
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	3a 83       	std	Y+2, r19	; 0x02
     fc6:	29 83       	std	Y+1, r18	; 0x01
     fc8:	93 e0       	ldi	r25, 0x03	; 3
     fca:	9b 83       	std	Y+3, r25	; 0x03
     fcc:	6c 83       	std	Y+4, r22	; 0x04
     fce:	8d 83       	std	Y+5, r24	; 0x05
     fd0:	86 b3       	in	r24, 0x16	; 22
     fd2:	81 70       	andi	r24, 0x01	; 1
     fd4:	8e 83       	std	Y+6, r24	; 0x06
     fd6:	ce 01       	movw	r24, r28
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	0e 94 97 06 	call	0xd2e	; 0xd2e <can_send_message>
     fde:	2b 96       	adiw	r28, 0x0b	; 11
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	08 95       	ret

00000ff0 <f_2player>:
		pos_child=0;
		(*curr_menu->function)(main_menu->name);
}

void f_2player(){
	oled_reset();
     ff0:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_p2);
     ff4:	88 e1       	ldi	r24, 0x18	; 24
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
     ffc:	08 95       	ret

00000ffe <f_controller>:
}

void f_controller(){
	oled_reset();
     ffe:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_controller);
    1002:	80 e2       	ldi	r24, 0x20	; 32
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
	oled_print_page_progmem(s_controllerP,header_pages);
    100a:	62 e0       	ldi	r22, 0x02	; 2
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	88 e2       	ldi	r24, 0x28	; 40
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <oled_print_page_progmem>
    1016:	08 95       	ret

00001018 <f_1player>:
	
	return new_submenu;
}


void f_1player(){
    1018:	0f 93       	push	r16
    101a:	1f 93       	push	r17
    101c:	cf 93       	push	r28
    101e:	df 93       	push	r29
    1020:	cd b7       	in	r28, 0x3d	; 61
    1022:	de b7       	in	r29, 0x3e	; 62
    1024:	2b 97       	sbiw	r28, 0x0b	; 11
    1026:	0f b6       	in	r0, 0x3f	; 63
    1028:	f8 94       	cli
    102a:	de bf       	out	0x3e, r29	; 62
    102c:	0f be       	out	0x3f, r0	; 63
    102e:	cd bf       	out	0x3d, r28	; 61

	oled_reset();
    1030:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_p1);
    1034:	80 e1       	ldi	r24, 0x10	; 16
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
	joystick_sendPositionButtonCan(joystick_getPosition());//send motor to mid before start
    103c:	0e 94 40 07 	call	0xe80	; 0xe80 <joystick_getPosition>
    1040:	0e 94 d6 07 	call	0xfac	; 0xfac <joystick_sendPositionButtonCan>
	while(!(PINB & (1<<0))){
    1044:	b0 99       	sbic	0x16, 0	; 22
    1046:	63 c0       	rjmp	.+198    	; 0x110e <f_1player+0xf6>
		printf("--");
    1048:	0c e0       	ldi	r16, 0x0C	; 12
    104a:	11 e0       	ldi	r17, 0x01	; 1
    104c:	1f 93       	push	r17
    104e:	0f 93       	push	r16
    1050:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
void f_1player(){

	oled_reset();
	oled_print_screen_progmem(s_p1);
	joystick_sendPositionButtonCan(joystick_getPosition());//send motor to mid before start
	while(!(PINB & (1<<0))){
    1054:	0f 90       	pop	r0
    1056:	0f 90       	pop	r0
    1058:	b0 9b       	sbis	0x16, 0	; 22
    105a:	f8 cf       	rjmp	.-16     	; 0x104c <f_1player+0x34>
    105c:	58 c0       	rjmp	.+176    	; 0x110e <f_1player+0xf6>
		uint8_t ctrl = xmem_read(0x800); //read variable from SRAM joystick/slider.
		
		if(!(ctrl ==1 || ctrl ==0)){
			ctrl=0;
		}
		timer2_set_ctrl(ctrl);
    105e:	81 2f       	mov	r24, r17
    1060:	0e 94 68 10 	call	0x20d0	; 0x20d0 <timer2_set_ctrl>
		timer_init();
    1064:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <timer_init>
		timer2_init();
    1068:	0e 94 46 10 	call	0x208c	; 0x208c <timer2_init>
		timer2_stop();
    106c:	0e 94 59 10 	call	0x20b2	; 0x20b2 <timer2_stop>
		
				
	switch(ctrl){
    1070:	11 23       	and	r17, r17
    1072:	19 f0       	breq	.+6      	; 0x107a <f_1player+0x62>
    1074:	11 30       	cpi	r17, 0x01	; 1
    1076:	99 f0       	breq	.+38     	; 0x109e <f_1player+0x86>
    1078:	23 c0       	rjmp	.+70     	; 0x10c0 <f_1player+0xa8>
		case JOYSTICK:
			timer2_start();
    107a:	0e 94 61 10 	call	0x20c2	; 0x20c2 <timer2_start>
			while (!can_clearIfInterrupted()){
				printf("--");
    107e:	0c e0       	ldi	r16, 0x0C	; 12
    1080:	11 e0       	ldi	r17, 0x01	; 1
		
				
	switch(ctrl){
		case JOYSTICK:
			timer2_start();
			while (!can_clearIfInterrupted()){
    1082:	06 c0       	rjmp	.+12     	; 0x1090 <f_1player+0x78>
				printf("--");
    1084:	1f 93       	push	r17
    1086:	0f 93       	push	r16
    1088:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
		
				
	switch(ctrl){
		case JOYSTICK:
			timer2_start();
			while (!can_clearIfInterrupted()){
    1090:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    1094:	89 2b       	or	r24, r25
    1096:	b1 f3       	breq	.-20     	; 0x1084 <f_1player+0x6c>
				printf("--");
			}
			timer2_stop();
    1098:	0e 94 59 10 	call	0x20b2	; 0x20b2 <timer2_stop>

		break;
    109c:	11 c0       	rjmp	.+34     	; 0x10c0 <f_1player+0xa8>
		case SLIDER:
			timer2_start();
    109e:	0e 94 61 10 	call	0x20c2	; 0x20c2 <timer2_start>
			while (!can_clearIfInterrupted()){	
				printf("--");
    10a2:	0c e0       	ldi	r16, 0x0C	; 12
    10a4:	11 e0       	ldi	r17, 0x01	; 1
			timer2_stop();

		break;
		case SLIDER:
			timer2_start();
			while (!can_clearIfInterrupted()){	
    10a6:	06 c0       	rjmp	.+12     	; 0x10b4 <f_1player+0x9c>
				printf("--");
    10a8:	1f 93       	push	r17
    10aa:	0f 93       	push	r16
    10ac:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
    10b0:	0f 90       	pop	r0
    10b2:	0f 90       	pop	r0
			timer2_stop();

		break;
		case SLIDER:
			timer2_start();
			while (!can_clearIfInterrupted()){	
    10b4:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    10b8:	89 2b       	or	r24, r25
    10ba:	b1 f3       	breq	.-20     	; 0x10a8 <f_1player+0x90>
				printf("--");
			}
			timer2_stop();
    10bc:	0e 94 59 10 	call	0x20b2	; 0x20b2 <timer2_stop>
		break;
	}	
	
		oled_reset();
    10c0:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
		oled_print_screen_progmem(s_gameover);
    10c4:	80 e5       	ldi	r24, 0x50	; 80
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
		
		oled_print_time_used();
    10cc:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <oled_print_time_used>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10d0:	2f ef       	ldi	r18, 0xFF	; 255
    10d2:	83 ed       	ldi	r24, 0xD3	; 211
    10d4:	90 e3       	ldi	r25, 0x30	; 48
    10d6:	21 50       	subi	r18, 0x01	; 1
    10d8:	80 40       	sbci	r24, 0x00	; 0
    10da:	90 40       	sbci	r25, 0x00	; 0
    10dc:	e1 f7       	brne	.-8      	; 0x10d6 <f_1player+0xbe>
    10de:	00 c0       	rjmp	.+0      	; 0x10e0 <f_1player+0xc8>
    10e0:	00 00       	nop
		
		_delay_ms(1000);
		
		curr_menu=main_menu;
    10e2:	a0 91 c8 01 	lds	r26, 0x01C8	; 0x8001c8 <main_menu>
    10e6:	b0 91 c9 01 	lds	r27, 0x01C9	; 0x8001c9 <main_menu+0x1>
    10ea:	b0 93 b8 01 	sts	0x01B8, r27	; 0x8001b8 <curr_menu+0x1>
    10ee:	a0 93 b7 01 	sts	0x01B7, r26	; 0x8001b7 <curr_menu>
		pos_child=0;
    10f2:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <pos_child+0x1>
    10f6:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <pos_child>
		(*curr_menu->function)(main_menu->name);
    10fa:	12 96       	adiw	r26, 0x02	; 2
    10fc:	ed 91       	ld	r30, X+
    10fe:	fc 91       	ld	r31, X
    1100:	13 97       	sbiw	r26, 0x03	; 3
    1102:	1a 96       	adiw	r26, 0x0a	; 10
    1104:	8d 91       	ld	r24, X+
    1106:	9c 91       	ld	r25, X
    1108:	1b 97       	sbiw	r26, 0x0b	; 11
    110a:	09 95       	icall
}
    110c:	28 c0       	rjmp	.+80     	; 0x115e <f_1player+0x146>
	joystick_sendPositionButtonCan(joystick_getPosition());//send motor to mid before start
	while(!(PINB & (1<<0))){
		printf("--");
	}
		for(unsigned char i=0; i<5; i++){
			can_clearIfInterrupted();
    110e:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    1112:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    1116:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    111a:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
    111e:	0e 94 df 06 	call	0xdbe	; 0xdbe <can_clearIfInterrupted>
		}
		//several times because of race condition
		
		can_message msg;
		msg.id=1;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	9a 83       	std	Y+2, r25	; 0x02
    1128:	89 83       	std	Y+1, r24	; 0x01
		msg.length=3;
    112a:	83 e0       	ldi	r24, 0x03	; 3
    112c:	8b 83       	std	Y+3, r24	; 0x03
		msg.data[2]=(char)1;
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	8e 83       	std	Y+6, r24	; 0x06
		can_send_message(&msg); //solenoide hit
    1132:	ce 01       	movw	r24, r28
    1134:	01 96       	adiw	r24, 0x01	; 1
    1136:	0e 94 97 06 	call	0xd2e	; 0xd2e <can_send_message>
		
		uint8_t ctrl = xmem_read(0x800); //read variable from SRAM joystick/slider.
    113a:	80 e0       	ldi	r24, 0x00	; 0
    113c:	98 e0       	ldi	r25, 0x08	; 8
    113e:	0e 94 bb 10 	call	0x2176	; 0x2176 <xmem_read>
    1142:	18 2f       	mov	r17, r24
		
		if(!(ctrl ==1 || ctrl ==0)){
    1144:	82 30       	cpi	r24, 0x02	; 2
    1146:	08 f4       	brcc	.+2      	; 0x114a <f_1player+0x132>
    1148:	8a cf       	rjmp	.-236    	; 0x105e <f_1player+0x46>
			ctrl=0;
		}
		timer2_set_ctrl(ctrl);
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	0e 94 68 10 	call	0x20d0	; 0x20d0 <timer2_set_ctrl>
		timer_init();
    1150:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <timer_init>
		timer2_init();
    1154:	0e 94 46 10 	call	0x208c	; 0x208c <timer2_init>
		timer2_stop();
    1158:	0e 94 59 10 	call	0x20b2	; 0x20b2 <timer2_stop>
    115c:	8e cf       	rjmp	.-228    	; 0x107a <f_1player+0x62>
		_delay_ms(1000);
		
		curr_menu=main_menu;
		pos_child=0;
		(*curr_menu->function)(main_menu->name);
}
    115e:	2b 96       	adiw	r28, 0x0b	; 11
    1160:	0f b6       	in	r0, 0x3f	; 63
    1162:	f8 94       	cli
    1164:	de bf       	out	0x3e, r29	; 62
    1166:	0f be       	out	0x3f, r0	; 63
    1168:	cd bf       	out	0x3d, r28	; 61
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	1f 91       	pop	r17
    1170:	0f 91       	pop	r16
    1172:	08 95       	ret

00001174 <f_joystick>:
	oled_print_page_progmem(s_controllerP,header_pages);

}

void f_joystick(){
	oled_reset();
    1174:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_joystick);
    1178:	80 e3       	ldi	r24, 0x30	; 48
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
	cli();
    1180:	f8 94       	cli
	controller ctrl = JOYSTICK;
	xmem_write(ctrl,0x800); //Lagrer i SRAM
    1182:	60 e0       	ldi	r22, 0x00	; 0
    1184:	78 e0       	ldi	r23, 0x08	; 8
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	90 e0       	ldi	r25, 0x00	; 0
    118a:	0e 94 b7 10 	call	0x216e	; 0x216e <xmem_write>
	sei();
    118e:	78 94       	sei
    1190:	2f ef       	ldi	r18, 0xFF	; 255
    1192:	83 ed       	ldi	r24, 0xD3	; 211
    1194:	90 e3       	ldi	r25, 0x30	; 48
    1196:	21 50       	subi	r18, 0x01	; 1
    1198:	80 40       	sbci	r24, 0x00	; 0
    119a:	90 40       	sbci	r25, 0x00	; 0
    119c:	e1 f7       	brne	.-8      	; 0x1196 <f_joystick+0x22>
    119e:	00 c0       	rjmp	.+0      	; 0x11a0 <f_joystick+0x2c>
    11a0:	00 00       	nop
	_delay_ms(1000);
	
	curr_menu=main_menu;
    11a2:	a0 91 c8 01 	lds	r26, 0x01C8	; 0x8001c8 <main_menu>
    11a6:	b0 91 c9 01 	lds	r27, 0x01C9	; 0x8001c9 <main_menu+0x1>
    11aa:	b0 93 b8 01 	sts	0x01B8, r27	; 0x8001b8 <curr_menu+0x1>
    11ae:	a0 93 b7 01 	sts	0x01B7, r26	; 0x8001b7 <curr_menu>
	pos_child=0;
    11b2:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <pos_child+0x1>
    11b6:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    11ba:	12 96       	adiw	r26, 0x02	; 2
    11bc:	ed 91       	ld	r30, X+
    11be:	fc 91       	ld	r31, X
    11c0:	13 97       	sbiw	r26, 0x03	; 3
    11c2:	1a 96       	adiw	r26, 0x0a	; 10
    11c4:	8d 91       	ld	r24, X+
    11c6:	9c 91       	ld	r25, X
    11c8:	1b 97       	sbiw	r26, 0x0b	; 11
    11ca:	09 95       	icall
    11cc:	08 95       	ret

000011ce <f_slider>:
		
	
}
void f_slider(){
	oled_reset();
    11ce:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_slider);
    11d2:	88 e3       	ldi	r24, 0x38	; 56
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
	cli();
    11da:	f8 94       	cli
	controller ctrl = SLIDER;
	xmem_write(ctrl,0x800); //Lagrer i SRAM
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	78 e0       	ldi	r23, 0x08	; 8
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	0e 94 b7 10 	call	0x216e	; 0x216e <xmem_write>
	sei();
    11e8:	78 94       	sei
    11ea:	2f ef       	ldi	r18, 0xFF	; 255
    11ec:	83 ed       	ldi	r24, 0xD3	; 211
    11ee:	90 e3       	ldi	r25, 0x30	; 48
    11f0:	21 50       	subi	r18, 0x01	; 1
    11f2:	80 40       	sbci	r24, 0x00	; 0
    11f4:	90 40       	sbci	r25, 0x00	; 0
    11f6:	e1 f7       	brne	.-8      	; 0x11f0 <f_slider+0x22>
    11f8:	00 c0       	rjmp	.+0      	; 0x11fa <f_slider+0x2c>
    11fa:	00 00       	nop
	_delay_ms(1000);
	
	curr_menu=main_menu;
    11fc:	a0 91 c8 01 	lds	r26, 0x01C8	; 0x8001c8 <main_menu>
    1200:	b0 91 c9 01 	lds	r27, 0x01C9	; 0x8001c9 <main_menu+0x1>
    1204:	b0 93 b8 01 	sts	0x01B8, r27	; 0x8001b8 <curr_menu+0x1>
    1208:	a0 93 b7 01 	sts	0x01B7, r26	; 0x8001b7 <curr_menu>
	pos_child=0;
    120c:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <pos_child+0x1>
    1210:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    1214:	12 96       	adiw	r26, 0x02	; 2
    1216:	ed 91       	ld	r30, X+
    1218:	fc 91       	ld	r31, X
    121a:	13 97       	sbiw	r26, 0x03	; 3
    121c:	1a 96       	adiw	r26, 0x0a	; 10
    121e:	8d 91       	ld	r24, X+
    1220:	9c 91       	ld	r25, X
    1222:	1b 97       	sbiw	r26, 0x0b	; 11
    1224:	09 95       	icall
    1226:	08 95       	ret

00001228 <f_calibrate>:
	
}

void f_calibrate(){
	oled_reset();
    1228:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_calibrate);
    122c:	80 e4       	ldi	r24, 0x40	; 64
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
    1234:	2f ef       	ldi	r18, 0xFF	; 255
    1236:	8d e2       	ldi	r24, 0x2D	; 45
    1238:	92 e2       	ldi	r25, 0x22	; 34
    123a:	21 50       	subi	r18, 0x01	; 1
    123c:	80 40       	sbci	r24, 0x00	; 0
    123e:	90 40       	sbci	r25, 0x00	; 0
    1240:	e1 f7       	brne	.-8      	; 0x123a <f_calibrate+0x12>
    1242:	00 c0       	rjmp	.+0      	; 0x1244 <f_calibrate+0x1c>
    1244:	00 00       	nop
	
	_delay_ms(700);
	joystick_calibrate();
    1246:	0e 94 f0 06 	call	0xde0	; 0xde0 <joystick_calibrate>
    124a:	2f ef       	ldi	r18, 0xFF	; 255
    124c:	85 ea       	ldi	r24, 0xA5	; 165
    124e:	9e e0       	ldi	r25, 0x0E	; 14
    1250:	21 50       	subi	r18, 0x01	; 1
    1252:	80 40       	sbci	r24, 0x00	; 0
    1254:	90 40       	sbci	r25, 0x00	; 0
    1256:	e1 f7       	brne	.-8      	; 0x1250 <f_calibrate+0x28>
    1258:	00 c0       	rjmp	.+0      	; 0x125a <f_calibrate+0x32>
    125a:	00 00       	nop
	
	_delay_ms(300);
		
	curr_menu=main_menu;
    125c:	a0 91 c8 01 	lds	r26, 0x01C8	; 0x8001c8 <main_menu>
    1260:	b0 91 c9 01 	lds	r27, 0x01C9	; 0x8001c9 <main_menu+0x1>
    1264:	b0 93 b8 01 	sts	0x01B8, r27	; 0x8001b8 <curr_menu+0x1>
    1268:	a0 93 b7 01 	sts	0x01B7, r26	; 0x8001b7 <curr_menu>
	pos_child=0;
    126c:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <pos_child+0x1>
    1270:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    1274:	12 96       	adiw	r26, 0x02	; 2
    1276:	ed 91       	ld	r30, X+
    1278:	fc 91       	ld	r31, X
    127a:	13 97       	sbiw	r26, 0x03	; 3
    127c:	1a 96       	adiw	r26, 0x0a	; 10
    127e:	8d 91       	ld	r24, X+
    1280:	9c 91       	ld	r25, X
    1282:	1b 97       	sbiw	r26, 0x0b	; 11
    1284:	09 95       	icall
    1286:	08 95       	ret

00001288 <f_animation>:
	
	
}

void f_animation(){
	oled_reset();
    1288:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_animation);
    128c:	88 e4       	ldi	r24, 0x48	; 72
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
	oled_animation(4);
    1294:	84 e0       	ldi	r24, 0x04	; 4
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <oled_animation>
	
	curr_menu=main_menu;
    129c:	a0 91 c8 01 	lds	r26, 0x01C8	; 0x8001c8 <main_menu>
    12a0:	b0 91 c9 01 	lds	r27, 0x01C9	; 0x8001c9 <main_menu+0x1>
    12a4:	b0 93 b8 01 	sts	0x01B8, r27	; 0x8001b8 <curr_menu+0x1>
    12a8:	a0 93 b7 01 	sts	0x01B7, r26	; 0x8001b7 <curr_menu>
	pos_child=0;
    12ac:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <pos_child+0x1>
    12b0:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <pos_child>
	(*curr_menu->function)(main_menu->name);
    12b4:	12 96       	adiw	r26, 0x02	; 2
    12b6:	ed 91       	ld	r30, X+
    12b8:	fc 91       	ld	r31, X
    12ba:	13 97       	sbiw	r26, 0x03	; 3
    12bc:	1a 96       	adiw	r26, 0x0a	; 10
    12be:	8d 91       	ld	r24, X+
    12c0:	9c 91       	ld	r25, X
    12c2:	1b 97       	sbiw	r26, 0x0b	; 11
    12c4:	09 95       	icall
    12c6:	08 95       	ret

000012c8 <Menu_new_submenu>:
	
	curr_menu = main_menu;
	
}

menu_item* Menu_new_submenu(menu_item* self, char* name, void (*function)(char*), int oledOffset){
    12c8:	af 92       	push	r10
    12ca:	bf 92       	push	r11
    12cc:	cf 92       	push	r12
    12ce:	df 92       	push	r13
    12d0:	ef 92       	push	r14
    12d2:	ff 92       	push	r15
    12d4:	0f 93       	push	r16
    12d6:	1f 93       	push	r17
    12d8:	cf 93       	push	r28
    12da:	df 93       	push	r29
    12dc:	8c 01       	movw	r16, r24
    12de:	7b 01       	movw	r14, r22
    12e0:	5a 01       	movw	r10, r20
    12e2:	69 01       	movw	r12, r18
	menu_item* new_submenu = malloc(sizeof(menu_item));
    12e4:	8e e0       	ldi	r24, 0x0E	; 14
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	0e 94 a9 11 	call	0x2352	; 0x2352 <malloc>
    12ec:	ec 01       	movw	r28, r24

	new_submenu->parent=self;
    12ee:	19 83       	std	Y+1, r17	; 0x01
    12f0:	08 83       	st	Y, r16
	new_submenu->children=NULL;
    12f2:	1d 82       	std	Y+5, r1	; 0x05
    12f4:	1c 82       	std	Y+4, r1	; 0x04
	new_submenu->numOfChildren=0;
    12f6:	1f 82       	std	Y+7, r1	; 0x07
    12f8:	1e 82       	std	Y+6, r1	; 0x06
	new_submenu->name=name;
    12fa:	fb 86       	std	Y+11, r15	; 0x0b
    12fc:	ea 86       	std	Y+10, r14	; 0x0a
	new_submenu->nameArrow=oled_arrow(name);
    12fe:	c7 01       	movw	r24, r14
    1300:	0e 94 94 0c 	call	0x1928	; 0x1928 <oled_arrow>
    1304:	9d 87       	std	Y+13, r25	; 0x0d
    1306:	8c 87       	std	Y+12, r24	; 0x0c
	new_submenu->function = function;
    1308:	bb 82       	std	Y+3, r11	; 0x03
    130a:	aa 82       	std	Y+2, r10	; 0x02
	new_submenu->oledOffset=oledOffset;
    130c:	d9 86       	std	Y+9, r13	; 0x09
    130e:	c8 86       	std	Y+8, r12	; 0x08
		
	self->children=realloc(self->children, (self->numOfChildren+1)*sizeof(menu_item*));
    1310:	f8 01       	movw	r30, r16
    1312:	66 81       	ldd	r22, Z+6	; 0x06
    1314:	77 81       	ldd	r23, Z+7	; 0x07
    1316:	6f 5f       	subi	r22, 0xFF	; 255
    1318:	7f 4f       	sbci	r23, 0xFF	; 255
    131a:	66 0f       	add	r22, r22
    131c:	77 1f       	adc	r23, r23
    131e:	84 81       	ldd	r24, Z+4	; 0x04
    1320:	95 81       	ldd	r25, Z+5	; 0x05
    1322:	0e 94 ca 12 	call	0x2594	; 0x2594 <realloc>
    1326:	f8 01       	movw	r30, r16
    1328:	95 83       	std	Z+5, r25	; 0x05
    132a:	84 83       	std	Z+4, r24	; 0x04
	self->children[self->numOfChildren]=new_submenu;
    132c:	26 81       	ldd	r18, Z+6	; 0x06
    132e:	37 81       	ldd	r19, Z+7	; 0x07
    1330:	a9 01       	movw	r20, r18
    1332:	44 0f       	add	r20, r20
    1334:	55 1f       	adc	r21, r21
    1336:	fc 01       	movw	r30, r24
    1338:	e4 0f       	add	r30, r20
    133a:	f5 1f       	adc	r31, r21
    133c:	d1 83       	std	Z+1, r29	; 0x01
    133e:	c0 83       	st	Z, r28
	self->numOfChildren++;
    1340:	2f 5f       	subi	r18, 0xFF	; 255
    1342:	3f 4f       	sbci	r19, 0xFF	; 255
    1344:	f8 01       	movw	r30, r16
    1346:	37 83       	std	Z+7, r19	; 0x07
    1348:	26 83       	std	Z+6, r18	; 0x06
	
	return new_submenu;
}
    134a:	ce 01       	movw	r24, r28
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	ff 90       	pop	r15
    1356:	ef 90       	pop	r14
    1358:	df 90       	pop	r13
    135a:	cf 90       	pop	r12
    135c:	bf 90       	pop	r11
    135e:	af 90       	pop	r10
    1360:	08 95       	ret

00001362 <menu_init>:
menu_item* main_menu;
static menu_item* curr_menu;
static int header_pages=2;


void menu_init(){
    1362:	0f 93       	push	r16
    1364:	1f 93       	push	r17
    1366:	cf 93       	push	r28
    1368:	df 93       	push	r29
	
	menu_item* main_menu = malloc(sizeof(menu_item));
    136a:	8e e0       	ldi	r24, 0x0E	; 14
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	0e 94 a9 11 	call	0x2352	; 0x2352 <malloc>
    1372:	ec 01       	movw	r28, r24
	main_menu->name = "Main Menu";
    1374:	8f e0       	ldi	r24, 0x0F	; 15
    1376:	91 e0       	ldi	r25, 0x01	; 1
    1378:	9b 87       	std	Y+11, r25	; 0x0b
    137a:	8a 87       	std	Y+10, r24	; 0x0a
	main_menu->nameArrow= NULL;
    137c:	1d 86       	std	Y+13, r1	; 0x0d
    137e:	1c 86       	std	Y+12, r1	; 0x0c
	main_menu->numOfChildren = 0;
    1380:	1f 82       	std	Y+7, r1	; 0x07
    1382:	1e 82       	std	Y+6, r1	; 0x06
	main_menu->parent = NULL;
    1384:	19 82       	std	Y+1, r1	; 0x01
    1386:	18 82       	st	Y, r1
	main_menu->function = NULL;
    1388:	1b 82       	std	Y+3, r1	; 0x03
    138a:	1a 82       	std	Y+2, r1	; 0x02
	main_menu->oledOffset=s_main;
    138c:	19 86       	std	Y+9, r1	; 0x09
    138e:	18 86       	std	Y+8, r1	; 0x08
	
	menu_item* player_menu=Menu_new_submenu(main_menu, "1PLAYER", &f_1player, s_p1);
    1390:	20 e1       	ldi	r18, 0x10	; 16
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	4c e0       	ldi	r20, 0x0C	; 12
    1396:	58 e0       	ldi	r21, 0x08	; 8
    1398:	69 e1       	ldi	r22, 0x19	; 25
    139a:	71 e0       	ldi	r23, 0x01	; 1
    139c:	ce 01       	movw	r24, r28
    139e:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "2PLAYER", &f_2player, s_p2);
    13a2:	28 e1       	ldi	r18, 0x18	; 24
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	48 ef       	ldi	r20, 0xF8	; 248
    13a8:	57 e0       	ldi	r21, 0x07	; 7
    13aa:	61 e2       	ldi	r22, 0x21	; 33
    13ac:	71 e0       	ldi	r23, 0x01	; 1
    13ae:	ce 01       	movw	r24, r28
    13b0:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
	menu_item* controller_menu=Menu_new_submenu(main_menu, "CONTROLLER", &f_controller,s_controller);
    13b4:	20 e2       	ldi	r18, 0x20	; 32
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	4f ef       	ldi	r20, 0xFF	; 255
    13ba:	57 e0       	ldi	r21, 0x07	; 7
    13bc:	69 e2       	ldi	r22, 0x29	; 41
    13be:	71 e0       	ldi	r23, 0x01	; 1
    13c0:	ce 01       	movw	r24, r28
    13c2:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
    13c6:	8c 01       	movw	r16, r24
	Menu_new_submenu(controller_menu, "JOYSTICK", &f_joystick,s_joystick);
    13c8:	20 e3       	ldi	r18, 0x30	; 48
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	4a eb       	ldi	r20, 0xBA	; 186
    13ce:	58 e0       	ldi	r21, 0x08	; 8
    13d0:	64 e3       	ldi	r22, 0x34	; 52
    13d2:	71 e0       	ldi	r23, 0x01	; 1
    13d4:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
	Menu_new_submenu(controller_menu, "SLIDER", &f_slider,s_slider);
    13d8:	28 e3       	ldi	r18, 0x38	; 56
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	47 ee       	ldi	r20, 0xE7	; 231
    13de:	58 e0       	ldi	r21, 0x08	; 8
    13e0:	6d e3       	ldi	r22, 0x3D	; 61
    13e2:	71 e0       	ldi	r23, 0x01	; 1
    13e4:	c8 01       	movw	r24, r16
    13e6:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "CALIBRATE", &f_calibrate,s_calibrate);
    13ea:	20 e4       	ldi	r18, 0x40	; 64
    13ec:	30 e0       	ldi	r19, 0x00	; 0
    13ee:	44 e1       	ldi	r20, 0x14	; 20
    13f0:	59 e0       	ldi	r21, 0x09	; 9
    13f2:	64 e4       	ldi	r22, 0x44	; 68
    13f4:	71 e0       	ldi	r23, 0x01	; 1
    13f6:	ce 01       	movw	r24, r28
    13f8:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
	Menu_new_submenu(main_menu, "ANIMATION", &f_animation,s_animation);
    13fc:	28 e4       	ldi	r18, 0x48	; 72
    13fe:	30 e0       	ldi	r19, 0x00	; 0
    1400:	44 e4       	ldi	r20, 0x44	; 68
    1402:	59 e0       	ldi	r21, 0x09	; 9
    1404:	6e e4       	ldi	r22, 0x4E	; 78
    1406:	71 e0       	ldi	r23, 0x01	; 1
    1408:	ce 01       	movw	r24, r28
    140a:	0e 94 64 09 	call	0x12c8	; 0x12c8 <Menu_new_submenu>
	

	oled_reset();
    140e:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <oled_reset>
	oled_print_screen_progmem(s_main);
    1412:	80 e0       	ldi	r24, 0x00	; 0
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <oled_print_screen_progmem>
	oled_print_page_progmem(s_mainP, header_pages);
    141a:	62 e0       	ldi	r22, 0x02	; 2
    141c:	70 e0       	ldi	r23, 0x00	; 0
    141e:	88 e0       	ldi	r24, 0x08	; 8
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <oled_print_page_progmem>
	
	curr_menu = main_menu;
    1426:	d0 93 b8 01 	sts	0x01B8, r29	; 0x8001b8 <curr_menu+0x1>
    142a:	c0 93 b7 01 	sts	0x01B7, r28	; 0x8001b7 <curr_menu>
	
}
    142e:	df 91       	pop	r29
    1430:	cf 91       	pop	r28
    1432:	1f 91       	pop	r17
    1434:	0f 91       	pop	r16
    1436:	08 95       	ret

00001438 <navigate>:
	(*curr_menu->function)(main_menu->name);
	
	
}

void navigate(){
    1438:	cf 93       	push	r28
    143a:	df 93       	push	r29
	
if(joystick_getDirection()!=NEUTRAL){
    143c:	0e 94 b6 07 	call	0xf6c	; 0xf6c <joystick_getDirection>
    1440:	84 30       	cpi	r24, 0x04	; 4
    1442:	09 f4       	brne	.+2      	; 0x1446 <navigate+0xe>
    1444:	97 c0       	rjmp	.+302    	; 0x1574 <navigate+0x13c>
    1446:	2f ef       	ldi	r18, 0xFF	; 255
    1448:	87 ee       	ldi	r24, 0xE7	; 231
    144a:	93 e0       	ldi	r25, 0x03	; 3
    144c:	21 50       	subi	r18, 0x01	; 1
    144e:	80 40       	sbci	r24, 0x00	; 0
    1450:	90 40       	sbci	r25, 0x00	; 0
    1452:	e1 f7       	brne	.-8      	; 0x144c <navigate+0x14>
    1454:	00 c0       	rjmp	.+0      	; 0x1456 <navigate+0x1e>
    1456:	00 00       	nop
			_delay_ms(80);
		
	switch (joystick_getDirection()){
    1458:	0e 94 b6 07 	call	0xf6c	; 0xf6c <joystick_getDirection>
    145c:	82 30       	cpi	r24, 0x02	; 2
    145e:	09 f4       	brne	.+2      	; 0x1462 <navigate+0x2a>
    1460:	43 c0       	rjmp	.+134    	; 0x14e8 <navigate+0xb0>
    1462:	83 30       	cpi	r24, 0x03	; 3
    1464:	09 f0       	breq	.+2      	; 0x1468 <navigate+0x30>
    1466:	86 c0       	rjmp	.+268    	; 0x1574 <navigate+0x13c>
		
		case UP:
		if(pos_child>0){
    1468:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <pos_child>
    146c:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <pos_child+0x1>
    1470:	18 16       	cp	r1, r24
    1472:	19 06       	cpc	r1, r25
    1474:	0c f0       	brlt	.+2      	; 0x1478 <navigate+0x40>
    1476:	7e c0       	rjmp	.+252    	; 0x1574 <navigate+0x13c>
			oled_goto_page(pos_child+header_pages);
    1478:	8e 5f       	subi	r24, 0xFE	; 254
    147a:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
			oled_clear_page(pos_child+header_pages);
    147e:	c9 eb       	ldi	r28, 0xB9	; 185
    1480:	d1 e0       	ldi	r29, 0x01	; 1
    1482:	88 81       	ld	r24, Y
    1484:	8e 5f       	subi	r24, 0xFE	; 254
    1486:	0e 94 3e 0b 	call	0x167c	; 0x167c <oled_clear_page>
			oled_print_page_progmem(curr_menu->oledOffset,header_pages+pos_child);
    148a:	60 91 b9 01 	lds	r22, 0x01B9	; 0x8001b9 <pos_child>
    148e:	70 91 ba 01 	lds	r23, 0x01BA	; 0x8001ba <pos_child+0x1>
    1492:	6e 5f       	subi	r22, 0xFE	; 254
    1494:	7f 4f       	sbci	r23, 0xFF	; 255
    1496:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <curr_menu>
    149a:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <curr_menu+0x1>
    149e:	80 85       	ldd	r24, Z+8	; 0x08
    14a0:	91 85       	ldd	r25, Z+9	; 0x09
    14a2:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <oled_print_page_progmem>
			
			oled_goto_page(pos_child+header_pages-1);
    14a6:	88 81       	ld	r24, Y
    14a8:	8f 5f       	subi	r24, 0xFF	; 255
    14aa:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
			oled_clear_page(pos_child+header_pages-1);
    14ae:	88 81       	ld	r24, Y
    14b0:	8f 5f       	subi	r24, 0xFF	; 255
    14b2:	0e 94 3e 0b 	call	0x167c	; 0x167c <oled_clear_page>
			oled_print_page_progmem((curr_menu->oledOffset)+s_screen,header_pages+pos_child-1);
    14b6:	60 91 b9 01 	lds	r22, 0x01B9	; 0x8001b9 <pos_child>
    14ba:	70 91 ba 01 	lds	r23, 0x01BA	; 0x8001ba <pos_child+0x1>
    14be:	6f 5f       	subi	r22, 0xFF	; 255
    14c0:	7f 4f       	sbci	r23, 0xFF	; 255
    14c2:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <curr_menu>
    14c6:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <curr_menu+0x1>
    14ca:	80 85       	ldd	r24, Z+8	; 0x08
    14cc:	91 85       	ldd	r25, Z+9	; 0x09
    14ce:	08 96       	adiw	r24, 0x08	; 8
    14d0:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <oled_print_page_progmem>
				
			pos_child -= 1;
    14d4:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <pos_child>
    14d8:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <pos_child+0x1>
    14dc:	01 97       	sbiw	r24, 0x01	; 1
    14de:	90 93 ba 01 	sts	0x01BA, r25	; 0x8001ba <pos_child+0x1>
    14e2:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <pos_child>
    14e6:	46 c0       	rjmp	.+140    	; 0x1574 <navigate+0x13c>
		}
		break;
		case DOWN:
		if(pos_child < curr_menu->numOfChildren-1){
    14e8:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <pos_child>
    14ec:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <pos_child+0x1>
    14f0:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <curr_menu>
    14f4:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <curr_menu+0x1>
    14f8:	26 81       	ldd	r18, Z+6	; 0x06
    14fa:	37 81       	ldd	r19, Z+7	; 0x07
    14fc:	21 50       	subi	r18, 0x01	; 1
    14fe:	31 09       	sbc	r19, r1
    1500:	82 17       	cp	r24, r18
    1502:	93 07       	cpc	r25, r19
    1504:	bc f5       	brge	.+110    	; 0x1574 <navigate+0x13c>
			oled_goto_page(pos_child+header_pages);
    1506:	8e 5f       	subi	r24, 0xFE	; 254
    1508:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
			oled_clear_page(pos_child+header_pages);
    150c:	c9 eb       	ldi	r28, 0xB9	; 185
    150e:	d1 e0       	ldi	r29, 0x01	; 1
    1510:	88 81       	ld	r24, Y
    1512:	8e 5f       	subi	r24, 0xFE	; 254
    1514:	0e 94 3e 0b 	call	0x167c	; 0x167c <oled_clear_page>
			oled_print_page_progmem(curr_menu->oledOffset,header_pages+pos_child);
    1518:	60 91 b9 01 	lds	r22, 0x01B9	; 0x8001b9 <pos_child>
    151c:	70 91 ba 01 	lds	r23, 0x01BA	; 0x8001ba <pos_child+0x1>
    1520:	6e 5f       	subi	r22, 0xFE	; 254
    1522:	7f 4f       	sbci	r23, 0xFF	; 255
    1524:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <curr_menu>
    1528:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <curr_menu+0x1>
    152c:	80 85       	ldd	r24, Z+8	; 0x08
    152e:	91 85       	ldd	r25, Z+9	; 0x09
    1530:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <oled_print_page_progmem>
			
			oled_goto_page(pos_child+header_pages+1);
    1534:	88 81       	ld	r24, Y
    1536:	8d 5f       	subi	r24, 0xFD	; 253
    1538:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
			oled_clear_page(pos_child+header_pages+1);
    153c:	88 81       	ld	r24, Y
    153e:	8d 5f       	subi	r24, 0xFD	; 253
    1540:	0e 94 3e 0b 	call	0x167c	; 0x167c <oled_clear_page>
			oled_print_page_progmem((curr_menu->oledOffset)+s_screen,header_pages+pos_child+1);
    1544:	60 91 b9 01 	lds	r22, 0x01B9	; 0x8001b9 <pos_child>
    1548:	70 91 ba 01 	lds	r23, 0x01BA	; 0x8001ba <pos_child+0x1>
    154c:	6d 5f       	subi	r22, 0xFD	; 253
    154e:	7f 4f       	sbci	r23, 0xFF	; 255
    1550:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <curr_menu>
    1554:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <curr_menu+0x1>
    1558:	80 85       	ldd	r24, Z+8	; 0x08
    155a:	91 85       	ldd	r25, Z+9	; 0x09
    155c:	08 96       	adiw	r24, 0x08	; 8
    155e:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <oled_print_page_progmem>
			
			pos_child += 1;
    1562:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <pos_child>
    1566:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <pos_child+0x1>
    156a:	01 96       	adiw	r24, 0x01	; 1
    156c:	90 93 ba 01 	sts	0x01BA, r25	; 0x8001ba <pos_child+0x1>
    1570:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <pos_child>
		}
		break;
	}
}
	if (!(PINB & (1<<PB2))){
    1574:	b2 99       	sbic	0x16, 2	; 22
    1576:	2c c0       	rjmp	.+88     	; 0x15d0 <navigate+0x198>
		if(curr_menu->children!= NULL){
    1578:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <curr_menu>
    157c:	f0 91 b8 01 	lds	r31, 0x01B8	; 0x8001b8 <curr_menu+0x1>
    1580:	84 81       	ldd	r24, Z+4	; 0x04
    1582:	95 81       	ldd	r25, Z+5	; 0x05
    1584:	00 97       	sbiw	r24, 0x00	; 0
    1586:	d9 f0       	breq	.+54     	; 0x15be <navigate+0x186>
			curr_menu=curr_menu->children[pos_child];
    1588:	e0 91 b9 01 	lds	r30, 0x01B9	; 0x8001b9 <pos_child>
    158c:	f0 91 ba 01 	lds	r31, 0x01BA	; 0x8001ba <pos_child+0x1>
    1590:	ee 0f       	add	r30, r30
    1592:	ff 1f       	adc	r31, r31
    1594:	e8 0f       	add	r30, r24
    1596:	f9 1f       	adc	r31, r25
    1598:	a0 81       	ld	r26, Z
    159a:	b1 81       	ldd	r27, Z+1	; 0x01
    159c:	b0 93 b8 01 	sts	0x01B8, r27	; 0x8001b8 <curr_menu+0x1>
    15a0:	a0 93 b7 01 	sts	0x01B7, r26	; 0x8001b7 <curr_menu>
			pos_child=0;
    15a4:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <pos_child+0x1>
    15a8:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <pos_child>
			(*curr_menu->function)(curr_menu->name);
    15ac:	12 96       	adiw	r26, 0x02	; 2
    15ae:	ed 91       	ld	r30, X+
    15b0:	fc 91       	ld	r31, X
    15b2:	13 97       	sbiw	r26, 0x03	; 3
    15b4:	1a 96       	adiw	r26, 0x0a	; 10
    15b6:	8d 91       	ld	r24, X+
    15b8:	9c 91       	ld	r25, X
    15ba:	1b 97       	sbiw	r26, 0x0b	; 11
    15bc:	09 95       	icall
    15be:	2f ef       	ldi	r18, 0xFF	; 255
    15c0:	83 ec       	ldi	r24, 0xC3	; 195
    15c2:	99 e0       	ldi	r25, 0x09	; 9
    15c4:	21 50       	subi	r18, 0x01	; 1
    15c6:	80 40       	sbci	r24, 0x00	; 0
    15c8:	90 40       	sbci	r25, 0x00	; 0
    15ca:	e1 f7       	brne	.-8      	; 0x15c4 <navigate+0x18c>
    15cc:	00 c0       	rjmp	.+0      	; 0x15ce <navigate+0x196>
    15ce:	00 00       	nop
		}
		_delay_ms(200);
	}
		
}
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	08 95       	ret

000015d6 <oled_mode>:
	}
	oled_goto_pos(4,0);
	for (int j=0; j<1024; j++){
		ext_oled_data[j] = 0xff;
	}
	oled_mode(PAGE_MODE);
    15d6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    15da:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    15de:	90 e2       	ldi	r25, 0x20	; 32
    15e0:	90 83       	st	Z, r25
    15e2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    15e6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    15ea:	80 83       	st	Z, r24
    15ec:	08 95       	ret

000015ee <oled_goto_page>:
    15ee:	88 30       	cpi	r24, 0x08	; 8
    15f0:	48 f0       	brcs	.+18     	; 0x1604 <oled_goto_page+0x16>
    15f2:	88 e5       	ldi	r24, 0x58	; 88
    15f4:	91 e0       	ldi	r25, 0x01	; 1
    15f6:	9f 93       	push	r25
    15f8:	8f 93       	push	r24
    15fa:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
    15fe:	0f 90       	pop	r0
    1600:	0f 90       	pop	r0
    1602:	08 95       	ret
    1604:	90 eb       	ldi	r25, 0xB0	; 176
    1606:	98 0f       	add	r25, r24
    1608:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    160c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1610:	90 83       	st	Z, r25
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <oled_position+0x1>
    1618:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <oled_position>
    161c:	08 95       	ret

0000161e <oled_goto_col>:
    161e:	88 23       	and	r24, r24
    1620:	4c f4       	brge	.+18     	; 0x1634 <oled_goto_col+0x16>
    1622:	88 e5       	ldi	r24, 0x58	; 88
    1624:	91 e0       	ldi	r25, 0x01	; 1
    1626:	9f 93       	push	r25
    1628:	8f 93       	push	r24
    162a:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
    162e:	0f 90       	pop	r0
    1630:	0f 90       	pop	r0
    1632:	08 95       	ret
    1634:	28 2f       	mov	r18, r24
    1636:	2f 70       	andi	r18, 0x0F	; 15
    1638:	98 2f       	mov	r25, r24
    163a:	92 95       	swap	r25
    163c:	9f 70       	andi	r25, 0x0F	; 15
    163e:	90 5f       	subi	r25, 0xF0	; 240
    1640:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1644:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1648:	90 83       	st	Z, r25
    164a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    164e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1652:	20 83       	st	Z, r18
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	90 93 c7 01 	sts	0x01C7, r25	; 0x8001c7 <oled_position+0x3>
    165a:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <oled_position+0x2>
    165e:	08 95       	ret

00001660 <oled_goto_pos>:
    1660:	cf 93       	push	r28
    1662:	c6 2f       	mov	r28, r22
    1664:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
    1668:	8c 2f       	mov	r24, r28
    166a:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
    166e:	cf 91       	pop	r28
    1670:	08 95       	ret

00001672 <oled_home>:
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	0e 94 30 0b 	call	0x1660	; 0x1660 <oled_goto_pos>
    167a:	08 95       	ret

0000167c <oled_clear_page>:
    167c:	60 e0       	ldi	r22, 0x00	; 0
    167e:	0e 94 30 0b 	call	0x1660	; 0x1660 <oled_goto_pos>
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    168a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    168e:	e8 0f       	add	r30, r24
    1690:	f9 1f       	adc	r31, r25
    1692:	10 82       	st	Z, r1
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	80 38       	cpi	r24, 0x80	; 128
    1698:	91 05       	cpc	r25, r1
    169a:	a9 f7       	brne	.-22     	; 0x1686 <oled_clear_page+0xa>
    169c:	08 95       	ret

0000169e <oled_clear_screen>:
    169e:	60 e0       	ldi	r22, 0x00	; 0
    16a0:	80 e0       	ldi	r24, 0x00	; 0
    16a2:	0e 94 30 0b 	call	0x1660	; 0x1660 <oled_goto_pos>
    16a6:	80 e0       	ldi	r24, 0x00	; 0
    16a8:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <oled_mode>
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    16b4:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    16b8:	e8 0f       	add	r30, r24
    16ba:	f9 1f       	adc	r31, r25
    16bc:	10 82       	st	Z, r1
    16be:	01 96       	adiw	r24, 0x01	; 1
    16c0:	81 15       	cp	r24, r1
    16c2:	24 e0       	ldi	r18, 0x04	; 4
    16c4:	92 07       	cpc	r25, r18
    16c6:	a1 f7       	brne	.-24     	; 0x16b0 <oled_clear_screen+0x12>
    16c8:	60 e0       	ldi	r22, 0x00	; 0
    16ca:	84 e0       	ldi	r24, 0x04	; 4
    16cc:	0e 94 30 0b 	call	0x1660	; 0x1660 <oled_goto_pos>
    16d0:	80 e0       	ldi	r24, 0x00	; 0
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    16d8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    16dc:	e8 0f       	add	r30, r24
    16de:	f9 1f       	adc	r31, r25
    16e0:	10 82       	st	Z, r1
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	81 15       	cp	r24, r1
    16e6:	24 e0       	ldi	r18, 0x04	; 4
    16e8:	92 07       	cpc	r25, r18
    16ea:	a1 f7       	brne	.-24     	; 0x16d4 <oled_clear_screen+0x36>
    16ec:	82 e0       	ldi	r24, 0x02	; 2
    16ee:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <oled_mode>
    16f2:	08 95       	ret

000016f4 <oled_reset>:
    16f4:	0e 94 39 0b 	call	0x1672	; 0x1672 <oled_home>
    16f8:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_clear_screen>
    16fc:	82 e0       	ldi	r24, 0x02	; 2
    16fe:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <oled_mode>
    1702:	08 95       	ret

00001704 <oled_write_char>:
}


void oled_write_char(char c, int fs){
	c=c-32;
    1704:	80 52       	subi	r24, 0x20	; 32
	
	switch(fs){
    1706:	64 30       	cpi	r22, 0x04	; 4
    1708:	71 05       	cpc	r23, r1
    170a:	09 f4       	brne	.+2      	; 0x170e <oled_write_char+0xa>
    170c:	70 c0       	rjmp	.+224    	; 0x17ee <oled_write_char+0xea>
    170e:	1c f4       	brge	.+6      	; 0x1716 <oled_write_char+0x12>
    1710:	67 2b       	or	r22, r23
    1712:	89 f0       	breq	.+34     	; 0x1736 <oled_write_char+0x32>
    1714:	08 95       	ret
    1716:	66 30       	cpi	r22, 0x06	; 6
    1718:	71 05       	cpc	r23, r1
    171a:	09 f4       	brne	.+2      	; 0x171e <oled_write_char+0x1a>
    171c:	40 c0       	rjmp	.+128    	; 0x179e <oled_write_char+0x9a>
    171e:	68 30       	cpi	r22, 0x08	; 8
    1720:	71 05       	cpc	r23, r1
    1722:	09 f0       	breq	.+2      	; 0x1726 <oled_write_char+0x22>
    1724:	b3 c0       	rjmp	.+358    	; 0x188c <oled_write_char+0x188>
		case 8 :
			for(int i=0; i<fontsize;i++){
    1726:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
    172a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
    172e:	12 16       	cp	r1, r18
    1730:	13 06       	cpc	r1, r19
    1732:	54 f0       	brlt	.+20     	; 0x1748 <oled_write_char+0x44>
    1734:	08 95       	ret
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
    1736:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
    173a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
    173e:	12 16       	cp	r1, r18
    1740:	13 06       	cpc	r1, r19
    1742:	0c f4       	brge	.+2      	; 0x1746 <oled_write_char+0x42>
    1744:	79 c0       	rjmp	.+242    	; 0x1838 <oled_write_char+0x134>
    1746:	08 95       	ret
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	88 0f       	add	r24, r24
    174c:	99 1f       	adc	r25, r25
    174e:	88 0f       	add	r24, r24
    1750:	99 1f       	adc	r25, r25
    1752:	88 0f       	add	r24, r24
    1754:	99 1f       	adc	r25, r25
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
    175a:	a4 ec       	ldi	r26, 0xC4	; 196
    175c:	b1 e0       	ldi	r27, 0x01	; 1
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
    175e:	f9 01       	movw	r30, r18
    1760:	e8 0f       	add	r30, r24
    1762:	f9 1f       	adc	r31, r25
    1764:	e2 5e       	subi	r30, 0xE2	; 226
    1766:	f8 4f       	sbci	r31, 0xF8	; 248
    1768:	45 91       	lpm	r20, Z+
    176a:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    176c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    1770:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    1774:	40 83       	st	Z, r20
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
    1776:	12 96       	adiw	r26, 0x02	; 2
    1778:	4d 91       	ld	r20, X+
    177a:	5c 91       	ld	r21, X
    177c:	13 97       	sbiw	r26, 0x03	; 3
    177e:	4f 5f       	subi	r20, 0xFF	; 255
    1780:	5f 4f       	sbci	r21, 0xFF	; 255
    1782:	13 96       	adiw	r26, 0x03	; 3
    1784:	5c 93       	st	X, r21
    1786:	4e 93       	st	-X, r20
    1788:	12 97       	sbiw	r26, 0x02	; 2
void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
		case 8 :
			for(int i=0; i<fontsize;i++){
    178a:	2f 5f       	subi	r18, 0xFF	; 255
    178c:	3f 4f       	sbci	r19, 0xFF	; 255
    178e:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <fontsize>
    1792:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <fontsize+0x1>
    1796:	24 17       	cp	r18, r20
    1798:	35 07       	cpc	r19, r21
    179a:	0c f3       	brlt	.-62     	; 0x175e <oled_write_char+0x5a>
    179c:	08 95       	ret
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	9c 01       	movw	r18, r24
    17a2:	22 0f       	add	r18, r18
    17a4:	33 1f       	adc	r19, r19
    17a6:	82 0f       	add	r24, r18
    17a8:	93 1f       	adc	r25, r19
    17aa:	88 0f       	add	r24, r24
    17ac:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
    17b2:	a4 ec       	ldi	r26, 0xC4	; 196
    17b4:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
    17b6:	f9 01       	movw	r30, r18
    17b8:	e8 0f       	add	r30, r24
    17ba:	f9 1f       	adc	r31, r25
    17bc:	ec 51       	subi	r30, 0x1C	; 28
    17be:	fb 4f       	sbci	r31, 0xFB	; 251
    17c0:	45 91       	lpm	r20, Z+
    17c2:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    17c4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    17c8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    17cc:	40 83       	st	Z, r20
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
    17ce:	12 96       	adiw	r26, 0x02	; 2
    17d0:	4d 91       	ld	r20, X+
    17d2:	5c 91       	ld	r21, X
    17d4:	13 97       	sbiw	r26, 0x03	; 3
    17d6:	4f 5f       	subi	r20, 0xFF	; 255
    17d8:	5f 4f       	sbci	r21, 0xFF	; 255
    17da:	13 96       	adiw	r26, 0x03	; 3
    17dc:	5c 93       	st	X, r21
    17de:	4e 93       	st	-X, r20
    17e0:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font8[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 6 :
			for(int i=0; i<6;i++){
    17e2:	2f 5f       	subi	r18, 0xFF	; 255
    17e4:	3f 4f       	sbci	r19, 0xFF	; 255
    17e6:	26 30       	cpi	r18, 0x06	; 6
    17e8:	31 05       	cpc	r19, r1
    17ea:	29 f7       	brne	.-54     	; 0x17b6 <oled_write_char+0xb2>
    17ec:	08 95       	ret
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	88 0f       	add	r24, r24
    17f2:	99 1f       	adc	r25, r25
    17f4:	88 0f       	add	r24, r24
    17f6:	99 1f       	adc	r25, r25


void oled_write_char(char c, int fs){
	c=c-32;
	
	switch(fs){
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	30 e0       	ldi	r19, 0x00	; 0
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
    17fc:	a4 ec       	ldi	r26, 0xC4	; 196
    17fe:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
    1800:	f9 01       	movw	r30, r18
    1802:	e8 0f       	add	r30, r24
    1804:	f9 1f       	adc	r31, r25
    1806:	e8 59       	subi	r30, 0x98	; 152
    1808:	fc 4f       	sbci	r31, 0xFC	; 252
    180a:	45 91       	lpm	r20, Z+
    180c:	54 91       	lpm	r21, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    180e:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    1812:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    1816:	40 83       	st	Z, r20
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
    1818:	12 96       	adiw	r26, 0x02	; 2
    181a:	4d 91       	ld	r20, X+
    181c:	5c 91       	ld	r21, X
    181e:	13 97       	sbiw	r26, 0x03	; 3
    1820:	4f 5f       	subi	r20, 0xFF	; 255
    1822:	5f 4f       	sbci	r21, 0xFF	; 255
    1824:	13 96       	adiw	r26, 0x03	; 3
    1826:	5c 93       	st	X, r21
    1828:	4e 93       	st	-X, r20
    182a:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font6[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 4 :
			for(int i=0; i<4;i++){
    182c:	2f 5f       	subi	r18, 0xFF	; 255
    182e:	3f 4f       	sbci	r19, 0xFF	; 255
    1830:	24 30       	cpi	r18, 0x04	; 4
    1832:	31 05       	cpc	r19, r1
    1834:	29 f7       	brne	.-54     	; 0x1800 <oled_write_char+0xfc>
    1836:	08 95       	ret
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	88 0f       	add	r24, r24
    183c:	99 1f       	adc	r25, r25
    183e:	88 0f       	add	r24, r24
    1840:	99 1f       	adc	r25, r25
    1842:	88 0f       	add	r24, r24
    1844:	99 1f       	adc	r25, r25
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
    1846:	40 e0       	ldi	r20, 0x00	; 0
    1848:	50 e0       	ldi	r21, 0x00	; 0
				oled_wrd(pgm_read_word(&font_animation[c][i]));
				oled_position.coloumn++;
    184a:	a4 ec       	ldi	r26, 0xC4	; 196
    184c:	b1 e0       	ldi	r27, 0x01	; 1
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font_animation[c][i]));
    184e:	fa 01       	movw	r30, r20
    1850:	e8 0f       	add	r30, r24
    1852:	f9 1f       	adc	r31, r25
    1854:	e0 59       	subi	r30, 0x90	; 144
    1856:	ff 4f       	sbci	r31, 0xFF	; 255
    1858:	25 91       	lpm	r18, Z+
    185a:	34 91       	lpm	r19, Z
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
}
//oled write data
void oled_wrd(uint8_t data){
	ext_oled_data[0] = data;
    185c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ext_oled_data>
    1860:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ext_oled_data+0x1>
    1864:	20 83       	st	Z, r18
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
				oled_wrd(pgm_read_word(&font_animation[c][i]));
				oled_position.coloumn++;
    1866:	12 96       	adiw	r26, 0x02	; 2
    1868:	2d 91       	ld	r18, X+
    186a:	3c 91       	ld	r19, X
    186c:	13 97       	sbiw	r26, 0x03	; 3
    186e:	2f 5f       	subi	r18, 0xFF	; 255
    1870:	3f 4f       	sbci	r19, 0xFF	; 255
    1872:	13 96       	adiw	r26, 0x03	; 3
    1874:	3c 93       	st	X, r19
    1876:	2e 93       	st	-X, r18
    1878:	12 97       	sbiw	r26, 0x02	; 2
				oled_wrd(pgm_read_word(&font4[c][i]));
				oled_position.coloumn++;
			}
			break;
		case 0 :
			for(int i=0; i<fontsize;i++){
    187a:	4f 5f       	subi	r20, 0xFF	; 255
    187c:	5f 4f       	sbci	r21, 0xFF	; 255
    187e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <fontsize>
    1882:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <fontsize+0x1>
    1886:	42 17       	cp	r20, r18
    1888:	53 07       	cpc	r21, r19
    188a:	0c f3       	brlt	.-62     	; 0x184e <oled_write_char+0x14a>
    188c:	08 95       	ret

0000188e <oled_print>:
	
}



void oled_print(char* word, int fs){
    188e:	cf 92       	push	r12
    1890:	df 92       	push	r13
    1892:	ef 92       	push	r14
    1894:	ff 92       	push	r15
    1896:	0f 93       	push	r16
    1898:	1f 93       	push	r17
    189a:	cf 93       	push	r28
    189c:	df 93       	push	r29
    189e:	ec 01       	movw	r28, r24
    18a0:	7b 01       	movw	r14, r22
    18a2:	8c 01       	movw	r16, r24
	for( int i = 0; i < strlen(word); i++){
    18a4:	c1 2c       	mov	r12, r1
    18a6:	d1 2c       	mov	r13, r1
    18a8:	09 c0       	rjmp	.+18     	; 0x18bc <oled_print+0x2e>
		oled_write_char(word[i], fs);
    18aa:	b7 01       	movw	r22, r14
    18ac:	f8 01       	movw	r30, r16
    18ae:	81 91       	ld	r24, Z+
    18b0:	8f 01       	movw	r16, r30
    18b2:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
}



void oled_print(char* word, int fs){
	for( int i = 0; i < strlen(word); i++){
    18b6:	ff ef       	ldi	r31, 0xFF	; 255
    18b8:	cf 1a       	sub	r12, r31
    18ba:	df 0a       	sbc	r13, r31
    18bc:	fe 01       	movw	r30, r28
    18be:	01 90       	ld	r0, Z+
    18c0:	00 20       	and	r0, r0
    18c2:	e9 f7       	brne	.-6      	; 0x18be <oled_print+0x30>
    18c4:	31 97       	sbiw	r30, 0x01	; 1
    18c6:	ec 1b       	sub	r30, r28
    18c8:	fd 0b       	sbc	r31, r29
    18ca:	ce 16       	cp	r12, r30
    18cc:	df 06       	cpc	r13, r31
    18ce:	68 f3       	brcs	.-38     	; 0x18aa <oled_print+0x1c>
		oled_write_char(word[i], fs);
	}
}
    18d0:	df 91       	pop	r29
    18d2:	cf 91       	pop	r28
    18d4:	1f 91       	pop	r17
    18d6:	0f 91       	pop	r16
    18d8:	ff 90       	pop	r15
    18da:	ef 90       	pop	r14
    18dc:	df 90       	pop	r13
    18de:	cf 90       	pop	r12
    18e0:	08 95       	ret

000018e2 <oled_center_print>:

void oled_center_print(char* word, int fs){
    18e2:	0f 93       	push	r16
    18e4:	1f 93       	push	r17
    18e6:	cf 93       	push	r28
    18e8:	df 93       	push	r29
    18ea:	ec 01       	movw	r28, r24
    18ec:	8b 01       	movw	r16, r22
	oled_goto_col(63-(strlen(word)*fs/2));
    18ee:	fc 01       	movw	r30, r24
    18f0:	01 90       	ld	r0, Z+
    18f2:	00 20       	and	r0, r0
    18f4:	e9 f7       	brne	.-6      	; 0x18f0 <oled_center_print+0xe>
    18f6:	31 97       	sbiw	r30, 0x01	; 1
    18f8:	e8 1b       	sub	r30, r24
    18fa:	f9 0b       	sbc	r31, r25
    18fc:	6e 9f       	mul	r22, r30
    18fe:	90 01       	movw	r18, r0
    1900:	6f 9f       	mul	r22, r31
    1902:	30 0d       	add	r19, r0
    1904:	7e 9f       	mul	r23, r30
    1906:	30 0d       	add	r19, r0
    1908:	11 24       	eor	r1, r1
    190a:	36 95       	lsr	r19
    190c:	27 95       	ror	r18
    190e:	8f e3       	ldi	r24, 0x3F	; 63
    1910:	82 1b       	sub	r24, r18
    1912:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
	oled_print(word, fs);
    1916:	b8 01       	movw	r22, r16
    1918:	ce 01       	movw	r24, r28
    191a:	0e 94 47 0c 	call	0x188e	; 0x188e <oled_print>
}
    191e:	df 91       	pop	r29
    1920:	cf 91       	pop	r28
    1922:	1f 91       	pop	r17
    1924:	0f 91       	pop	r16
    1926:	08 95       	ret

00001928 <oled_arrow>:

char* oled_arrow(char* name){
    1928:	0f 93       	push	r16
    192a:	1f 93       	push	r17
    192c:	cf 93       	push	r28
    192e:	df 93       	push	r29
    1930:	8c 01       	movw	r16, r24
	char* str = malloc(sizeof(char)*20);
    1932:	84 e1       	ldi	r24, 0x14	; 20
    1934:	90 e0       	ldi	r25, 0x00	; 0
    1936:	0e 94 a9 11 	call	0x2352	; 0x2352 <malloc>
    193a:	ec 01       	movw	r28, r24
	strcpy(str,">");
    193c:	8e e3       	ldi	r24, 0x3E	; 62
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	99 83       	std	Y+1, r25	; 0x01
    1942:	88 83       	st	Y, r24
	strcat(str,name);
    1944:	b8 01       	movw	r22, r16
    1946:	ce 01       	movw	r24, r28
    1948:	0e 94 a0 13 	call	0x2740	; 0x2740 <strcat>
	strcat(str,"<");
    194c:	fe 01       	movw	r30, r28
    194e:	01 90       	ld	r0, Z+
    1950:	00 20       	and	r0, r0
    1952:	e9 f7       	brne	.-6      	; 0x194e <oled_arrow+0x26>
    1954:	31 97       	sbiw	r30, 0x01	; 1
    1956:	8c e3       	ldi	r24, 0x3C	; 60
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
	return str;
}
    195e:	ce 01       	movw	r24, r28
    1960:	df 91       	pop	r29
    1962:	cf 91       	pop	r28
    1964:	1f 91       	pop	r17
    1966:	0f 91       	pop	r16
    1968:	08 95       	ret

0000196a <oled_animation_frame>:

void oled_animation_frame(char c, int col,char c1,int col1){
    196a:	1f 93       	push	r17
    196c:	cf 93       	push	r28
    196e:	df 93       	push	r29
    1970:	18 2f       	mov	r17, r24
    1972:	86 2f       	mov	r24, r22
    1974:	d4 2f       	mov	r29, r20
    1976:	c2 2f       	mov	r28, r18
	oled_goto_col(col);
    1978:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
	oled_write_char(c,0);
    197c:	60 e0       	ldi	r22, 0x00	; 0
    197e:	70 e0       	ldi	r23, 0x00	; 0
    1980:	81 2f       	mov	r24, r17
    1982:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
	oled_goto_col(col1);
    1986:	8c 2f       	mov	r24, r28
    1988:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
	oled_write_char(c1,0);
    198c:	60 e0       	ldi	r22, 0x00	; 0
    198e:	70 e0       	ldi	r23, 0x00	; 0
    1990:	8d 2f       	mov	r24, r29
    1992:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    1996:	83 ed       	ldi	r24, 0xD3	; 211
    1998:	90 e3       	ldi	r25, 0x30	; 48
    199a:	01 97       	sbiw	r24, 0x01	; 1
    199c:	f1 f7       	brne	.-4      	; 0x199a <oled_animation_frame+0x30>
    199e:	00 c0       	rjmp	.+0      	; 0x19a0 <oled_animation_frame+0x36>
    19a0:	00 00       	nop
	_delay_ms(50);
	oled_goto_col(col1);
    19a2:	8c 2f       	mov	r24, r28
    19a4:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
	oled_write_char('H',0);
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	88 e4       	ldi	r24, 0x48	; 72
    19ae:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
}
    19b2:	df 91       	pop	r29
    19b4:	cf 91       	pop	r28
    19b6:	1f 91       	pop	r17
    19b8:	08 95       	ret

000019ba <oled_animation>:

void oled_animation(int page){
    19ba:	0f 93       	push	r16
    19bc:	1f 93       	push	r17
    19be:	cf 93       	push	r28
	oled_goto_page(page);
    19c0:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
	oled_goto_col(120);
    19c4:	88 e7       	ldi	r24, 0x78	; 120
    19c6:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
	oled_write_char('J',0);
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	70 e0       	ldi	r23, 0x00	; 0
    19ce:	8a e4       	ldi	r24, 0x4A	; 74
    19d0:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    19d4:	03 e0       	ldi	r16, 0x03	; 3
    19d6:	10 e0       	ldi	r17, 0x00	; 0
	for( int i = 0; i < 3; i++){
		oled_animation_frame('A',0,'I',2);
    19d8:	22 e0       	ldi	r18, 0x02	; 2
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	49 e4       	ldi	r20, 0x49	; 73
    19de:	60 e0       	ldi	r22, 0x00	; 0
    19e0:	70 e0       	ldi	r23, 0x00	; 0
    19e2:	81 e4       	ldi	r24, 0x41	; 65
    19e4:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('B',0,'I',3);
    19e8:	23 e0       	ldi	r18, 0x03	; 3
    19ea:	30 e0       	ldi	r19, 0x00	; 0
    19ec:	49 e4       	ldi	r20, 0x49	; 73
    19ee:	60 e0       	ldi	r22, 0x00	; 0
    19f0:	70 e0       	ldi	r23, 0x00	; 0
    19f2:	82 e4       	ldi	r24, 0x42	; 66
    19f4:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('C',0,'I',4);
    19f8:	24 e0       	ldi	r18, 0x04	; 4
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	49 e4       	ldi	r20, 0x49	; 73
    19fe:	60 e0       	ldi	r22, 0x00	; 0
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	83 e4       	ldi	r24, 0x43	; 67
    1a04:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('D',0,'I',5);
    1a08:	25 e0       	ldi	r18, 0x05	; 5
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	49 e4       	ldi	r20, 0x49	; 73
    1a0e:	60 e0       	ldi	r22, 0x00	; 0
    1a10:	70 e0       	ldi	r23, 0x00	; 0
    1a12:	84 e4       	ldi	r24, 0x44	; 68
    1a14:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('E',0,'I',6);
    1a18:	26 e0       	ldi	r18, 0x06	; 6
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	49 e4       	ldi	r20, 0x49	; 73
    1a1e:	60 e0       	ldi	r22, 0x00	; 0
    1a20:	70 e0       	ldi	r23, 0x00	; 0
    1a22:	85 e4       	ldi	r24, 0x45	; 69
    1a24:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('F',0,'I',7);
    1a28:	27 e0       	ldi	r18, 0x07	; 7
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	49 e4       	ldi	r20, 0x49	; 73
    1a2e:	60 e0       	ldi	r22, 0x00	; 0
    1a30:	70 e0       	ldi	r23, 0x00	; 0
    1a32:	86 e4       	ldi	r24, 0x46	; 70
    1a34:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('G',0,'I',8);
    1a38:	28 e0       	ldi	r18, 0x08	; 8
    1a3a:	30 e0       	ldi	r19, 0x00	; 0
    1a3c:	49 e4       	ldi	r20, 0x49	; 73
    1a3e:	60 e0       	ldi	r22, 0x00	; 0
    1a40:	70 e0       	ldi	r23, 0x00	; 0
    1a42:	87 e4       	ldi	r24, 0x47	; 71
    1a44:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('F',0,'I',9);
    1a48:	29 e0       	ldi	r18, 0x09	; 9
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	49 e4       	ldi	r20, 0x49	; 73
    1a4e:	60 e0       	ldi	r22, 0x00	; 0
    1a50:	70 e0       	ldi	r23, 0x00	; 0
    1a52:	86 e4       	ldi	r24, 0x46	; 70
    1a54:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('E',0,'I',10);
    1a58:	2a e0       	ldi	r18, 0x0A	; 10
    1a5a:	30 e0       	ldi	r19, 0x00	; 0
    1a5c:	49 e4       	ldi	r20, 0x49	; 73
    1a5e:	60 e0       	ldi	r22, 0x00	; 0
    1a60:	70 e0       	ldi	r23, 0x00	; 0
    1a62:	85 e4       	ldi	r24, 0x45	; 69
    1a64:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('D',0,'I',11);
    1a68:	2b e0       	ldi	r18, 0x0B	; 11
    1a6a:	30 e0       	ldi	r19, 0x00	; 0
    1a6c:	49 e4       	ldi	r20, 0x49	; 73
    1a6e:	60 e0       	ldi	r22, 0x00	; 0
    1a70:	70 e0       	ldi	r23, 0x00	; 0
    1a72:	84 e4       	ldi	r24, 0x44	; 68
    1a74:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('C',0,'I',12);
    1a78:	2c e0       	ldi	r18, 0x0C	; 12
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	49 e4       	ldi	r20, 0x49	; 73
    1a7e:	60 e0       	ldi	r22, 0x00	; 0
    1a80:	70 e0       	ldi	r23, 0x00	; 0
    1a82:	83 e4       	ldi	r24, 0x43	; 67
    1a84:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('B',0,'I',13);
    1a88:	2d e0       	ldi	r18, 0x0D	; 13
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	49 e4       	ldi	r20, 0x49	; 73
    1a8e:	60 e0       	ldi	r22, 0x00	; 0
    1a90:	70 e0       	ldi	r23, 0x00	; 0
    1a92:	82 e4       	ldi	r24, 0x42	; 66
    1a94:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('A',0,'I',14);
    1a98:	2e e0       	ldi	r18, 0x0E	; 14
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	49 e4       	ldi	r20, 0x49	; 73
    1a9e:	60 e0       	ldi	r22, 0x00	; 0
    1aa0:	70 e0       	ldi	r23, 0x00	; 0
    1aa2:	81 e4       	ldi	r24, 0x41	; 65
    1aa4:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
    1aa8:	cf e0       	ldi	r28, 0x0F	; 15
		
		for(int i=15; i<118; i++){
			oled_goto_col(i);
    1aaa:	8c 2f       	mov	r24, r28
    1aac:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
			oled_write_char('I',0);
    1ab0:	60 e0       	ldi	r22, 0x00	; 0
    1ab2:	70 e0       	ldi	r23, 0x00	; 0
    1ab4:	89 e4       	ldi	r24, 0x49	; 73
    1ab6:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    1aba:	83 ed       	ldi	r24, 0xD3	; 211
    1abc:	90 e3       	ldi	r25, 0x30	; 48
    1abe:	01 97       	sbiw	r24, 0x01	; 1
    1ac0:	f1 f7       	brne	.-4      	; 0x1abe <oled_animation+0x104>
    1ac2:	00 c0       	rjmp	.+0      	; 0x1ac4 <oled_animation+0x10a>
    1ac4:	00 00       	nop
			_delay_ms(50);
			oled_goto_col(i);
    1ac6:	8c 2f       	mov	r24, r28
    1ac8:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
			oled_write_char('H',0);
    1acc:	60 e0       	ldi	r22, 0x00	; 0
    1ace:	70 e0       	ldi	r23, 0x00	; 0
    1ad0:	88 e4       	ldi	r24, 0x48	; 72
    1ad2:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    1ad6:	cf 5f       	subi	r28, 0xFF	; 255
		oled_animation_frame('D',0,'I',11);
		oled_animation_frame('C',0,'I',12);
		oled_animation_frame('B',0,'I',13);
		oled_animation_frame('A',0,'I',14);
		
		for(int i=15; i<118; i++){
    1ad8:	c6 37       	cpi	r28, 0x76	; 118
    1ada:	39 f7       	brne	.-50     	; 0x1aaa <oled_animation+0xf0>
			_delay_ms(50);
			oled_goto_col(i);
			oled_write_char('H',0);
		}

		oled_animation_frame('J',120,'I',118);
    1adc:	26 e7       	ldi	r18, 0x76	; 118
    1ade:	30 e0       	ldi	r19, 0x00	; 0
    1ae0:	49 e4       	ldi	r20, 0x49	; 73
    1ae2:	68 e7       	ldi	r22, 0x78	; 120
    1ae4:	70 e0       	ldi	r23, 0x00	; 0
    1ae6:	8a e4       	ldi	r24, 0x4A	; 74
    1ae8:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('K',120,'I',117);
    1aec:	25 e7       	ldi	r18, 0x75	; 117
    1aee:	30 e0       	ldi	r19, 0x00	; 0
    1af0:	49 e4       	ldi	r20, 0x49	; 73
    1af2:	68 e7       	ldi	r22, 0x78	; 120
    1af4:	70 e0       	ldi	r23, 0x00	; 0
    1af6:	8b e4       	ldi	r24, 0x4B	; 75
    1af8:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('L',120,'I',116);
    1afc:	24 e7       	ldi	r18, 0x74	; 116
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	49 e4       	ldi	r20, 0x49	; 73
    1b02:	68 e7       	ldi	r22, 0x78	; 120
    1b04:	70 e0       	ldi	r23, 0x00	; 0
    1b06:	8c e4       	ldi	r24, 0x4C	; 76
    1b08:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('M',120,'I',115);
    1b0c:	23 e7       	ldi	r18, 0x73	; 115
    1b0e:	30 e0       	ldi	r19, 0x00	; 0
    1b10:	49 e4       	ldi	r20, 0x49	; 73
    1b12:	68 e7       	ldi	r22, 0x78	; 120
    1b14:	70 e0       	ldi	r23, 0x00	; 0
    1b16:	8d e4       	ldi	r24, 0x4D	; 77
    1b18:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('N',120,'I',114);
    1b1c:	22 e7       	ldi	r18, 0x72	; 114
    1b1e:	30 e0       	ldi	r19, 0x00	; 0
    1b20:	49 e4       	ldi	r20, 0x49	; 73
    1b22:	68 e7       	ldi	r22, 0x78	; 120
    1b24:	70 e0       	ldi	r23, 0x00	; 0
    1b26:	8e e4       	ldi	r24, 0x4E	; 78
    1b28:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('O',120,'I',113);
    1b2c:	21 e7       	ldi	r18, 0x71	; 113
    1b2e:	30 e0       	ldi	r19, 0x00	; 0
    1b30:	49 e4       	ldi	r20, 0x49	; 73
    1b32:	68 e7       	ldi	r22, 0x78	; 120
    1b34:	70 e0       	ldi	r23, 0x00	; 0
    1b36:	8f e4       	ldi	r24, 0x4F	; 79
    1b38:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('P',120,'I',112);
    1b3c:	20 e7       	ldi	r18, 0x70	; 112
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	49 e4       	ldi	r20, 0x49	; 73
    1b42:	68 e7       	ldi	r22, 0x78	; 120
    1b44:	70 e0       	ldi	r23, 0x00	; 0
    1b46:	80 e5       	ldi	r24, 0x50	; 80
    1b48:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('O',120,'I',111);
    1b4c:	2f e6       	ldi	r18, 0x6F	; 111
    1b4e:	30 e0       	ldi	r19, 0x00	; 0
    1b50:	49 e4       	ldi	r20, 0x49	; 73
    1b52:	68 e7       	ldi	r22, 0x78	; 120
    1b54:	70 e0       	ldi	r23, 0x00	; 0
    1b56:	8f e4       	ldi	r24, 0x4F	; 79
    1b58:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('N',120,'I',110);
    1b5c:	2e e6       	ldi	r18, 0x6E	; 110
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	49 e4       	ldi	r20, 0x49	; 73
    1b62:	68 e7       	ldi	r22, 0x78	; 120
    1b64:	70 e0       	ldi	r23, 0x00	; 0
    1b66:	8e e4       	ldi	r24, 0x4E	; 78
    1b68:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('M',120,'I',109);
    1b6c:	2d e6       	ldi	r18, 0x6D	; 109
    1b6e:	30 e0       	ldi	r19, 0x00	; 0
    1b70:	49 e4       	ldi	r20, 0x49	; 73
    1b72:	68 e7       	ldi	r22, 0x78	; 120
    1b74:	70 e0       	ldi	r23, 0x00	; 0
    1b76:	8d e4       	ldi	r24, 0x4D	; 77
    1b78:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('L',120,'I',108);
    1b7c:	2c e6       	ldi	r18, 0x6C	; 108
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	49 e4       	ldi	r20, 0x49	; 73
    1b82:	68 e7       	ldi	r22, 0x78	; 120
    1b84:	70 e0       	ldi	r23, 0x00	; 0
    1b86:	8c e4       	ldi	r24, 0x4C	; 76
    1b88:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('K',120,'I',107);
    1b8c:	2b e6       	ldi	r18, 0x6B	; 107
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	49 e4       	ldi	r20, 0x49	; 73
    1b92:	68 e7       	ldi	r22, 0x78	; 120
    1b94:	70 e0       	ldi	r23, 0x00	; 0
    1b96:	8b e4       	ldi	r24, 0x4B	; 75
    1b98:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
		oled_animation_frame('J',120,'I',106);
    1b9c:	2a e6       	ldi	r18, 0x6A	; 106
    1b9e:	30 e0       	ldi	r19, 0x00	; 0
    1ba0:	49 e4       	ldi	r20, 0x49	; 73
    1ba2:	68 e7       	ldi	r22, 0x78	; 120
    1ba4:	70 e0       	ldi	r23, 0x00	; 0
    1ba6:	8a e4       	ldi	r24, 0x4A	; 74
    1ba8:	0e 94 b5 0c 	call	0x196a	; 0x196a <oled_animation_frame>
    1bac:	c9 e6       	ldi	r28, 0x69	; 105
		for(int i=105; i>1; i--){
			oled_goto_col(i);
    1bae:	8c 2f       	mov	r24, r28
    1bb0:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
			oled_write_char('I',0);
    1bb4:	60 e0       	ldi	r22, 0x00	; 0
    1bb6:	70 e0       	ldi	r23, 0x00	; 0
    1bb8:	89 e4       	ldi	r24, 0x49	; 73
    1bba:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    1bbe:	83 ed       	ldi	r24, 0xD3	; 211
    1bc0:	90 e3       	ldi	r25, 0x30	; 48
    1bc2:	01 97       	sbiw	r24, 0x01	; 1
    1bc4:	f1 f7       	brne	.-4      	; 0x1bc2 <oled_animation+0x208>
    1bc6:	00 c0       	rjmp	.+0      	; 0x1bc8 <oled_animation+0x20e>
    1bc8:	00 00       	nop
			_delay_ms(50);
			oled_goto_col(i);
    1bca:	8c 2f       	mov	r24, r28
    1bcc:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
			oled_write_char('H',0);
    1bd0:	60 e0       	ldi	r22, 0x00	; 0
    1bd2:	70 e0       	ldi	r23, 0x00	; 0
    1bd4:	88 e4       	ldi	r24, 0x48	; 72
    1bd6:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    1bda:	c1 50       	subi	r28, 0x01	; 1
		oled_animation_frame('N',120,'I',110);
		oled_animation_frame('M',120,'I',109);
		oled_animation_frame('L',120,'I',108);
		oled_animation_frame('K',120,'I',107);
		oled_animation_frame('J',120,'I',106);
		for(int i=105; i>1; i--){
    1bdc:	c1 30       	cpi	r28, 0x01	; 1
    1bde:	39 f7       	brne	.-50     	; 0x1bae <oled_animation+0x1f4>
    1be0:	01 50       	subi	r16, 0x01	; 1
    1be2:	11 09       	sbc	r17, r1

void oled_animation(int page){
	oled_goto_page(page);
	oled_goto_col(120);
	oled_write_char('J',0);
	for( int i = 0; i < 3; i++){
    1be4:	09 f0       	breq	.+2      	; 0x1be8 <oled_animation+0x22e>
    1be6:	f8 ce       	rjmp	.-528    	; 0x19d8 <oled_animation+0x1e>
			_delay_ms(50);
			oled_goto_col(i);
			oled_write_char('H',0);
		}
	}
}
    1be8:	cf 91       	pop	r28
    1bea:	1f 91       	pop	r17
    1bec:	0f 91       	pop	r16
    1bee:	08 95       	ret

00001bf0 <oled_init>:
int fontsize = 8;


//oled write command
void oled_wrc(uint8_t data){
	ext_oled_command[0] = data;
    1bf0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1bf4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1bf8:	8e ea       	ldi	r24, 0xAE	; 174
    1bfa:	80 83       	st	Z, r24
    1bfc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c00:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c04:	81 ea       	ldi	r24, 0xA1	; 161
    1c06:	80 83       	st	Z, r24
    1c08:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c0c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c10:	8a ed       	ldi	r24, 0xDA	; 218
    1c12:	80 83       	st	Z, r24
    1c14:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c18:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c1c:	82 e1       	ldi	r24, 0x12	; 18
    1c1e:	80 83       	st	Z, r24
    1c20:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c24:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c28:	88 ec       	ldi	r24, 0xC8	; 200
    1c2a:	80 83       	st	Z, r24
    1c2c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c30:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c34:	88 ea       	ldi	r24, 0xA8	; 168
    1c36:	80 83       	st	Z, r24
    1c38:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c3c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c40:	8f e3       	ldi	r24, 0x3F	; 63
    1c42:	80 83       	st	Z, r24
    1c44:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c48:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c4c:	85 ed       	ldi	r24, 0xD5	; 213
    1c4e:	80 83       	st	Z, r24
    1c50:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c54:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c58:	80 e8       	ldi	r24, 0x80	; 128
    1c5a:	80 83       	st	Z, r24
    1c5c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c60:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c64:	81 e8       	ldi	r24, 0x81	; 129
    1c66:	80 83       	st	Z, r24
    1c68:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c6c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c70:	80 e5       	ldi	r24, 0x50	; 80
    1c72:	80 83       	st	Z, r24
    1c74:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c78:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c7c:	89 ed       	ldi	r24, 0xD9	; 217
    1c7e:	80 83       	st	Z, r24
    1c80:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c84:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c88:	81 e2       	ldi	r24, 0x21	; 33
    1c8a:	80 83       	st	Z, r24
    1c8c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c90:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1c94:	80 e2       	ldi	r24, 0x20	; 32
    1c96:	80 83       	st	Z, r24
    1c98:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1c9c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1ca0:	82 e0       	ldi	r24, 0x02	; 2
    1ca2:	80 83       	st	Z, r24
    1ca4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1ca8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cac:	8b ed       	ldi	r24, 0xDB	; 219
    1cae:	80 83       	st	Z, r24
    1cb0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cb4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cb8:	80 e3       	ldi	r24, 0x30	; 48
    1cba:	80 83       	st	Z, r24
    1cbc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cc0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cc4:	8d ea       	ldi	r24, 0xAD	; 173
    1cc6:	80 83       	st	Z, r24
    1cc8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1ccc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cd0:	10 82       	st	Z, r1
    1cd2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cd6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cda:	84 ea       	ldi	r24, 0xA4	; 164
    1cdc:	80 83       	st	Z, r24
    1cde:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1ce2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1ce6:	86 ea       	ldi	r24, 0xA6	; 166
    1ce8:	80 83       	st	Z, r24
    1cea:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <ext_oled_command>
    1cee:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <ext_oled_command+0x1>
    1cf2:	8f ea       	ldi	r24, 0xAF	; 175
    1cf4:	80 83       	st	Z, r24
	      oled_wrc(0xad);        //master configuration
	      oled_wrc(0x00);
	      oled_wrc(0xa4);        //out follows RAM content
	      oled_wrc(0xa6);        //set normal display
	      oled_wrc(0xaf);        // display on
		  oled_clear_screen();
    1cf6:	0e 94 4f 0b 	call	0x169e	; 0x169e <oled_clear_screen>
		  oled_goto_pos(0,0);
    1cfa:	60 e0       	ldi	r22, 0x00	; 0
    1cfc:	80 e0       	ldi	r24, 0x00	; 0
    1cfe:	0e 94 30 0b 	call	0x1660	; 0x1660 <oled_goto_pos>
    1d02:	08 95       	ret

00001d04 <oled_print_screen_progmem>:

	
}

void oled_print_screen_progmem(int screenoffset){
    1d04:	ef 92       	push	r14
    1d06:	ff 92       	push	r15
    1d08:	1f 93       	push	r17
    1d0a:	cf 93       	push	r28
    1d0c:	df 93       	push	r29
    1d0e:	cd b7       	in	r28, 0x3d	; 61
    1d10:	de b7       	in	r29, 0x3e	; 62
    1d12:	60 97       	sbiw	r28, 0x10	; 16
    1d14:	0f b6       	in	r0, 0x3f	; 63
    1d16:	f8 94       	cli
    1d18:	de bf       	out	0x3e, r29	; 62
    1d1a:	0f be       	out	0x3f, r0	; 63
    1d1c:	cd bf       	out	0x3d, r28	; 61
    1d1e:	88 0f       	add	r24, r24
    1d20:	99 1f       	adc	r25, r25
    1d22:	9c 01       	movw	r18, r24
    1d24:	2a 5e       	subi	r18, 0xEA	; 234
    1d26:	35 4f       	sbci	r19, 0xF5	; 245
    1d28:	79 01       	movw	r14, r18
	char buffer[16];
	for(unsigned char i=0; i<8; i++){
    1d2a:	10 e0       	ldi	r17, 0x00	; 0
		oled_goto_page(i);
    1d2c:	81 2f       	mov	r24, r17
    1d2e:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
		strcpy_P(buffer,(PGM_P)pgm_read_word(&table[i]+screenoffset));
    1d32:	f7 01       	movw	r30, r14
    1d34:	65 91       	lpm	r22, Z+
    1d36:	74 91       	lpm	r23, Z
    1d38:	ce 01       	movw	r24, r28
    1d3a:	01 96       	adiw	r24, 0x01	; 1
    1d3c:	0e 94 90 13 	call	0x2720	; 0x2720 <strcpy_P>
		oled_center_print(buffer,8);
    1d40:	68 e0       	ldi	r22, 0x08	; 8
    1d42:	70 e0       	ldi	r23, 0x00	; 0
    1d44:	ce 01       	movw	r24, r28
    1d46:	01 96       	adiw	r24, 0x01	; 1
    1d48:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <oled_center_print>
	
}

void oled_print_screen_progmem(int screenoffset){
	char buffer[16];
	for(unsigned char i=0; i<8; i++){
    1d4c:	1f 5f       	subi	r17, 0xFF	; 255
    1d4e:	32 e0       	ldi	r19, 0x02	; 2
    1d50:	e3 0e       	add	r14, r19
    1d52:	f1 1c       	adc	r15, r1
    1d54:	18 30       	cpi	r17, 0x08	; 8
    1d56:	51 f7       	brne	.-44     	; 0x1d2c <oled_print_screen_progmem+0x28>
		oled_goto_page(i);
		strcpy_P(buffer,(PGM_P)pgm_read_word(&table[i]+screenoffset));
		oled_center_print(buffer,8);
	}
}
    1d58:	60 96       	adiw	r28, 0x10	; 16
    1d5a:	0f b6       	in	r0, 0x3f	; 63
    1d5c:	f8 94       	cli
    1d5e:	de bf       	out	0x3e, r29	; 62
    1d60:	0f be       	out	0x3f, r0	; 63
    1d62:	cd bf       	out	0x3d, r28	; 61
    1d64:	df 91       	pop	r29
    1d66:	cf 91       	pop	r28
    1d68:	1f 91       	pop	r17
    1d6a:	ff 90       	pop	r15
    1d6c:	ef 90       	pop	r14
    1d6e:	08 95       	ret

00001d70 <oled_print_page_progmem>:

void oled_print_page_progmem(int screenoffset, int pageOffset){
    1d70:	ef 92       	push	r14
    1d72:	ff 92       	push	r15
    1d74:	0f 93       	push	r16
    1d76:	1f 93       	push	r17
    1d78:	cf 93       	push	r28
    1d7a:	df 93       	push	r29
    1d7c:	cd b7       	in	r28, 0x3d	; 61
    1d7e:	de b7       	in	r29, 0x3e	; 62
    1d80:	60 97       	sbiw	r28, 0x10	; 16
    1d82:	0f b6       	in	r0, 0x3f	; 63
    1d84:	f8 94       	cli
    1d86:	de bf       	out	0x3e, r29	; 62
    1d88:	0f be       	out	0x3f, r0	; 63
    1d8a:	cd bf       	out	0x3d, r28	; 61
    1d8c:	8c 01       	movw	r16, r24
    1d8e:	7b 01       	movw	r14, r22
	char buffer[16];
	oled_goto_page(pageOffset);
    1d90:	86 2f       	mov	r24, r22
    1d92:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
	strcpy_P(buffer,(PGM_P)pgm_read_word(&table[screenoffset+pageOffset]));
    1d96:	f7 01       	movw	r30, r14
    1d98:	e0 0f       	add	r30, r16
    1d9a:	f1 1f       	adc	r31, r17
    1d9c:	ee 0f       	add	r30, r30
    1d9e:	ff 1f       	adc	r31, r31
    1da0:	ea 5e       	subi	r30, 0xEA	; 234
    1da2:	f5 4f       	sbci	r31, 0xF5	; 245
    1da4:	65 91       	lpm	r22, Z+
    1da6:	74 91       	lpm	r23, Z
    1da8:	ce 01       	movw	r24, r28
    1daa:	01 96       	adiw	r24, 0x01	; 1
    1dac:	0e 94 90 13 	call	0x2720	; 0x2720 <strcpy_P>
	oled_center_print(buffer,8);
    1db0:	68 e0       	ldi	r22, 0x08	; 8
    1db2:	70 e0       	ldi	r23, 0x00	; 0
    1db4:	ce 01       	movw	r24, r28
    1db6:	01 96       	adiw	r24, 0x01	; 1
    1db8:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <oled_center_print>
}
    1dbc:	60 96       	adiw	r28, 0x10	; 16
    1dbe:	0f b6       	in	r0, 0x3f	; 63
    1dc0:	f8 94       	cli
    1dc2:	de bf       	out	0x3e, r29	; 62
    1dc4:	0f be       	out	0x3f, r0	; 63
    1dc6:	cd bf       	out	0x3d, r28	; 61
    1dc8:	df 91       	pop	r29
    1dca:	cf 91       	pop	r28
    1dcc:	1f 91       	pop	r17
    1dce:	0f 91       	pop	r16
    1dd0:	ff 90       	pop	r15
    1dd2:	ef 90       	pop	r14
    1dd4:	08 95       	ret

00001dd6 <oled_print_time_used>:

void oled_print_time_used(void){
    1dd6:	1f 93       	push	r17
    1dd8:	cf 93       	push	r28
    1dda:	df 93       	push	r29
	int mseconds;
	int digit3char;
	int digit2char;
	int digit1char;
	int mdigitchar;
	seconds = timer_get_seconds();
    1ddc:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <timer_get_seconds>
    1de0:	ec 01       	movw	r28, r24
	mseconds = timer_get_mseconds();
    1de2:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <timer_get_mseconds>
    1de6:	18 2f       	mov	r17, r24
	digit3char = digit3+'0';
	digit2char = digit2+'0';
	digit1char = digit1+'0';
	mdigitchar = mdigit+'0';
	
	oled_goto_page(4);
    1de8:	84 e0       	ldi	r24, 0x04	; 4
    1dea:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <oled_goto_page>
	oled_goto_col(63-(5*(8/2)));
    1dee:	8b e2       	ldi	r24, 0x2B	; 43
    1df0:	0e 94 0f 0b 	call	0x161e	; 0x161e <oled_goto_col>
	oled_write_char(digit3char,8);
    1df4:	ce 01       	movw	r24, r28
    1df6:	64 e6       	ldi	r22, 0x64	; 100
    1df8:	70 e0       	ldi	r23, 0x00	; 0
    1dfa:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1dfe:	86 2f       	mov	r24, r22
    1e00:	68 e0       	ldi	r22, 0x08	; 8
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	80 5d       	subi	r24, 0xD0	; 208
    1e06:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
	oled_write_char(digit2char,8);
    1e0a:	ce 01       	movw	r24, r28
    1e0c:	6a e0       	ldi	r22, 0x0A	; 10
    1e0e:	70 e0       	ldi	r23, 0x00	; 0
    1e10:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1e14:	96 2f       	mov	r25, r22
    1e16:	c8 2f       	mov	r28, r24
    1e18:	68 e0       	ldi	r22, 0x08	; 8
    1e1a:	70 e0       	ldi	r23, 0x00	; 0
    1e1c:	80 e3       	ldi	r24, 0x30	; 48
    1e1e:	89 0f       	add	r24, r25
    1e20:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
	oled_write_char(digit1char,8);
    1e24:	68 e0       	ldi	r22, 0x08	; 8
    1e26:	70 e0       	ldi	r23, 0x00	; 0
    1e28:	80 e3       	ldi	r24, 0x30	; 48
    1e2a:	8c 0f       	add	r24, r28
    1e2c:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
	oled_write_char(44,8); //44=","
    1e30:	68 e0       	ldi	r22, 0x08	; 8
    1e32:	70 e0       	ldi	r23, 0x00	; 0
    1e34:	8c e2       	ldi	r24, 0x2C	; 44
    1e36:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
	oled_write_char(mdigitchar,8);
    1e3a:	68 e0       	ldi	r22, 0x08	; 8
    1e3c:	70 e0       	ldi	r23, 0x00	; 0
    1e3e:	80 e3       	ldi	r24, 0x30	; 48
    1e40:	81 0f       	add	r24, r17
    1e42:	0e 94 82 0b 	call	0x1704	; 0x1704 <oled_write_char>
    1e46:	df 91       	pop	r29
    1e48:	cf 91       	pop	r28
    1e4a:	1f 91       	pop	r17
    1e4c:	08 95       	ret

00001e4e <slider_getPosition>:
    1e4e:	1f 93       	push	r17
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	82 e0       	ldi	r24, 0x02	; 2
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
    1e5c:	ec 01       	movw	r28, r24
    1e5e:	83 e0       	ldi	r24, 0x03	; 3
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <adc_read>
    1e66:	9c 01       	movw	r18, r24
    1e68:	48 2f       	mov	r20, r24
    1e6a:	c0 38       	cpi	r28, 0x80	; 128
    1e6c:	78 f0       	brcs	.+30     	; 0x1e8c <slider_getPosition+0x3e>
    1e6e:	dd 27       	eor	r29, r29
    1e70:	cf 57       	subi	r28, 0x7F	; 127
    1e72:	d1 09       	sbc	r29, r1
    1e74:	54 e6       	ldi	r21, 0x64	; 100
    1e76:	5c 9f       	mul	r21, r28
    1e78:	c0 01       	movw	r24, r0
    1e7a:	5d 9f       	mul	r21, r29
    1e7c:	90 0d       	add	r25, r0
    1e7e:	11 24       	eor	r1, r1
    1e80:	6f e7       	ldi	r22, 0x7F	; 127
    1e82:	70 e0       	ldi	r23, 0x00	; 0
    1e84:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1e88:	fb 01       	movw	r30, r22
    1e8a:	13 c0       	rjmp	.+38     	; 0x1eb2 <slider_getPosition+0x64>
    1e8c:	cf 37       	cpi	r28, 0x7F	; 127
    1e8e:	78 f4       	brcc	.+30     	; 0x1eae <slider_getPosition+0x60>
    1e90:	dd 27       	eor	r29, r29
    1e92:	cf 57       	subi	r28, 0x7F	; 127
    1e94:	d1 09       	sbc	r29, r1
    1e96:	54 e6       	ldi	r21, 0x64	; 100
    1e98:	5c 9f       	mul	r21, r28
    1e9a:	c0 01       	movw	r24, r0
    1e9c:	5d 9f       	mul	r21, r29
    1e9e:	90 0d       	add	r25, r0
    1ea0:	11 24       	eor	r1, r1
    1ea2:	6f e7       	ldi	r22, 0x7F	; 127
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1eaa:	fb 01       	movw	r30, r22
    1eac:	02 c0       	rjmp	.+4      	; 0x1eb2 <slider_getPosition+0x64>
    1eae:	e0 e0       	ldi	r30, 0x00	; 0
    1eb0:	f0 e0       	ldi	r31, 0x00	; 0
    1eb2:	40 38       	cpi	r20, 0x80	; 128
    1eb4:	78 f0       	brcs	.+30     	; 0x1ed4 <slider_getPosition+0x86>
    1eb6:	33 27       	eor	r19, r19
    1eb8:	2f 57       	subi	r18, 0x7F	; 127
    1eba:	31 09       	sbc	r19, r1
    1ebc:	44 e6       	ldi	r20, 0x64	; 100
    1ebe:	42 9f       	mul	r20, r18
    1ec0:	c0 01       	movw	r24, r0
    1ec2:	43 9f       	mul	r20, r19
    1ec4:	90 0d       	add	r25, r0
    1ec6:	11 24       	eor	r1, r1
    1ec8:	6f e7       	ldi	r22, 0x7F	; 127
    1eca:	70 e0       	ldi	r23, 0x00	; 0
    1ecc:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1ed0:	9b 01       	movw	r18, r22
    1ed2:	13 c0       	rjmp	.+38     	; 0x1efa <slider_getPosition+0xac>
    1ed4:	4f 37       	cpi	r20, 0x7F	; 127
    1ed6:	78 f4       	brcc	.+30     	; 0x1ef6 <slider_getPosition+0xa8>
    1ed8:	33 27       	eor	r19, r19
    1eda:	2f 57       	subi	r18, 0x7F	; 127
    1edc:	31 09       	sbc	r19, r1
    1ede:	44 e6       	ldi	r20, 0x64	; 100
    1ee0:	42 9f       	mul	r20, r18
    1ee2:	c0 01       	movw	r24, r0
    1ee4:	43 9f       	mul	r20, r19
    1ee6:	90 0d       	add	r25, r0
    1ee8:	11 24       	eor	r1, r1
    1eea:	6f e7       	ldi	r22, 0x7F	; 127
    1eec:	70 e0       	ldi	r23, 0x00	; 0
    1eee:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1ef2:	9b 01       	movw	r18, r22
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <slider_getPosition+0xac>
    1ef6:	20 e0       	ldi	r18, 0x00	; 0
    1ef8:	30 e0       	ldi	r19, 0x00	; 0
    1efa:	bf 01       	movw	r22, r30
    1efc:	c9 01       	movw	r24, r18
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	08 95       	ret

00001f06 <slider_sendPositionButtonCan>:
    1f06:	cf 93       	push	r28
    1f08:	df 93       	push	r29
    1f0a:	cd b7       	in	r28, 0x3d	; 61
    1f0c:	de b7       	in	r29, 0x3e	; 62
    1f0e:	2b 97       	sbiw	r28, 0x0b	; 11
    1f10:	0f b6       	in	r0, 0x3f	; 63
    1f12:	f8 94       	cli
    1f14:	de bf       	out	0x3e, r29	; 62
    1f16:	0f be       	out	0x3f, r0	; 63
    1f18:	cd bf       	out	0x3d, r28	; 61
    1f1a:	21 e0       	ldi	r18, 0x01	; 1
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	3a 83       	std	Y+2, r19	; 0x02
    1f20:	29 83       	std	Y+1, r18	; 0x01
    1f22:	93 e0       	ldi	r25, 0x03	; 3
    1f24:	9b 83       	std	Y+3, r25	; 0x03
    1f26:	6c 83       	std	Y+4, r22	; 0x04
    1f28:	8d 83       	std	Y+5, r24	; 0x05
    1f2a:	86 b3       	in	r24, 0x16	; 22
    1f2c:	81 70       	andi	r24, 0x01	; 1
    1f2e:	8e 83       	std	Y+6, r24	; 0x06
    1f30:	ce 01       	movw	r24, r28
    1f32:	01 96       	adiw	r24, 0x01	; 1
    1f34:	0e 94 97 06 	call	0xd2e	; 0xd2e <can_send_message>
    1f38:	2b 96       	adiw	r28, 0x0b	; 11
    1f3a:	0f b6       	in	r0, 0x3f	; 63
    1f3c:	f8 94       	cli
    1f3e:	de bf       	out	0x3e, r29	; 62
    1f40:	0f be       	out	0x3f, r0	; 63
    1f42:	cd bf       	out	0x3d, r28	; 61
    1f44:	df 91       	pop	r29
    1f46:	cf 91       	pop	r28
    1f48:	08 95       	ret

00001f4a <spi_init>:
    1f4a:	80 eb       	ldi	r24, 0xB0	; 176
    1f4c:	87 bb       	out	0x17, r24	; 23
    1f4e:	81 e5       	ldi	r24, 0x51	; 81
    1f50:	8d b9       	out	0x0d, r24	; 13
    1f52:	c4 9a       	sbi	0x18, 4	; 24
    1f54:	c2 9a       	sbi	0x18, 2	; 24
    1f56:	08 95       	ret

00001f58 <spi_send>:
    1f58:	8f b9       	out	0x0f, r24	; 15
    1f5a:	77 9b       	sbis	0x0e, 7	; 14
    1f5c:	fe cf       	rjmp	.-4      	; 0x1f5a <spi_send+0x2>
    1f5e:	08 95       	ret

00001f60 <spi_read>:
    1f60:	85 e4       	ldi	r24, 0x45	; 69
    1f62:	8f b9       	out	0x0f, r24	; 15
    1f64:	77 9b       	sbis	0x0e, 7	; 14
    1f66:	fe cf       	rjmp	.-4      	; 0x1f64 <spi_read+0x4>
    1f68:	8f b1       	in	r24, 0x0f	; 15
    1f6a:	08 95       	ret

00001f6c <timer_init>:
static int mseconds = 0;
static uint8_t control;

void timer_init(void){
	
	cli();
    1f6c:	f8 94       	cli
	counter = 0;
    1f6e:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <counter+0x1>
    1f72:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <counter>
	seconds = 0;
    1f76:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <seconds+0x1>
    1f7a:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <seconds>
	mseconds = 0;
    1f7e:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <mseconds+0x1>
    1f82:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <mseconds>
	TCCR0 |= (1<<CS02);
    1f86:	83 b7       	in	r24, 0x33	; 51
    1f88:	84 60       	ori	r24, 0x04	; 4
    1f8a:	83 bf       	out	0x33, r24	; 51
	
	
	TCCR0 |= (1<<WGM01); //Set mode to 'Clear Timer on Compare'
    1f8c:	83 b7       	in	r24, 0x33	; 51
    1f8e:	88 60       	ori	r24, 0x08	; 8
    1f90:	83 bf       	out	0x33, r24	; 51
	TCCR0 &= ~(1<<WGM00);
    1f92:	83 b7       	in	r24, 0x33	; 51
    1f94:	8f 7b       	andi	r24, 0xBF	; 191
    1f96:	83 bf       	out	0x33, r24	; 51
	
	int8_t counterVal = 192; //set the number that counter stops and creates interrupt at.
	OCR0 |= counterVal;
    1f98:	81 b7       	in	r24, 0x31	; 49
    1f9a:	80 6c       	ori	r24, 0xC0	; 192
    1f9c:	81 bf       	out	0x31, r24	; 49

	TIMSK |= (1<< OCIE0); //Enable interrupt by Output Compare
    1f9e:	89 b7       	in	r24, 0x39	; 57
    1fa0:	81 60       	ori	r24, 0x01	; 1
    1fa2:	89 bf       	out	0x39, r24	; 57
	sei();
    1fa4:	78 94       	sei
    1fa6:	08 95       	ret

00001fa8 <timer_get_seconds>:
}

int timer_get_seconds(void){
	return seconds;
}
    1fa8:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <seconds>
    1fac:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <seconds+0x1>
    1fb0:	08 95       	ret

00001fb2 <timer_get_mseconds>:

int timer_get_mseconds(void){
	return mseconds;
}
    1fb2:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <mseconds>
    1fb6:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <mseconds+0x1>
    1fba:	08 95       	ret

00001fbc <__vector_16>:

ISR(TIMER0_COMP_vect){
    1fbc:	1f 92       	push	r1
    1fbe:	0f 92       	push	r0
    1fc0:	0f b6       	in	r0, 0x3f	; 63
    1fc2:	0f 92       	push	r0
    1fc4:	11 24       	eor	r1, r1
    1fc6:	2f 93       	push	r18
    1fc8:	3f 93       	push	r19
    1fca:	4f 93       	push	r20
    1fcc:	5f 93       	push	r21
    1fce:	6f 93       	push	r22
    1fd0:	7f 93       	push	r23
    1fd2:	8f 93       	push	r24
    1fd4:	9f 93       	push	r25
    1fd6:	af 93       	push	r26
    1fd8:	bf 93       	push	r27
    1fda:	ef 93       	push	r30
    1fdc:	ff 93       	push	r31
	
	counter++;
    1fde:	20 91 c0 01 	lds	r18, 0x01C0	; 0x8001c0 <counter>
    1fe2:	30 91 c1 01 	lds	r19, 0x01C1	; 0x8001c1 <counter+0x1>
    1fe6:	2f 5f       	subi	r18, 0xFF	; 255
    1fe8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fea:	30 93 c1 01 	sts	0x01C1, r19	; 0x8001c1 <counter+0x1>
    1fee:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <counter>
	if(counter%10 == 0){
    1ff2:	c9 01       	movw	r24, r18
    1ff4:	6a e0       	ldi	r22, 0x0A	; 10
    1ff6:	70 e0       	ldi	r23, 0x00	; 0
    1ff8:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    1ffc:	89 2b       	or	r24, r25
    1ffe:	a9 f5       	brne	.+106    	; 0x206a <__vector_16+0xae>
		mseconds++;
    2000:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <mseconds>
    2004:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <mseconds+0x1>
    2008:	01 96       	adiw	r24, 0x01	; 1
    200a:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <mseconds+0x1>
    200e:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <mseconds>
		
		if(counter%100 == 0){
    2012:	c9 01       	movw	r24, r18
    2014:	64 e6       	ldi	r22, 0x64	; 100
    2016:	70 e0       	ldi	r23, 0x00	; 0
    2018:	0e 94 81 11 	call	0x2302	; 0x2302 <__divmodhi4>
    201c:	89 2b       	or	r24, r25
    201e:	69 f4       	brne	.+26     	; 0x203a <__vector_16+0x7e>
			seconds++;
    2020:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <seconds>
    2024:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <seconds+0x1>
    2028:	01 96       	adiw	r24, 0x01	; 1
    202a:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <seconds+0x1>
    202e:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <seconds>
			mseconds = 0;
    2032:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <mseconds+0x1>
    2036:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <mseconds>
		}
		printf("Time: %d,%d \n\r", seconds, mseconds);
    203a:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <mseconds+0x1>
    203e:	8f 93       	push	r24
    2040:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <mseconds>
    2044:	8f 93       	push	r24
    2046:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <seconds+0x1>
    204a:	8f 93       	push	r24
    204c:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <seconds>
    2050:	8f 93       	push	r24
    2052:	89 e7       	ldi	r24, 0x79	; 121
    2054:	91 e0       	ldi	r25, 0x01	; 1
    2056:	9f 93       	push	r25
    2058:	8f 93       	push	r24
    205a:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
    205e:	0f 90       	pop	r0
    2060:	0f 90       	pop	r0
    2062:	0f 90       	pop	r0
    2064:	0f 90       	pop	r0
    2066:	0f 90       	pop	r0
    2068:	0f 90       	pop	r0
	}
}
    206a:	ff 91       	pop	r31
    206c:	ef 91       	pop	r30
    206e:	bf 91       	pop	r27
    2070:	af 91       	pop	r26
    2072:	9f 91       	pop	r25
    2074:	8f 91       	pop	r24
    2076:	7f 91       	pop	r23
    2078:	6f 91       	pop	r22
    207a:	5f 91       	pop	r21
    207c:	4f 91       	pop	r20
    207e:	3f 91       	pop	r19
    2080:	2f 91       	pop	r18
    2082:	0f 90       	pop	r0
    2084:	0f be       	out	0x3f, r0	; 63
    2086:	0f 90       	pop	r0
    2088:	1f 90       	pop	r1
    208a:	18 95       	reti

0000208c <timer2_init>:

void timer2_init(void){
	cli();
    208c:	f8 94       	cli
	TCCR2 = 0;
    208e:	17 bc       	out	0x27, r1	; 39
	TCCR2 |= (1 << CS22) | (1 << CS21) | (1 << CS20); //Clock selection. MCK/1024 = 4,8 KHz
    2090:	87 b5       	in	r24, 0x27	; 39
    2092:	87 60       	ori	r24, 0x07	; 7
    2094:	87 bd       	out	0x27, r24	; 39
	
	int8_t counterVal = 255; //set the number that counter stops and creates interrupt at.
	OCR2 |= counterVal;
    2096:	82 b5       	in	r24, 0x22	; 34
    2098:	8f ef       	ldi	r24, 0xFF	; 255
    209a:	82 bd       	out	0x22, r24	; 34
	
	TCCR2 |= (1 << WGM21); //Mode of operation: Clear Timer on Compare
    209c:	87 b5       	in	r24, 0x27	; 39
    209e:	88 60       	ori	r24, 0x08	; 8
    20a0:	87 bd       	out	0x27, r24	; 39
	TCCR2 &= ~(1 << WGM20);
    20a2:	87 b5       	in	r24, 0x27	; 39
    20a4:	8f 7b       	andi	r24, 0xBF	; 191
    20a6:	87 bd       	out	0x27, r24	; 39
	
	TIMSK |= (1 << OCIE2); //Enable interrupts on Output Compare event
    20a8:	89 b7       	in	r24, 0x39	; 57
    20aa:	80 61       	ori	r24, 0x10	; 16
    20ac:	89 bf       	out	0x39, r24	; 57
	sei();
    20ae:	78 94       	sei
    20b0:	08 95       	ret

000020b2 <timer2_stop>:
}

void timer2_stop(void){
	TCCR2 &= ~((1 << CS22) | (1 << CS21)); //Stop timer
    20b2:	87 b5       	in	r24, 0x27	; 39
    20b4:	89 7f       	andi	r24, 0xF9	; 249
    20b6:	87 bd       	out	0x27, r24	; 39
	TCNT2 = 0;
    20b8:	13 bc       	out	0x23, r1	; 35
	
	TIMSK &= ~(1 << OCIE2);
    20ba:	89 b7       	in	r24, 0x39	; 57
    20bc:	8f 7e       	andi	r24, 0xEF	; 239
    20be:	89 bf       	out	0x39, r24	; 57
    20c0:	08 95       	ret

000020c2 <timer2_start>:
}

void timer2_start(void){
	TCCR2 |= (1 << CS22) | (1 << CS21) | (1 << CS20); //Clock selection. MCK/1024 = 4,8 KHz
    20c2:	87 b5       	in	r24, 0x27	; 39
    20c4:	87 60       	ori	r24, 0x07	; 7
    20c6:	87 bd       	out	0x27, r24	; 39
	TIMSK |= (1 << OCIE2);
    20c8:	89 b7       	in	r24, 0x39	; 57
    20ca:	80 61       	ori	r24, 0x10	; 16
    20cc:	89 bf       	out	0x39, r24	; 57
    20ce:	08 95       	ret

000020d0 <timer2_set_ctrl>:
}

void timer2_set_ctrl(uint8_t ctrl){
	control = ctrl;
    20d0:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <control>
    20d4:	08 95       	ret

000020d6 <__vector_10>:
}

ISR(TIMER2_COMP_vect){
    20d6:	1f 92       	push	r1
    20d8:	0f 92       	push	r0
    20da:	0f b6       	in	r0, 0x3f	; 63
    20dc:	0f 92       	push	r0
    20de:	11 24       	eor	r1, r1
    20e0:	2f 93       	push	r18
    20e2:	3f 93       	push	r19
    20e4:	4f 93       	push	r20
    20e6:	5f 93       	push	r21
    20e8:	6f 93       	push	r22
    20ea:	7f 93       	push	r23
    20ec:	8f 93       	push	r24
    20ee:	9f 93       	push	r25
    20f0:	af 93       	push	r26
    20f2:	bf 93       	push	r27
    20f4:	ef 93       	push	r30
    20f6:	ff 93       	push	r31
	if(control){
    20f8:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <control>
    20fc:	88 23       	and	r24, r24
    20fe:	29 f0       	breq	.+10     	; 0x210a <__vector_10+0x34>
		slider_sendPositionButtonCan(slider_getPosition());
    2100:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <slider_getPosition>
    2104:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <slider_sendPositionButtonCan>
    2108:	04 c0       	rjmp	.+8      	; 0x2112 <__vector_10+0x3c>
		
	}
	else if(!control){
		joystick_sendPositionButtonCan(joystick_getPosition());
    210a:	0e 94 40 07 	call	0xe80	; 0xe80 <joystick_getPosition>
    210e:	0e 94 d6 07 	call	0xfac	; 0xfac <joystick_sendPositionButtonCan>
	}
	else {
		printf("XMEM error");
	}
    2112:	ff 91       	pop	r31
    2114:	ef 91       	pop	r30
    2116:	bf 91       	pop	r27
    2118:	af 91       	pop	r26
    211a:	9f 91       	pop	r25
    211c:	8f 91       	pop	r24
    211e:	7f 91       	pop	r23
    2120:	6f 91       	pop	r22
    2122:	5f 91       	pop	r21
    2124:	4f 91       	pop	r20
    2126:	3f 91       	pop	r19
    2128:	2f 91       	pop	r18
    212a:	0f 90       	pop	r0
    212c:	0f be       	out	0x3f, r0	; 63
    212e:	0f 90       	pop	r0
    2130:	1f 90       	pop	r1
    2132:	18 95       	reti

00002134 <USART_Init>:
    2134:	90 bd       	out	0x20, r25	; 32
    2136:	89 b9       	out	0x09, r24	; 9
    2138:	88 e1       	ldi	r24, 0x18	; 24
    213a:	8a b9       	out	0x0a, r24	; 10
    213c:	8e e8       	ldi	r24, 0x8E	; 142
    213e:	80 bd       	out	0x20, r24	; 32
    2140:	60 e0       	ldi	r22, 0x00	; 0
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	8b ea       	ldi	r24, 0xAB	; 171
    2146:	90 e1       	ldi	r25, 0x10	; 16
    2148:	0e 94 ab 13 	call	0x2756	; 0x2756 <fdevopen>
    214c:	08 95       	ret

0000214e <USART_Transmit>:
    214e:	5d 9b       	sbis	0x0b, 5	; 11
    2150:	fe cf       	rjmp	.-4      	; 0x214e <USART_Transmit>
    2152:	8c b9       	out	0x0c, r24	; 12
    2154:	08 95       	ret

00002156 <USART_PUTCHAR>:
    2156:	0e 94 a7 10 	call	0x214e	; 0x214e <USART_Transmit>
    215a:	80 e0       	ldi	r24, 0x00	; 0
    215c:	90 e0       	ldi	r25, 0x00	; 0
    215e:	08 95       	ret

00002160 <xmem_init>:
#include <avr/io.h>
#include "DRIVER_XMEM.h"


void xmem_init(void){
	MCUCR |= (1 << SRE); //enable XMEM
    2160:	85 b7       	in	r24, 0x35	; 53
    2162:	80 68       	ori	r24, 0x80	; 128
    2164:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //Mask unused bits/pins, which is PC4-PC7
    2166:	80 b7       	in	r24, 0x30	; 48
    2168:	80 62       	ori	r24, 0x20	; 32
    216a:	80 bf       	out	0x30, r24	; 48
    216c:	08 95       	ret

0000216e <xmem_write>:
}

void xmem_write(uint8_t data, uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	ext_mem[addr] = data;
    216e:	fb 01       	movw	r30, r22
    2170:	f0 5f       	subi	r31, 0xF0	; 240
    2172:	80 83       	st	Z, r24
    2174:	08 95       	ret

00002176 <xmem_read>:
}

uint8_t xmem_read(uint16_t addr){
	volatile char *ext_mem = (char *) 0x1000;
	uint8_t ret_val = ext_mem[addr];
    2176:	90 5f       	subi	r25, 0xF0	; 240
    2178:	fc 01       	movw	r30, r24
    217a:	80 81       	ld	r24, Z
	return ret_val;
}
    217c:	08 95       	ret

0000217e <mcp_read>:
    217e:	cf 93       	push	r28
    2180:	c8 2f       	mov	r28, r24
    2182:	c4 98       	cbi	0x18, 4	; 24
    2184:	83 e0       	ldi	r24, 0x03	; 3
    2186:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    218a:	8c 2f       	mov	r24, r28
    218c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    2190:	0e 94 b0 0f 	call	0x1f60	; 0x1f60 <spi_read>
    2194:	c4 9a       	sbi	0x18, 4	; 24
    2196:	cf 91       	pop	r28
    2198:	08 95       	ret

0000219a <mcp_write>:
    219a:	cf 93       	push	r28
    219c:	df 93       	push	r29
    219e:	d8 2f       	mov	r29, r24
    21a0:	c6 2f       	mov	r28, r22
    21a2:	c4 98       	cbi	0x18, 4	; 24
    21a4:	82 e0       	ldi	r24, 0x02	; 2
    21a6:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21aa:	8d 2f       	mov	r24, r29
    21ac:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21b0:	8c 2f       	mov	r24, r28
    21b2:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21b6:	c4 9a       	sbi	0x18, 4	; 24
    21b8:	df 91       	pop	r29
    21ba:	cf 91       	pop	r28
    21bc:	08 95       	ret

000021be <mcp_req_to_send>:
    21be:	c4 98       	cbi	0x18, 4	; 24
    21c0:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21c4:	c4 9a       	sbi	0x18, 4	; 24
    21c6:	08 95       	ret

000021c8 <mcp_bit_modify>:
    21c8:	1f 93       	push	r17
    21ca:	cf 93       	push	r28
    21cc:	df 93       	push	r29
    21ce:	18 2f       	mov	r17, r24
    21d0:	d6 2f       	mov	r29, r22
    21d2:	c4 2f       	mov	r28, r20
    21d4:	c4 98       	cbi	0x18, 4	; 24
    21d6:	85 e0       	ldi	r24, 0x05	; 5
    21d8:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21dc:	81 2f       	mov	r24, r17
    21de:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21e2:	8d 2f       	mov	r24, r29
    21e4:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21e8:	8c 2f       	mov	r24, r28
    21ea:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    21ee:	c4 9a       	sbi	0x18, 4	; 24
    21f0:	df 91       	pop	r29
    21f2:	cf 91       	pop	r28
    21f4:	1f 91       	pop	r17
    21f6:	08 95       	ret

000021f8 <mcp_reset>:
    21f8:	c4 98       	cbi	0x18, 4	; 24
    21fa:	80 ec       	ldi	r24, 0xC0	; 192
    21fc:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <spi_send>
    2200:	c4 9a       	sbi	0x18, 4	; 24
    2202:	8f e3       	ldi	r24, 0x3F	; 63
    2204:	9c e9       	ldi	r25, 0x9C	; 156
    2206:	01 97       	sbiw	r24, 0x01	; 1
    2208:	f1 f7       	brne	.-4      	; 0x2206 <mcp_reset+0xe>
    220a:	00 c0       	rjmp	.+0      	; 0x220c <mcp_reset+0x14>
    220c:	00 00       	nop
    220e:	08 95       	ret

00002210 <mcp_init>:
    2210:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <spi_init>
    2214:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <mcp_reset>
    2218:	8f e3       	ldi	r24, 0x3F	; 63
    221a:	9f e1       	ldi	r25, 0x1F	; 31
    221c:	01 97       	sbiw	r24, 0x01	; 1
    221e:	f1 f7       	brne	.-4      	; 0x221c <mcp_init+0xc>
    2220:	00 c0       	rjmp	.+0      	; 0x2222 <mcp_init+0x12>
    2222:	00 00       	nop
    2224:	8e e0       	ldi	r24, 0x0E	; 14
    2226:	0e 94 bf 10 	call	0x217e	; 0x217e <mcp_read>
    222a:	98 2f       	mov	r25, r24
    222c:	90 7e       	andi	r25, 0xE0	; 224
    222e:	90 38       	cpi	r25, 0x80	; 128
    2230:	61 f0       	breq	.+24     	; 0x224a <mcp_init+0x3a>
    2232:	1f 92       	push	r1
    2234:	8f 93       	push	r24
    2236:	88 e8       	ldi	r24, 0x88	; 136
    2238:	91 e0       	ldi	r25, 0x01	; 1
    223a:	9f 93       	push	r25
    223c:	8f 93       	push	r24
    223e:	0e 94 f6 13 	call	0x27ec	; 0x27ec <printf>
    2242:	0f 90       	pop	r0
    2244:	0f 90       	pop	r0
    2246:	0f 90       	pop	r0
    2248:	0f 90       	pop	r0
    224a:	08 95       	ret

0000224c <main>:
    224c:	8f e1       	ldi	r24, 0x1F	; 31
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	0e 94 9a 10 	call	0x2134	; 0x2134 <USART_Init>
    2254:	0e 94 b0 10 	call	0x2160	; 0x2160 <xmem_init>
    2258:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <oled_init>
    225c:	0e 94 b1 09 	call	0x1362	; 0x1362 <menu_init>
    2260:	0e 94 59 06 	call	0xcb2	; 0xcb2 <adc_init>
    2264:	0e 94 f0 06 	call	0xde0	; 0xde0 <joystick_calibrate>
    2268:	0e 94 75 06 	call	0xcea	; 0xcea <can_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    226c:	85 e0       	ldi	r24, 0x05	; 5
    226e:	8a 95       	dec	r24
    2270:	f1 f7       	brne	.-4      	; 0x226e <main+0x22>
    2272:	00 00       	nop
    2274:	0e 94 1c 0a 	call	0x1438	; 0x1438 <navigate>
    2278:	f9 cf       	rjmp	.-14     	; 0x226c <main+0x20>

0000227a <util_sort>:
    227a:	cf 93       	push	r28
    227c:	df 93       	push	r29
    227e:	eb 01       	movw	r28, r22
    2280:	21 97       	sbiw	r28, 0x01	; 1
    2282:	1c 16       	cp	r1, r28
    2284:	1d 06       	cpc	r1, r29
    2286:	14 f5       	brge	.+68     	; 0x22cc <util_sort+0x52>
    2288:	61 50       	subi	r22, 0x01	; 1
    228a:	70 48       	sbci	r23, 0x80	; 128
    228c:	66 0f       	add	r22, r22
    228e:	77 1f       	adc	r23, r23
    2290:	68 0f       	add	r22, r24
    2292:	79 1f       	adc	r23, r25
    2294:	17 c0       	rjmp	.+46     	; 0x22c4 <util_sort+0x4a>
    2296:	fc 01       	movw	r30, r24
    2298:	21 91       	ld	r18, Z+
    229a:	31 91       	ld	r19, Z+
    229c:	40 81       	ld	r20, Z
    229e:	51 81       	ldd	r21, Z+1	; 0x01
    22a0:	42 17       	cp	r20, r18
    22a2:	53 07       	cpc	r21, r19
    22a4:	34 f4       	brge	.+12     	; 0x22b2 <util_sort+0x38>
    22a6:	df 01       	movw	r26, r30
    22a8:	12 97       	sbiw	r26, 0x02	; 2
    22aa:	4d 93       	st	X+, r20
    22ac:	5c 93       	st	X, r21
    22ae:	31 83       	std	Z+1, r19	; 0x01
    22b0:	20 83       	st	Z, r18
    22b2:	e6 17       	cp	r30, r22
    22b4:	f7 07       	cpc	r31, r23
    22b6:	81 f7       	brne	.-32     	; 0x2298 <util_sort+0x1e>
    22b8:	21 97       	sbiw	r28, 0x01	; 1
    22ba:	62 50       	subi	r22, 0x02	; 2
    22bc:	71 09       	sbc	r23, r1
    22be:	68 17       	cp	r22, r24
    22c0:	79 07       	cpc	r23, r25
    22c2:	21 f0       	breq	.+8      	; 0x22cc <util_sort+0x52>
    22c4:	1c 16       	cp	r1, r28
    22c6:	1d 06       	cpc	r1, r29
    22c8:	34 f3       	brlt	.-52     	; 0x2296 <util_sort+0x1c>
    22ca:	f6 cf       	rjmp	.-20     	; 0x22b8 <util_sort+0x3e>
    22cc:	df 91       	pop	r29
    22ce:	cf 91       	pop	r28
    22d0:	08 95       	ret

000022d2 <util_median>:
    22d2:	0f 93       	push	r16
    22d4:	1f 93       	push	r17
    22d6:	cf 93       	push	r28
    22d8:	df 93       	push	r29
    22da:	8c 01       	movw	r16, r24
    22dc:	eb 01       	movw	r28, r22
    22de:	0e 94 3d 11 	call	0x227a	; 0x227a <util_sort>
    22e2:	21 96       	adiw	r28, 0x01	; 1
    22e4:	ce 01       	movw	r24, r28
    22e6:	0a f4       	brpl	.+2      	; 0x22ea <util_median+0x18>
    22e8:	01 96       	adiw	r24, 0x01	; 1
    22ea:	fc 01       	movw	r30, r24
    22ec:	ee 7f       	andi	r30, 0xFE	; 254
    22ee:	32 97       	sbiw	r30, 0x02	; 2
    22f0:	e0 0f       	add	r30, r16
    22f2:	f1 1f       	adc	r31, r17
    22f4:	80 81       	ld	r24, Z
    22f6:	91 81       	ldd	r25, Z+1	; 0x01
    22f8:	df 91       	pop	r29
    22fa:	cf 91       	pop	r28
    22fc:	1f 91       	pop	r17
    22fe:	0f 91       	pop	r16
    2300:	08 95       	ret

00002302 <__divmodhi4>:
    2302:	97 fb       	bst	r25, 7
    2304:	07 2e       	mov	r0, r23
    2306:	16 f4       	brtc	.+4      	; 0x230c <__divmodhi4+0xa>
    2308:	00 94       	com	r0
    230a:	07 d0       	rcall	.+14     	; 0x231a <__divmodhi4_neg1>
    230c:	77 fd       	sbrc	r23, 7
    230e:	09 d0       	rcall	.+18     	; 0x2322 <__divmodhi4_neg2>
    2310:	0e 94 95 11 	call	0x232a	; 0x232a <__udivmodhi4>
    2314:	07 fc       	sbrc	r0, 7
    2316:	05 d0       	rcall	.+10     	; 0x2322 <__divmodhi4_neg2>
    2318:	3e f4       	brtc	.+14     	; 0x2328 <__divmodhi4_exit>

0000231a <__divmodhi4_neg1>:
    231a:	90 95       	com	r25
    231c:	81 95       	neg	r24
    231e:	9f 4f       	sbci	r25, 0xFF	; 255
    2320:	08 95       	ret

00002322 <__divmodhi4_neg2>:
    2322:	70 95       	com	r23
    2324:	61 95       	neg	r22
    2326:	7f 4f       	sbci	r23, 0xFF	; 255

00002328 <__divmodhi4_exit>:
    2328:	08 95       	ret

0000232a <__udivmodhi4>:
    232a:	aa 1b       	sub	r26, r26
    232c:	bb 1b       	sub	r27, r27
    232e:	51 e1       	ldi	r21, 0x11	; 17
    2330:	07 c0       	rjmp	.+14     	; 0x2340 <__udivmodhi4_ep>

00002332 <__udivmodhi4_loop>:
    2332:	aa 1f       	adc	r26, r26
    2334:	bb 1f       	adc	r27, r27
    2336:	a6 17       	cp	r26, r22
    2338:	b7 07       	cpc	r27, r23
    233a:	10 f0       	brcs	.+4      	; 0x2340 <__udivmodhi4_ep>
    233c:	a6 1b       	sub	r26, r22
    233e:	b7 0b       	sbc	r27, r23

00002340 <__udivmodhi4_ep>:
    2340:	88 1f       	adc	r24, r24
    2342:	99 1f       	adc	r25, r25
    2344:	5a 95       	dec	r21
    2346:	a9 f7       	brne	.-22     	; 0x2332 <__udivmodhi4_loop>
    2348:	80 95       	com	r24
    234a:	90 95       	com	r25
    234c:	bc 01       	movw	r22, r24
    234e:	cd 01       	movw	r24, r26
    2350:	08 95       	ret

00002352 <malloc>:
    2352:	0f 93       	push	r16
    2354:	1f 93       	push	r17
    2356:	cf 93       	push	r28
    2358:	df 93       	push	r29
    235a:	82 30       	cpi	r24, 0x02	; 2
    235c:	91 05       	cpc	r25, r1
    235e:	10 f4       	brcc	.+4      	; 0x2364 <malloc+0x12>
    2360:	82 e0       	ldi	r24, 0x02	; 2
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <__flp>
    2368:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <__flp+0x1>
    236c:	20 e0       	ldi	r18, 0x00	; 0
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	a0 e0       	ldi	r26, 0x00	; 0
    2372:	b0 e0       	ldi	r27, 0x00	; 0
    2374:	30 97       	sbiw	r30, 0x00	; 0
    2376:	19 f1       	breq	.+70     	; 0x23be <malloc+0x6c>
    2378:	40 81       	ld	r20, Z
    237a:	51 81       	ldd	r21, Z+1	; 0x01
    237c:	02 81       	ldd	r16, Z+2	; 0x02
    237e:	13 81       	ldd	r17, Z+3	; 0x03
    2380:	48 17       	cp	r20, r24
    2382:	59 07       	cpc	r21, r25
    2384:	c8 f0       	brcs	.+50     	; 0x23b8 <malloc+0x66>
    2386:	84 17       	cp	r24, r20
    2388:	95 07       	cpc	r25, r21
    238a:	69 f4       	brne	.+26     	; 0x23a6 <malloc+0x54>
    238c:	10 97       	sbiw	r26, 0x00	; 0
    238e:	31 f0       	breq	.+12     	; 0x239c <malloc+0x4a>
    2390:	12 96       	adiw	r26, 0x02	; 2
    2392:	0c 93       	st	X, r16
    2394:	12 97       	sbiw	r26, 0x02	; 2
    2396:	13 96       	adiw	r26, 0x03	; 3
    2398:	1c 93       	st	X, r17
    239a:	27 c0       	rjmp	.+78     	; 0x23ea <malloc+0x98>
    239c:	00 93 cc 01 	sts	0x01CC, r16	; 0x8001cc <__flp>
    23a0:	10 93 cd 01 	sts	0x01CD, r17	; 0x8001cd <__flp+0x1>
    23a4:	22 c0       	rjmp	.+68     	; 0x23ea <malloc+0x98>
    23a6:	21 15       	cp	r18, r1
    23a8:	31 05       	cpc	r19, r1
    23aa:	19 f0       	breq	.+6      	; 0x23b2 <malloc+0x60>
    23ac:	42 17       	cp	r20, r18
    23ae:	53 07       	cpc	r21, r19
    23b0:	18 f4       	brcc	.+6      	; 0x23b8 <malloc+0x66>
    23b2:	9a 01       	movw	r18, r20
    23b4:	bd 01       	movw	r22, r26
    23b6:	ef 01       	movw	r28, r30
    23b8:	df 01       	movw	r26, r30
    23ba:	f8 01       	movw	r30, r16
    23bc:	db cf       	rjmp	.-74     	; 0x2374 <malloc+0x22>
    23be:	21 15       	cp	r18, r1
    23c0:	31 05       	cpc	r19, r1
    23c2:	f9 f0       	breq	.+62     	; 0x2402 <malloc+0xb0>
    23c4:	28 1b       	sub	r18, r24
    23c6:	39 0b       	sbc	r19, r25
    23c8:	24 30       	cpi	r18, 0x04	; 4
    23ca:	31 05       	cpc	r19, r1
    23cc:	80 f4       	brcc	.+32     	; 0x23ee <malloc+0x9c>
    23ce:	8a 81       	ldd	r24, Y+2	; 0x02
    23d0:	9b 81       	ldd	r25, Y+3	; 0x03
    23d2:	61 15       	cp	r22, r1
    23d4:	71 05       	cpc	r23, r1
    23d6:	21 f0       	breq	.+8      	; 0x23e0 <malloc+0x8e>
    23d8:	fb 01       	movw	r30, r22
    23da:	93 83       	std	Z+3, r25	; 0x03
    23dc:	82 83       	std	Z+2, r24	; 0x02
    23de:	04 c0       	rjmp	.+8      	; 0x23e8 <malloc+0x96>
    23e0:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <__flp+0x1>
    23e4:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <__flp>
    23e8:	fe 01       	movw	r30, r28
    23ea:	32 96       	adiw	r30, 0x02	; 2
    23ec:	44 c0       	rjmp	.+136    	; 0x2476 <malloc+0x124>
    23ee:	fe 01       	movw	r30, r28
    23f0:	e2 0f       	add	r30, r18
    23f2:	f3 1f       	adc	r31, r19
    23f4:	81 93       	st	Z+, r24
    23f6:	91 93       	st	Z+, r25
    23f8:	22 50       	subi	r18, 0x02	; 2
    23fa:	31 09       	sbc	r19, r1
    23fc:	39 83       	std	Y+1, r19	; 0x01
    23fe:	28 83       	st	Y, r18
    2400:	3a c0       	rjmp	.+116    	; 0x2476 <malloc+0x124>
    2402:	20 91 ca 01 	lds	r18, 0x01CA	; 0x8001ca <__brkval>
    2406:	30 91 cb 01 	lds	r19, 0x01CB	; 0x8001cb <__brkval+0x1>
    240a:	23 2b       	or	r18, r19
    240c:	41 f4       	brne	.+16     	; 0x241e <malloc+0xcc>
    240e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2412:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2416:	30 93 cb 01 	sts	0x01CB, r19	; 0x8001cb <__brkval+0x1>
    241a:	20 93 ca 01 	sts	0x01CA, r18	; 0x8001ca <__brkval>
    241e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2422:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    2426:	21 15       	cp	r18, r1
    2428:	31 05       	cpc	r19, r1
    242a:	41 f4       	brne	.+16     	; 0x243c <malloc+0xea>
    242c:	2d b7       	in	r18, 0x3d	; 61
    242e:	3e b7       	in	r19, 0x3e	; 62
    2430:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2434:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2438:	24 1b       	sub	r18, r20
    243a:	35 0b       	sbc	r19, r21
    243c:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <__brkval>
    2440:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <__brkval+0x1>
    2444:	e2 17       	cp	r30, r18
    2446:	f3 07       	cpc	r31, r19
    2448:	a0 f4       	brcc	.+40     	; 0x2472 <malloc+0x120>
    244a:	2e 1b       	sub	r18, r30
    244c:	3f 0b       	sbc	r19, r31
    244e:	28 17       	cp	r18, r24
    2450:	39 07       	cpc	r19, r25
    2452:	78 f0       	brcs	.+30     	; 0x2472 <malloc+0x120>
    2454:	ac 01       	movw	r20, r24
    2456:	4e 5f       	subi	r20, 0xFE	; 254
    2458:	5f 4f       	sbci	r21, 0xFF	; 255
    245a:	24 17       	cp	r18, r20
    245c:	35 07       	cpc	r19, r21
    245e:	48 f0       	brcs	.+18     	; 0x2472 <malloc+0x120>
    2460:	4e 0f       	add	r20, r30
    2462:	5f 1f       	adc	r21, r31
    2464:	50 93 cb 01 	sts	0x01CB, r21	; 0x8001cb <__brkval+0x1>
    2468:	40 93 ca 01 	sts	0x01CA, r20	; 0x8001ca <__brkval>
    246c:	81 93       	st	Z+, r24
    246e:	91 93       	st	Z+, r25
    2470:	02 c0       	rjmp	.+4      	; 0x2476 <malloc+0x124>
    2472:	e0 e0       	ldi	r30, 0x00	; 0
    2474:	f0 e0       	ldi	r31, 0x00	; 0
    2476:	cf 01       	movw	r24, r30
    2478:	df 91       	pop	r29
    247a:	cf 91       	pop	r28
    247c:	1f 91       	pop	r17
    247e:	0f 91       	pop	r16
    2480:	08 95       	ret

00002482 <free>:
    2482:	cf 93       	push	r28
    2484:	df 93       	push	r29
    2486:	00 97       	sbiw	r24, 0x00	; 0
    2488:	09 f4       	brne	.+2      	; 0x248c <free+0xa>
    248a:	81 c0       	rjmp	.+258    	; 0x258e <free+0x10c>
    248c:	fc 01       	movw	r30, r24
    248e:	32 97       	sbiw	r30, 0x02	; 2
    2490:	13 82       	std	Z+3, r1	; 0x03
    2492:	12 82       	std	Z+2, r1	; 0x02
    2494:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <__flp>
    2498:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <__flp+0x1>
    249c:	10 97       	sbiw	r26, 0x00	; 0
    249e:	81 f4       	brne	.+32     	; 0x24c0 <free+0x3e>
    24a0:	20 81       	ld	r18, Z
    24a2:	31 81       	ldd	r19, Z+1	; 0x01
    24a4:	82 0f       	add	r24, r18
    24a6:	93 1f       	adc	r25, r19
    24a8:	20 91 ca 01 	lds	r18, 0x01CA	; 0x8001ca <__brkval>
    24ac:	30 91 cb 01 	lds	r19, 0x01CB	; 0x8001cb <__brkval+0x1>
    24b0:	28 17       	cp	r18, r24
    24b2:	39 07       	cpc	r19, r25
    24b4:	51 f5       	brne	.+84     	; 0x250a <free+0x88>
    24b6:	f0 93 cb 01 	sts	0x01CB, r31	; 0x8001cb <__brkval+0x1>
    24ba:	e0 93 ca 01 	sts	0x01CA, r30	; 0x8001ca <__brkval>
    24be:	67 c0       	rjmp	.+206    	; 0x258e <free+0x10c>
    24c0:	ed 01       	movw	r28, r26
    24c2:	20 e0       	ldi	r18, 0x00	; 0
    24c4:	30 e0       	ldi	r19, 0x00	; 0
    24c6:	ce 17       	cp	r28, r30
    24c8:	df 07       	cpc	r29, r31
    24ca:	40 f4       	brcc	.+16     	; 0x24dc <free+0x5a>
    24cc:	4a 81       	ldd	r20, Y+2	; 0x02
    24ce:	5b 81       	ldd	r21, Y+3	; 0x03
    24d0:	9e 01       	movw	r18, r28
    24d2:	41 15       	cp	r20, r1
    24d4:	51 05       	cpc	r21, r1
    24d6:	f1 f0       	breq	.+60     	; 0x2514 <free+0x92>
    24d8:	ea 01       	movw	r28, r20
    24da:	f5 cf       	rjmp	.-22     	; 0x24c6 <free+0x44>
    24dc:	d3 83       	std	Z+3, r29	; 0x03
    24de:	c2 83       	std	Z+2, r28	; 0x02
    24e0:	40 81       	ld	r20, Z
    24e2:	51 81       	ldd	r21, Z+1	; 0x01
    24e4:	84 0f       	add	r24, r20
    24e6:	95 1f       	adc	r25, r21
    24e8:	c8 17       	cp	r28, r24
    24ea:	d9 07       	cpc	r29, r25
    24ec:	59 f4       	brne	.+22     	; 0x2504 <free+0x82>
    24ee:	88 81       	ld	r24, Y
    24f0:	99 81       	ldd	r25, Y+1	; 0x01
    24f2:	84 0f       	add	r24, r20
    24f4:	95 1f       	adc	r25, r21
    24f6:	02 96       	adiw	r24, 0x02	; 2
    24f8:	91 83       	std	Z+1, r25	; 0x01
    24fa:	80 83       	st	Z, r24
    24fc:	8a 81       	ldd	r24, Y+2	; 0x02
    24fe:	9b 81       	ldd	r25, Y+3	; 0x03
    2500:	93 83       	std	Z+3, r25	; 0x03
    2502:	82 83       	std	Z+2, r24	; 0x02
    2504:	21 15       	cp	r18, r1
    2506:	31 05       	cpc	r19, r1
    2508:	29 f4       	brne	.+10     	; 0x2514 <free+0x92>
    250a:	f0 93 cd 01 	sts	0x01CD, r31	; 0x8001cd <__flp+0x1>
    250e:	e0 93 cc 01 	sts	0x01CC, r30	; 0x8001cc <__flp>
    2512:	3d c0       	rjmp	.+122    	; 0x258e <free+0x10c>
    2514:	e9 01       	movw	r28, r18
    2516:	fb 83       	std	Y+3, r31	; 0x03
    2518:	ea 83       	std	Y+2, r30	; 0x02
    251a:	49 91       	ld	r20, Y+
    251c:	59 91       	ld	r21, Y+
    251e:	c4 0f       	add	r28, r20
    2520:	d5 1f       	adc	r29, r21
    2522:	ec 17       	cp	r30, r28
    2524:	fd 07       	cpc	r31, r29
    2526:	61 f4       	brne	.+24     	; 0x2540 <free+0xbe>
    2528:	80 81       	ld	r24, Z
    252a:	91 81       	ldd	r25, Z+1	; 0x01
    252c:	84 0f       	add	r24, r20
    252e:	95 1f       	adc	r25, r21
    2530:	02 96       	adiw	r24, 0x02	; 2
    2532:	e9 01       	movw	r28, r18
    2534:	99 83       	std	Y+1, r25	; 0x01
    2536:	88 83       	st	Y, r24
    2538:	82 81       	ldd	r24, Z+2	; 0x02
    253a:	93 81       	ldd	r25, Z+3	; 0x03
    253c:	9b 83       	std	Y+3, r25	; 0x03
    253e:	8a 83       	std	Y+2, r24	; 0x02
    2540:	e0 e0       	ldi	r30, 0x00	; 0
    2542:	f0 e0       	ldi	r31, 0x00	; 0
    2544:	12 96       	adiw	r26, 0x02	; 2
    2546:	8d 91       	ld	r24, X+
    2548:	9c 91       	ld	r25, X
    254a:	13 97       	sbiw	r26, 0x03	; 3
    254c:	00 97       	sbiw	r24, 0x00	; 0
    254e:	19 f0       	breq	.+6      	; 0x2556 <free+0xd4>
    2550:	fd 01       	movw	r30, r26
    2552:	dc 01       	movw	r26, r24
    2554:	f7 cf       	rjmp	.-18     	; 0x2544 <free+0xc2>
    2556:	8d 91       	ld	r24, X+
    2558:	9c 91       	ld	r25, X
    255a:	11 97       	sbiw	r26, 0x01	; 1
    255c:	9d 01       	movw	r18, r26
    255e:	2e 5f       	subi	r18, 0xFE	; 254
    2560:	3f 4f       	sbci	r19, 0xFF	; 255
    2562:	82 0f       	add	r24, r18
    2564:	93 1f       	adc	r25, r19
    2566:	20 91 ca 01 	lds	r18, 0x01CA	; 0x8001ca <__brkval>
    256a:	30 91 cb 01 	lds	r19, 0x01CB	; 0x8001cb <__brkval+0x1>
    256e:	28 17       	cp	r18, r24
    2570:	39 07       	cpc	r19, r25
    2572:	69 f4       	brne	.+26     	; 0x258e <free+0x10c>
    2574:	30 97       	sbiw	r30, 0x00	; 0
    2576:	29 f4       	brne	.+10     	; 0x2582 <free+0x100>
    2578:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <__flp+0x1>
    257c:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__flp>
    2580:	02 c0       	rjmp	.+4      	; 0x2586 <free+0x104>
    2582:	13 82       	std	Z+3, r1	; 0x03
    2584:	12 82       	std	Z+2, r1	; 0x02
    2586:	b0 93 cb 01 	sts	0x01CB, r27	; 0x8001cb <__brkval+0x1>
    258a:	a0 93 ca 01 	sts	0x01CA, r26	; 0x8001ca <__brkval>
    258e:	df 91       	pop	r29
    2590:	cf 91       	pop	r28
    2592:	08 95       	ret

00002594 <realloc>:
    2594:	a0 e0       	ldi	r26, 0x00	; 0
    2596:	b0 e0       	ldi	r27, 0x00	; 0
    2598:	e0 ed       	ldi	r30, 0xD0	; 208
    259a:	f2 e1       	ldi	r31, 0x12	; 18
    259c:	0c 94 c4 16 	jmp	0x2d88	; 0x2d88 <__prologue_saves__+0x8>
    25a0:	ec 01       	movw	r28, r24
    25a2:	00 97       	sbiw	r24, 0x00	; 0
    25a4:	21 f4       	brne	.+8      	; 0x25ae <realloc+0x1a>
    25a6:	cb 01       	movw	r24, r22
    25a8:	0e 94 a9 11 	call	0x2352	; 0x2352 <malloc>
    25ac:	b4 c0       	rjmp	.+360    	; 0x2716 <realloc+0x182>
    25ae:	fc 01       	movw	r30, r24
    25b0:	e6 0f       	add	r30, r22
    25b2:	f7 1f       	adc	r31, r23
    25b4:	9c 01       	movw	r18, r24
    25b6:	22 50       	subi	r18, 0x02	; 2
    25b8:	31 09       	sbc	r19, r1
    25ba:	e2 17       	cp	r30, r18
    25bc:	f3 07       	cpc	r31, r19
    25be:	08 f4       	brcc	.+2      	; 0x25c2 <realloc+0x2e>
    25c0:	a8 c0       	rjmp	.+336    	; 0x2712 <realloc+0x17e>
    25c2:	d9 01       	movw	r26, r18
    25c4:	0d 91       	ld	r16, X+
    25c6:	1c 91       	ld	r17, X
    25c8:	11 97       	sbiw	r26, 0x01	; 1
    25ca:	06 17       	cp	r16, r22
    25cc:	17 07       	cpc	r17, r23
    25ce:	b0 f0       	brcs	.+44     	; 0x25fc <realloc+0x68>
    25d0:	05 30       	cpi	r16, 0x05	; 5
    25d2:	11 05       	cpc	r17, r1
    25d4:	08 f4       	brcc	.+2      	; 0x25d8 <realloc+0x44>
    25d6:	9b c0       	rjmp	.+310    	; 0x270e <realloc+0x17a>
    25d8:	c8 01       	movw	r24, r16
    25da:	04 97       	sbiw	r24, 0x04	; 4
    25dc:	86 17       	cp	r24, r22
    25de:	97 07       	cpc	r25, r23
    25e0:	08 f4       	brcc	.+2      	; 0x25e4 <realloc+0x50>
    25e2:	95 c0       	rjmp	.+298    	; 0x270e <realloc+0x17a>
    25e4:	02 50       	subi	r16, 0x02	; 2
    25e6:	11 09       	sbc	r17, r1
    25e8:	06 1b       	sub	r16, r22
    25ea:	17 0b       	sbc	r17, r23
    25ec:	01 93       	st	Z+, r16
    25ee:	11 93       	st	Z+, r17
    25f0:	6d 93       	st	X+, r22
    25f2:	7c 93       	st	X, r23
    25f4:	cf 01       	movw	r24, r30
    25f6:	0e 94 41 12 	call	0x2482	; 0x2482 <free>
    25fa:	89 c0       	rjmp	.+274    	; 0x270e <realloc+0x17a>
    25fc:	5b 01       	movw	r10, r22
    25fe:	a0 1a       	sub	r10, r16
    2600:	b1 0a       	sbc	r11, r17
    2602:	4c 01       	movw	r8, r24
    2604:	80 0e       	add	r8, r16
    2606:	91 1e       	adc	r9, r17
    2608:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <__flp>
    260c:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <__flp+0x1>
    2610:	61 2c       	mov	r6, r1
    2612:	71 2c       	mov	r7, r1
    2614:	e1 2c       	mov	r14, r1
    2616:	f1 2c       	mov	r15, r1
    2618:	10 97       	sbiw	r26, 0x00	; 0
    261a:	09 f4       	brne	.+2      	; 0x261e <realloc+0x8a>
    261c:	46 c0       	rjmp	.+140    	; 0x26aa <realloc+0x116>
    261e:	8d 91       	ld	r24, X+
    2620:	9c 91       	ld	r25, X
    2622:	11 97       	sbiw	r26, 0x01	; 1
    2624:	a8 15       	cp	r26, r8
    2626:	b9 05       	cpc	r27, r9
    2628:	b1 f5       	brne	.+108    	; 0x2696 <realloc+0x102>
    262a:	6c 01       	movw	r12, r24
    262c:	42 e0       	ldi	r20, 0x02	; 2
    262e:	c4 0e       	add	r12, r20
    2630:	d1 1c       	adc	r13, r1
    2632:	ca 14       	cp	r12, r10
    2634:	db 04       	cpc	r13, r11
    2636:	78 f1       	brcs	.+94     	; 0x2696 <realloc+0x102>
    2638:	4c 01       	movw	r8, r24
    263a:	8a 18       	sub	r8, r10
    263c:	9b 08       	sbc	r9, r11
    263e:	64 01       	movw	r12, r8
    2640:	42 e0       	ldi	r20, 0x02	; 2
    2642:	c4 0e       	add	r12, r20
    2644:	d1 1c       	adc	r13, r1
    2646:	12 96       	adiw	r26, 0x02	; 2
    2648:	bc 90       	ld	r11, X
    264a:	12 97       	sbiw	r26, 0x02	; 2
    264c:	13 96       	adiw	r26, 0x03	; 3
    264e:	ac 91       	ld	r26, X
    2650:	b5 e0       	ldi	r27, 0x05	; 5
    2652:	cb 16       	cp	r12, r27
    2654:	d1 04       	cpc	r13, r1
    2656:	40 f0       	brcs	.+16     	; 0x2668 <realloc+0xd4>
    2658:	b2 82       	std	Z+2, r11	; 0x02
    265a:	a3 83       	std	Z+3, r26	; 0x03
    265c:	91 82       	std	Z+1, r9	; 0x01
    265e:	80 82       	st	Z, r8
    2660:	d9 01       	movw	r26, r18
    2662:	6d 93       	st	X+, r22
    2664:	7c 93       	st	X, r23
    2666:	09 c0       	rjmp	.+18     	; 0x267a <realloc+0xe6>
    2668:	0e 5f       	subi	r16, 0xFE	; 254
    266a:	1f 4f       	sbci	r17, 0xFF	; 255
    266c:	80 0f       	add	r24, r16
    266e:	91 1f       	adc	r25, r17
    2670:	f9 01       	movw	r30, r18
    2672:	91 83       	std	Z+1, r25	; 0x01
    2674:	80 83       	st	Z, r24
    2676:	eb 2d       	mov	r30, r11
    2678:	fa 2f       	mov	r31, r26
    267a:	e1 14       	cp	r14, r1
    267c:	f1 04       	cpc	r15, r1
    267e:	31 f0       	breq	.+12     	; 0x268c <realloc+0xf8>
    2680:	d7 01       	movw	r26, r14
    2682:	13 96       	adiw	r26, 0x03	; 3
    2684:	fc 93       	st	X, r31
    2686:	ee 93       	st	-X, r30
    2688:	12 97       	sbiw	r26, 0x02	; 2
    268a:	41 c0       	rjmp	.+130    	; 0x270e <realloc+0x17a>
    268c:	f0 93 cd 01 	sts	0x01CD, r31	; 0x8001cd <__flp+0x1>
    2690:	e0 93 cc 01 	sts	0x01CC, r30	; 0x8001cc <__flp>
    2694:	3c c0       	rjmp	.+120    	; 0x270e <realloc+0x17a>
    2696:	68 16       	cp	r6, r24
    2698:	79 06       	cpc	r7, r25
    269a:	08 f4       	brcc	.+2      	; 0x269e <realloc+0x10a>
    269c:	3c 01       	movw	r6, r24
    269e:	7d 01       	movw	r14, r26
    26a0:	12 96       	adiw	r26, 0x02	; 2
    26a2:	0d 90       	ld	r0, X+
    26a4:	bc 91       	ld	r27, X
    26a6:	a0 2d       	mov	r26, r0
    26a8:	b7 cf       	rjmp	.-146    	; 0x2618 <realloc+0x84>
    26aa:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <__brkval>
    26ae:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <__brkval+0x1>
    26b2:	88 16       	cp	r8, r24
    26b4:	99 06       	cpc	r9, r25
    26b6:	e1 f4       	brne	.+56     	; 0x26f0 <realloc+0x15c>
    26b8:	66 16       	cp	r6, r22
    26ba:	77 06       	cpc	r7, r23
    26bc:	c8 f4       	brcc	.+50     	; 0x26f0 <realloc+0x15c>
    26be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    26c2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    26c6:	00 97       	sbiw	r24, 0x00	; 0
    26c8:	41 f4       	brne	.+16     	; 0x26da <realloc+0x146>
    26ca:	8d b7       	in	r24, 0x3d	; 61
    26cc:	9e b7       	in	r25, 0x3e	; 62
    26ce:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    26d2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    26d6:	84 1b       	sub	r24, r20
    26d8:	95 0b       	sbc	r25, r21
    26da:	e8 17       	cp	r30, r24
    26dc:	f9 07       	cpc	r31, r25
    26de:	c8 f4       	brcc	.+50     	; 0x2712 <realloc+0x17e>
    26e0:	f0 93 cb 01 	sts	0x01CB, r31	; 0x8001cb <__brkval+0x1>
    26e4:	e0 93 ca 01 	sts	0x01CA, r30	; 0x8001ca <__brkval>
    26e8:	f9 01       	movw	r30, r18
    26ea:	71 83       	std	Z+1, r23	; 0x01
    26ec:	60 83       	st	Z, r22
    26ee:	0f c0       	rjmp	.+30     	; 0x270e <realloc+0x17a>
    26f0:	cb 01       	movw	r24, r22
    26f2:	0e 94 a9 11 	call	0x2352	; 0x2352 <malloc>
    26f6:	7c 01       	movw	r14, r24
    26f8:	00 97       	sbiw	r24, 0x00	; 0
    26fa:	59 f0       	breq	.+22     	; 0x2712 <realloc+0x17e>
    26fc:	a8 01       	movw	r20, r16
    26fe:	be 01       	movw	r22, r28
    2700:	0e 94 97 13 	call	0x272e	; 0x272e <memcpy>
    2704:	ce 01       	movw	r24, r28
    2706:	0e 94 41 12 	call	0x2482	; 0x2482 <free>
    270a:	c7 01       	movw	r24, r14
    270c:	04 c0       	rjmp	.+8      	; 0x2716 <realloc+0x182>
    270e:	ce 01       	movw	r24, r28
    2710:	02 c0       	rjmp	.+4      	; 0x2716 <realloc+0x182>
    2712:	80 e0       	ldi	r24, 0x00	; 0
    2714:	90 e0       	ldi	r25, 0x00	; 0
    2716:	cd b7       	in	r28, 0x3d	; 61
    2718:	de b7       	in	r29, 0x3e	; 62
    271a:	ee e0       	ldi	r30, 0x0E	; 14
    271c:	0c 94 e0 16 	jmp	0x2dc0	; 0x2dc0 <__epilogue_restores__+0x8>

00002720 <strcpy_P>:
    2720:	fb 01       	movw	r30, r22
    2722:	dc 01       	movw	r26, r24
    2724:	05 90       	lpm	r0, Z+
    2726:	0d 92       	st	X+, r0
    2728:	00 20       	and	r0, r0
    272a:	e1 f7       	brne	.-8      	; 0x2724 <strcpy_P+0x4>
    272c:	08 95       	ret

0000272e <memcpy>:
    272e:	fb 01       	movw	r30, r22
    2730:	dc 01       	movw	r26, r24
    2732:	02 c0       	rjmp	.+4      	; 0x2738 <memcpy+0xa>
    2734:	01 90       	ld	r0, Z+
    2736:	0d 92       	st	X+, r0
    2738:	41 50       	subi	r20, 0x01	; 1
    273a:	50 40       	sbci	r21, 0x00	; 0
    273c:	d8 f7       	brcc	.-10     	; 0x2734 <memcpy+0x6>
    273e:	08 95       	ret

00002740 <strcat>:
    2740:	fb 01       	movw	r30, r22
    2742:	dc 01       	movw	r26, r24
    2744:	0d 90       	ld	r0, X+
    2746:	00 20       	and	r0, r0
    2748:	e9 f7       	brne	.-6      	; 0x2744 <strcat+0x4>
    274a:	11 97       	sbiw	r26, 0x01	; 1
    274c:	01 90       	ld	r0, Z+
    274e:	0d 92       	st	X+, r0
    2750:	00 20       	and	r0, r0
    2752:	e1 f7       	brne	.-8      	; 0x274c <strcat+0xc>
    2754:	08 95       	ret

00002756 <fdevopen>:
    2756:	0f 93       	push	r16
    2758:	1f 93       	push	r17
    275a:	cf 93       	push	r28
    275c:	df 93       	push	r29
    275e:	00 97       	sbiw	r24, 0x00	; 0
    2760:	31 f4       	brne	.+12     	; 0x276e <fdevopen+0x18>
    2762:	61 15       	cp	r22, r1
    2764:	71 05       	cpc	r23, r1
    2766:	19 f4       	brne	.+6      	; 0x276e <fdevopen+0x18>
    2768:	80 e0       	ldi	r24, 0x00	; 0
    276a:	90 e0       	ldi	r25, 0x00	; 0
    276c:	3a c0       	rjmp	.+116    	; 0x27e2 <fdevopen+0x8c>
    276e:	8b 01       	movw	r16, r22
    2770:	ec 01       	movw	r28, r24
    2772:	6e e0       	ldi	r22, 0x0E	; 14
    2774:	70 e0       	ldi	r23, 0x00	; 0
    2776:	81 e0       	ldi	r24, 0x01	; 1
    2778:	90 e0       	ldi	r25, 0x00	; 0
    277a:	0e 94 ed 15 	call	0x2bda	; 0x2bda <calloc>
    277e:	fc 01       	movw	r30, r24
    2780:	89 2b       	or	r24, r25
    2782:	91 f3       	breq	.-28     	; 0x2768 <fdevopen+0x12>
    2784:	80 e8       	ldi	r24, 0x80	; 128
    2786:	83 83       	std	Z+3, r24	; 0x03
    2788:	01 15       	cp	r16, r1
    278a:	11 05       	cpc	r17, r1
    278c:	71 f0       	breq	.+28     	; 0x27aa <fdevopen+0x54>
    278e:	13 87       	std	Z+11, r17	; 0x0b
    2790:	02 87       	std	Z+10, r16	; 0x0a
    2792:	81 e8       	ldi	r24, 0x81	; 129
    2794:	83 83       	std	Z+3, r24	; 0x03
    2796:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <__iob>
    279a:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <__iob+0x1>
    279e:	89 2b       	or	r24, r25
    27a0:	21 f4       	brne	.+8      	; 0x27aa <fdevopen+0x54>
    27a2:	f0 93 cf 01 	sts	0x01CF, r31	; 0x8001cf <__iob+0x1>
    27a6:	e0 93 ce 01 	sts	0x01CE, r30	; 0x8001ce <__iob>
    27aa:	20 97       	sbiw	r28, 0x00	; 0
    27ac:	c9 f0       	breq	.+50     	; 0x27e0 <fdevopen+0x8a>
    27ae:	d1 87       	std	Z+9, r29	; 0x09
    27b0:	c0 87       	std	Z+8, r28	; 0x08
    27b2:	83 81       	ldd	r24, Z+3	; 0x03
    27b4:	82 60       	ori	r24, 0x02	; 2
    27b6:	83 83       	std	Z+3, r24	; 0x03
    27b8:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__iob+0x2>
    27bc:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <__iob+0x3>
    27c0:	89 2b       	or	r24, r25
    27c2:	71 f4       	brne	.+28     	; 0x27e0 <fdevopen+0x8a>
    27c4:	f0 93 d1 01 	sts	0x01D1, r31	; 0x8001d1 <__iob+0x3>
    27c8:	e0 93 d0 01 	sts	0x01D0, r30	; 0x8001d0 <__iob+0x2>
    27cc:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <__iob+0x4>
    27d0:	90 91 d3 01 	lds	r25, 0x01D3	; 0x8001d3 <__iob+0x5>
    27d4:	89 2b       	or	r24, r25
    27d6:	21 f4       	brne	.+8      	; 0x27e0 <fdevopen+0x8a>
    27d8:	f0 93 d3 01 	sts	0x01D3, r31	; 0x8001d3 <__iob+0x5>
    27dc:	e0 93 d2 01 	sts	0x01D2, r30	; 0x8001d2 <__iob+0x4>
    27e0:	cf 01       	movw	r24, r30
    27e2:	df 91       	pop	r29
    27e4:	cf 91       	pop	r28
    27e6:	1f 91       	pop	r17
    27e8:	0f 91       	pop	r16
    27ea:	08 95       	ret

000027ec <printf>:
    27ec:	a0 e0       	ldi	r26, 0x00	; 0
    27ee:	b0 e0       	ldi	r27, 0x00	; 0
    27f0:	ec ef       	ldi	r30, 0xFC	; 252
    27f2:	f3 e1       	ldi	r31, 0x13	; 19
    27f4:	0c 94 d0 16 	jmp	0x2da0	; 0x2da0 <__prologue_saves__+0x20>
    27f8:	ae 01       	movw	r20, r28
    27fa:	4b 5f       	subi	r20, 0xFB	; 251
    27fc:	5f 4f       	sbci	r21, 0xFF	; 255
    27fe:	fa 01       	movw	r30, r20
    2800:	61 91       	ld	r22, Z+
    2802:	71 91       	ld	r23, Z+
    2804:	af 01       	movw	r20, r30
    2806:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__iob+0x2>
    280a:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <__iob+0x3>
    280e:	0e 94 0c 14 	call	0x2818	; 0x2818 <vfprintf>
    2812:	e2 e0       	ldi	r30, 0x02	; 2
    2814:	0c 94 ec 16 	jmp	0x2dd8	; 0x2dd8 <__epilogue_restores__+0x20>

00002818 <vfprintf>:
    2818:	ab e0       	ldi	r26, 0x0B	; 11
    281a:	b0 e0       	ldi	r27, 0x00	; 0
    281c:	e2 e1       	ldi	r30, 0x12	; 18
    281e:	f4 e1       	ldi	r31, 0x14	; 20
    2820:	0c 94 c0 16 	jmp	0x2d80	; 0x2d80 <__prologue_saves__>
    2824:	6c 01       	movw	r12, r24
    2826:	7b 01       	movw	r14, r22
    2828:	8a 01       	movw	r16, r20
    282a:	fc 01       	movw	r30, r24
    282c:	17 82       	std	Z+7, r1	; 0x07
    282e:	16 82       	std	Z+6, r1	; 0x06
    2830:	83 81       	ldd	r24, Z+3	; 0x03
    2832:	81 ff       	sbrs	r24, 1
    2834:	cc c1       	rjmp	.+920    	; 0x2bce <vfprintf+0x3b6>
    2836:	ce 01       	movw	r24, r28
    2838:	01 96       	adiw	r24, 0x01	; 1
    283a:	3c 01       	movw	r6, r24
    283c:	f6 01       	movw	r30, r12
    283e:	93 81       	ldd	r25, Z+3	; 0x03
    2840:	f7 01       	movw	r30, r14
    2842:	93 fd       	sbrc	r25, 3
    2844:	85 91       	lpm	r24, Z+
    2846:	93 ff       	sbrs	r25, 3
    2848:	81 91       	ld	r24, Z+
    284a:	7f 01       	movw	r14, r30
    284c:	88 23       	and	r24, r24
    284e:	09 f4       	brne	.+2      	; 0x2852 <vfprintf+0x3a>
    2850:	ba c1       	rjmp	.+884    	; 0x2bc6 <vfprintf+0x3ae>
    2852:	85 32       	cpi	r24, 0x25	; 37
    2854:	39 f4       	brne	.+14     	; 0x2864 <vfprintf+0x4c>
    2856:	93 fd       	sbrc	r25, 3
    2858:	85 91       	lpm	r24, Z+
    285a:	93 ff       	sbrs	r25, 3
    285c:	81 91       	ld	r24, Z+
    285e:	7f 01       	movw	r14, r30
    2860:	85 32       	cpi	r24, 0x25	; 37
    2862:	29 f4       	brne	.+10     	; 0x286e <vfprintf+0x56>
    2864:	b6 01       	movw	r22, r12
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    286c:	e7 cf       	rjmp	.-50     	; 0x283c <vfprintf+0x24>
    286e:	91 2c       	mov	r9, r1
    2870:	21 2c       	mov	r2, r1
    2872:	31 2c       	mov	r3, r1
    2874:	ff e1       	ldi	r31, 0x1F	; 31
    2876:	f3 15       	cp	r31, r3
    2878:	d8 f0       	brcs	.+54     	; 0x28b0 <vfprintf+0x98>
    287a:	8b 32       	cpi	r24, 0x2B	; 43
    287c:	79 f0       	breq	.+30     	; 0x289c <vfprintf+0x84>
    287e:	38 f4       	brcc	.+14     	; 0x288e <vfprintf+0x76>
    2880:	80 32       	cpi	r24, 0x20	; 32
    2882:	79 f0       	breq	.+30     	; 0x28a2 <vfprintf+0x8a>
    2884:	83 32       	cpi	r24, 0x23	; 35
    2886:	a1 f4       	brne	.+40     	; 0x28b0 <vfprintf+0x98>
    2888:	23 2d       	mov	r18, r3
    288a:	20 61       	ori	r18, 0x10	; 16
    288c:	1d c0       	rjmp	.+58     	; 0x28c8 <vfprintf+0xb0>
    288e:	8d 32       	cpi	r24, 0x2D	; 45
    2890:	61 f0       	breq	.+24     	; 0x28aa <vfprintf+0x92>
    2892:	80 33       	cpi	r24, 0x30	; 48
    2894:	69 f4       	brne	.+26     	; 0x28b0 <vfprintf+0x98>
    2896:	23 2d       	mov	r18, r3
    2898:	21 60       	ori	r18, 0x01	; 1
    289a:	16 c0       	rjmp	.+44     	; 0x28c8 <vfprintf+0xb0>
    289c:	83 2d       	mov	r24, r3
    289e:	82 60       	ori	r24, 0x02	; 2
    28a0:	38 2e       	mov	r3, r24
    28a2:	e3 2d       	mov	r30, r3
    28a4:	e4 60       	ori	r30, 0x04	; 4
    28a6:	3e 2e       	mov	r3, r30
    28a8:	2a c0       	rjmp	.+84     	; 0x28fe <vfprintf+0xe6>
    28aa:	f3 2d       	mov	r31, r3
    28ac:	f8 60       	ori	r31, 0x08	; 8
    28ae:	1d c0       	rjmp	.+58     	; 0x28ea <vfprintf+0xd2>
    28b0:	37 fc       	sbrc	r3, 7
    28b2:	2d c0       	rjmp	.+90     	; 0x290e <vfprintf+0xf6>
    28b4:	20 ed       	ldi	r18, 0xD0	; 208
    28b6:	28 0f       	add	r18, r24
    28b8:	2a 30       	cpi	r18, 0x0A	; 10
    28ba:	40 f0       	brcs	.+16     	; 0x28cc <vfprintf+0xb4>
    28bc:	8e 32       	cpi	r24, 0x2E	; 46
    28be:	b9 f4       	brne	.+46     	; 0x28ee <vfprintf+0xd6>
    28c0:	36 fc       	sbrc	r3, 6
    28c2:	81 c1       	rjmp	.+770    	; 0x2bc6 <vfprintf+0x3ae>
    28c4:	23 2d       	mov	r18, r3
    28c6:	20 64       	ori	r18, 0x40	; 64
    28c8:	32 2e       	mov	r3, r18
    28ca:	19 c0       	rjmp	.+50     	; 0x28fe <vfprintf+0xe6>
    28cc:	36 fe       	sbrs	r3, 6
    28ce:	06 c0       	rjmp	.+12     	; 0x28dc <vfprintf+0xc4>
    28d0:	8a e0       	ldi	r24, 0x0A	; 10
    28d2:	98 9e       	mul	r9, r24
    28d4:	20 0d       	add	r18, r0
    28d6:	11 24       	eor	r1, r1
    28d8:	92 2e       	mov	r9, r18
    28da:	11 c0       	rjmp	.+34     	; 0x28fe <vfprintf+0xe6>
    28dc:	ea e0       	ldi	r30, 0x0A	; 10
    28de:	2e 9e       	mul	r2, r30
    28e0:	20 0d       	add	r18, r0
    28e2:	11 24       	eor	r1, r1
    28e4:	22 2e       	mov	r2, r18
    28e6:	f3 2d       	mov	r31, r3
    28e8:	f0 62       	ori	r31, 0x20	; 32
    28ea:	3f 2e       	mov	r3, r31
    28ec:	08 c0       	rjmp	.+16     	; 0x28fe <vfprintf+0xe6>
    28ee:	8c 36       	cpi	r24, 0x6C	; 108
    28f0:	21 f4       	brne	.+8      	; 0x28fa <vfprintf+0xe2>
    28f2:	83 2d       	mov	r24, r3
    28f4:	80 68       	ori	r24, 0x80	; 128
    28f6:	38 2e       	mov	r3, r24
    28f8:	02 c0       	rjmp	.+4      	; 0x28fe <vfprintf+0xe6>
    28fa:	88 36       	cpi	r24, 0x68	; 104
    28fc:	41 f4       	brne	.+16     	; 0x290e <vfprintf+0xf6>
    28fe:	f7 01       	movw	r30, r14
    2900:	93 fd       	sbrc	r25, 3
    2902:	85 91       	lpm	r24, Z+
    2904:	93 ff       	sbrs	r25, 3
    2906:	81 91       	ld	r24, Z+
    2908:	7f 01       	movw	r14, r30
    290a:	81 11       	cpse	r24, r1
    290c:	b3 cf       	rjmp	.-154    	; 0x2874 <vfprintf+0x5c>
    290e:	98 2f       	mov	r25, r24
    2910:	9f 7d       	andi	r25, 0xDF	; 223
    2912:	95 54       	subi	r25, 0x45	; 69
    2914:	93 30       	cpi	r25, 0x03	; 3
    2916:	28 f4       	brcc	.+10     	; 0x2922 <vfprintf+0x10a>
    2918:	0c 5f       	subi	r16, 0xFC	; 252
    291a:	1f 4f       	sbci	r17, 0xFF	; 255
    291c:	9f e3       	ldi	r25, 0x3F	; 63
    291e:	99 83       	std	Y+1, r25	; 0x01
    2920:	0d c0       	rjmp	.+26     	; 0x293c <vfprintf+0x124>
    2922:	83 36       	cpi	r24, 0x63	; 99
    2924:	31 f0       	breq	.+12     	; 0x2932 <vfprintf+0x11a>
    2926:	83 37       	cpi	r24, 0x73	; 115
    2928:	71 f0       	breq	.+28     	; 0x2946 <vfprintf+0x12e>
    292a:	83 35       	cpi	r24, 0x53	; 83
    292c:	09 f0       	breq	.+2      	; 0x2930 <vfprintf+0x118>
    292e:	59 c0       	rjmp	.+178    	; 0x29e2 <vfprintf+0x1ca>
    2930:	21 c0       	rjmp	.+66     	; 0x2974 <vfprintf+0x15c>
    2932:	f8 01       	movw	r30, r16
    2934:	80 81       	ld	r24, Z
    2936:	89 83       	std	Y+1, r24	; 0x01
    2938:	0e 5f       	subi	r16, 0xFE	; 254
    293a:	1f 4f       	sbci	r17, 0xFF	; 255
    293c:	88 24       	eor	r8, r8
    293e:	83 94       	inc	r8
    2940:	91 2c       	mov	r9, r1
    2942:	53 01       	movw	r10, r6
    2944:	13 c0       	rjmp	.+38     	; 0x296c <vfprintf+0x154>
    2946:	28 01       	movw	r4, r16
    2948:	f2 e0       	ldi	r31, 0x02	; 2
    294a:	4f 0e       	add	r4, r31
    294c:	51 1c       	adc	r5, r1
    294e:	f8 01       	movw	r30, r16
    2950:	a0 80       	ld	r10, Z
    2952:	b1 80       	ldd	r11, Z+1	; 0x01
    2954:	36 fe       	sbrs	r3, 6
    2956:	03 c0       	rjmp	.+6      	; 0x295e <vfprintf+0x146>
    2958:	69 2d       	mov	r22, r9
    295a:	70 e0       	ldi	r23, 0x00	; 0
    295c:	02 c0       	rjmp	.+4      	; 0x2962 <vfprintf+0x14a>
    295e:	6f ef       	ldi	r22, 0xFF	; 255
    2960:	7f ef       	ldi	r23, 0xFF	; 255
    2962:	c5 01       	movw	r24, r10
    2964:	0e 94 1b 16 	call	0x2c36	; 0x2c36 <strnlen>
    2968:	4c 01       	movw	r8, r24
    296a:	82 01       	movw	r16, r4
    296c:	f3 2d       	mov	r31, r3
    296e:	ff 77       	andi	r31, 0x7F	; 127
    2970:	3f 2e       	mov	r3, r31
    2972:	16 c0       	rjmp	.+44     	; 0x29a0 <vfprintf+0x188>
    2974:	28 01       	movw	r4, r16
    2976:	22 e0       	ldi	r18, 0x02	; 2
    2978:	42 0e       	add	r4, r18
    297a:	51 1c       	adc	r5, r1
    297c:	f8 01       	movw	r30, r16
    297e:	a0 80       	ld	r10, Z
    2980:	b1 80       	ldd	r11, Z+1	; 0x01
    2982:	36 fe       	sbrs	r3, 6
    2984:	03 c0       	rjmp	.+6      	; 0x298c <vfprintf+0x174>
    2986:	69 2d       	mov	r22, r9
    2988:	70 e0       	ldi	r23, 0x00	; 0
    298a:	02 c0       	rjmp	.+4      	; 0x2990 <vfprintf+0x178>
    298c:	6f ef       	ldi	r22, 0xFF	; 255
    298e:	7f ef       	ldi	r23, 0xFF	; 255
    2990:	c5 01       	movw	r24, r10
    2992:	0e 94 09 16 	call	0x2c12	; 0x2c12 <strnlen_P>
    2996:	4c 01       	movw	r8, r24
    2998:	f3 2d       	mov	r31, r3
    299a:	f0 68       	ori	r31, 0x80	; 128
    299c:	3f 2e       	mov	r3, r31
    299e:	82 01       	movw	r16, r4
    29a0:	33 fc       	sbrc	r3, 3
    29a2:	1b c0       	rjmp	.+54     	; 0x29da <vfprintf+0x1c2>
    29a4:	82 2d       	mov	r24, r2
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	88 16       	cp	r8, r24
    29aa:	99 06       	cpc	r9, r25
    29ac:	b0 f4       	brcc	.+44     	; 0x29da <vfprintf+0x1c2>
    29ae:	b6 01       	movw	r22, r12
    29b0:	80 e2       	ldi	r24, 0x20	; 32
    29b2:	90 e0       	ldi	r25, 0x00	; 0
    29b4:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    29b8:	2a 94       	dec	r2
    29ba:	f4 cf       	rjmp	.-24     	; 0x29a4 <vfprintf+0x18c>
    29bc:	f5 01       	movw	r30, r10
    29be:	37 fc       	sbrc	r3, 7
    29c0:	85 91       	lpm	r24, Z+
    29c2:	37 fe       	sbrs	r3, 7
    29c4:	81 91       	ld	r24, Z+
    29c6:	5f 01       	movw	r10, r30
    29c8:	b6 01       	movw	r22, r12
    29ca:	90 e0       	ldi	r25, 0x00	; 0
    29cc:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    29d0:	21 10       	cpse	r2, r1
    29d2:	2a 94       	dec	r2
    29d4:	21 e0       	ldi	r18, 0x01	; 1
    29d6:	82 1a       	sub	r8, r18
    29d8:	91 08       	sbc	r9, r1
    29da:	81 14       	cp	r8, r1
    29dc:	91 04       	cpc	r9, r1
    29de:	71 f7       	brne	.-36     	; 0x29bc <vfprintf+0x1a4>
    29e0:	e8 c0       	rjmp	.+464    	; 0x2bb2 <vfprintf+0x39a>
    29e2:	84 36       	cpi	r24, 0x64	; 100
    29e4:	11 f0       	breq	.+4      	; 0x29ea <vfprintf+0x1d2>
    29e6:	89 36       	cpi	r24, 0x69	; 105
    29e8:	41 f5       	brne	.+80     	; 0x2a3a <vfprintf+0x222>
    29ea:	f8 01       	movw	r30, r16
    29ec:	37 fe       	sbrs	r3, 7
    29ee:	07 c0       	rjmp	.+14     	; 0x29fe <vfprintf+0x1e6>
    29f0:	60 81       	ld	r22, Z
    29f2:	71 81       	ldd	r23, Z+1	; 0x01
    29f4:	82 81       	ldd	r24, Z+2	; 0x02
    29f6:	93 81       	ldd	r25, Z+3	; 0x03
    29f8:	0c 5f       	subi	r16, 0xFC	; 252
    29fa:	1f 4f       	sbci	r17, 0xFF	; 255
    29fc:	08 c0       	rjmp	.+16     	; 0x2a0e <vfprintf+0x1f6>
    29fe:	60 81       	ld	r22, Z
    2a00:	71 81       	ldd	r23, Z+1	; 0x01
    2a02:	07 2e       	mov	r0, r23
    2a04:	00 0c       	add	r0, r0
    2a06:	88 0b       	sbc	r24, r24
    2a08:	99 0b       	sbc	r25, r25
    2a0a:	0e 5f       	subi	r16, 0xFE	; 254
    2a0c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a0e:	f3 2d       	mov	r31, r3
    2a10:	ff 76       	andi	r31, 0x6F	; 111
    2a12:	3f 2e       	mov	r3, r31
    2a14:	97 ff       	sbrs	r25, 7
    2a16:	09 c0       	rjmp	.+18     	; 0x2a2a <vfprintf+0x212>
    2a18:	90 95       	com	r25
    2a1a:	80 95       	com	r24
    2a1c:	70 95       	com	r23
    2a1e:	61 95       	neg	r22
    2a20:	7f 4f       	sbci	r23, 0xFF	; 255
    2a22:	8f 4f       	sbci	r24, 0xFF	; 255
    2a24:	9f 4f       	sbci	r25, 0xFF	; 255
    2a26:	f0 68       	ori	r31, 0x80	; 128
    2a28:	3f 2e       	mov	r3, r31
    2a2a:	2a e0       	ldi	r18, 0x0A	; 10
    2a2c:	30 e0       	ldi	r19, 0x00	; 0
    2a2e:	a3 01       	movw	r20, r6
    2a30:	0e 94 62 16 	call	0x2cc4	; 0x2cc4 <__ultoa_invert>
    2a34:	88 2e       	mov	r8, r24
    2a36:	86 18       	sub	r8, r6
    2a38:	45 c0       	rjmp	.+138    	; 0x2ac4 <vfprintf+0x2ac>
    2a3a:	85 37       	cpi	r24, 0x75	; 117
    2a3c:	31 f4       	brne	.+12     	; 0x2a4a <vfprintf+0x232>
    2a3e:	23 2d       	mov	r18, r3
    2a40:	2f 7e       	andi	r18, 0xEF	; 239
    2a42:	b2 2e       	mov	r11, r18
    2a44:	2a e0       	ldi	r18, 0x0A	; 10
    2a46:	30 e0       	ldi	r19, 0x00	; 0
    2a48:	25 c0       	rjmp	.+74     	; 0x2a94 <vfprintf+0x27c>
    2a4a:	93 2d       	mov	r25, r3
    2a4c:	99 7f       	andi	r25, 0xF9	; 249
    2a4e:	b9 2e       	mov	r11, r25
    2a50:	8f 36       	cpi	r24, 0x6F	; 111
    2a52:	c1 f0       	breq	.+48     	; 0x2a84 <vfprintf+0x26c>
    2a54:	18 f4       	brcc	.+6      	; 0x2a5c <vfprintf+0x244>
    2a56:	88 35       	cpi	r24, 0x58	; 88
    2a58:	79 f0       	breq	.+30     	; 0x2a78 <vfprintf+0x260>
    2a5a:	b5 c0       	rjmp	.+362    	; 0x2bc6 <vfprintf+0x3ae>
    2a5c:	80 37       	cpi	r24, 0x70	; 112
    2a5e:	19 f0       	breq	.+6      	; 0x2a66 <vfprintf+0x24e>
    2a60:	88 37       	cpi	r24, 0x78	; 120
    2a62:	21 f0       	breq	.+8      	; 0x2a6c <vfprintf+0x254>
    2a64:	b0 c0       	rjmp	.+352    	; 0x2bc6 <vfprintf+0x3ae>
    2a66:	e9 2f       	mov	r30, r25
    2a68:	e0 61       	ori	r30, 0x10	; 16
    2a6a:	be 2e       	mov	r11, r30
    2a6c:	b4 fe       	sbrs	r11, 4
    2a6e:	0d c0       	rjmp	.+26     	; 0x2a8a <vfprintf+0x272>
    2a70:	fb 2d       	mov	r31, r11
    2a72:	f4 60       	ori	r31, 0x04	; 4
    2a74:	bf 2e       	mov	r11, r31
    2a76:	09 c0       	rjmp	.+18     	; 0x2a8a <vfprintf+0x272>
    2a78:	34 fe       	sbrs	r3, 4
    2a7a:	0a c0       	rjmp	.+20     	; 0x2a90 <vfprintf+0x278>
    2a7c:	29 2f       	mov	r18, r25
    2a7e:	26 60       	ori	r18, 0x06	; 6
    2a80:	b2 2e       	mov	r11, r18
    2a82:	06 c0       	rjmp	.+12     	; 0x2a90 <vfprintf+0x278>
    2a84:	28 e0       	ldi	r18, 0x08	; 8
    2a86:	30 e0       	ldi	r19, 0x00	; 0
    2a88:	05 c0       	rjmp	.+10     	; 0x2a94 <vfprintf+0x27c>
    2a8a:	20 e1       	ldi	r18, 0x10	; 16
    2a8c:	30 e0       	ldi	r19, 0x00	; 0
    2a8e:	02 c0       	rjmp	.+4      	; 0x2a94 <vfprintf+0x27c>
    2a90:	20 e1       	ldi	r18, 0x10	; 16
    2a92:	32 e0       	ldi	r19, 0x02	; 2
    2a94:	f8 01       	movw	r30, r16
    2a96:	b7 fe       	sbrs	r11, 7
    2a98:	07 c0       	rjmp	.+14     	; 0x2aa8 <vfprintf+0x290>
    2a9a:	60 81       	ld	r22, Z
    2a9c:	71 81       	ldd	r23, Z+1	; 0x01
    2a9e:	82 81       	ldd	r24, Z+2	; 0x02
    2aa0:	93 81       	ldd	r25, Z+3	; 0x03
    2aa2:	0c 5f       	subi	r16, 0xFC	; 252
    2aa4:	1f 4f       	sbci	r17, 0xFF	; 255
    2aa6:	06 c0       	rjmp	.+12     	; 0x2ab4 <vfprintf+0x29c>
    2aa8:	60 81       	ld	r22, Z
    2aaa:	71 81       	ldd	r23, Z+1	; 0x01
    2aac:	80 e0       	ldi	r24, 0x00	; 0
    2aae:	90 e0       	ldi	r25, 0x00	; 0
    2ab0:	0e 5f       	subi	r16, 0xFE	; 254
    2ab2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab4:	a3 01       	movw	r20, r6
    2ab6:	0e 94 62 16 	call	0x2cc4	; 0x2cc4 <__ultoa_invert>
    2aba:	88 2e       	mov	r8, r24
    2abc:	86 18       	sub	r8, r6
    2abe:	fb 2d       	mov	r31, r11
    2ac0:	ff 77       	andi	r31, 0x7F	; 127
    2ac2:	3f 2e       	mov	r3, r31
    2ac4:	36 fe       	sbrs	r3, 6
    2ac6:	0d c0       	rjmp	.+26     	; 0x2ae2 <vfprintf+0x2ca>
    2ac8:	23 2d       	mov	r18, r3
    2aca:	2e 7f       	andi	r18, 0xFE	; 254
    2acc:	a2 2e       	mov	r10, r18
    2ace:	89 14       	cp	r8, r9
    2ad0:	58 f4       	brcc	.+22     	; 0x2ae8 <vfprintf+0x2d0>
    2ad2:	34 fe       	sbrs	r3, 4
    2ad4:	0b c0       	rjmp	.+22     	; 0x2aec <vfprintf+0x2d4>
    2ad6:	32 fc       	sbrc	r3, 2
    2ad8:	09 c0       	rjmp	.+18     	; 0x2aec <vfprintf+0x2d4>
    2ada:	83 2d       	mov	r24, r3
    2adc:	8e 7e       	andi	r24, 0xEE	; 238
    2ade:	a8 2e       	mov	r10, r24
    2ae0:	05 c0       	rjmp	.+10     	; 0x2aec <vfprintf+0x2d4>
    2ae2:	b8 2c       	mov	r11, r8
    2ae4:	a3 2c       	mov	r10, r3
    2ae6:	03 c0       	rjmp	.+6      	; 0x2aee <vfprintf+0x2d6>
    2ae8:	b8 2c       	mov	r11, r8
    2aea:	01 c0       	rjmp	.+2      	; 0x2aee <vfprintf+0x2d6>
    2aec:	b9 2c       	mov	r11, r9
    2aee:	a4 fe       	sbrs	r10, 4
    2af0:	0f c0       	rjmp	.+30     	; 0x2b10 <vfprintf+0x2f8>
    2af2:	fe 01       	movw	r30, r28
    2af4:	e8 0d       	add	r30, r8
    2af6:	f1 1d       	adc	r31, r1
    2af8:	80 81       	ld	r24, Z
    2afa:	80 33       	cpi	r24, 0x30	; 48
    2afc:	21 f4       	brne	.+8      	; 0x2b06 <vfprintf+0x2ee>
    2afe:	9a 2d       	mov	r25, r10
    2b00:	99 7e       	andi	r25, 0xE9	; 233
    2b02:	a9 2e       	mov	r10, r25
    2b04:	09 c0       	rjmp	.+18     	; 0x2b18 <vfprintf+0x300>
    2b06:	a2 fe       	sbrs	r10, 2
    2b08:	06 c0       	rjmp	.+12     	; 0x2b16 <vfprintf+0x2fe>
    2b0a:	b3 94       	inc	r11
    2b0c:	b3 94       	inc	r11
    2b0e:	04 c0       	rjmp	.+8      	; 0x2b18 <vfprintf+0x300>
    2b10:	8a 2d       	mov	r24, r10
    2b12:	86 78       	andi	r24, 0x86	; 134
    2b14:	09 f0       	breq	.+2      	; 0x2b18 <vfprintf+0x300>
    2b16:	b3 94       	inc	r11
    2b18:	a3 fc       	sbrc	r10, 3
    2b1a:	11 c0       	rjmp	.+34     	; 0x2b3e <vfprintf+0x326>
    2b1c:	a0 fe       	sbrs	r10, 0
    2b1e:	06 c0       	rjmp	.+12     	; 0x2b2c <vfprintf+0x314>
    2b20:	b2 14       	cp	r11, r2
    2b22:	88 f4       	brcc	.+34     	; 0x2b46 <vfprintf+0x32e>
    2b24:	28 0c       	add	r2, r8
    2b26:	92 2c       	mov	r9, r2
    2b28:	9b 18       	sub	r9, r11
    2b2a:	0e c0       	rjmp	.+28     	; 0x2b48 <vfprintf+0x330>
    2b2c:	b2 14       	cp	r11, r2
    2b2e:	60 f4       	brcc	.+24     	; 0x2b48 <vfprintf+0x330>
    2b30:	b6 01       	movw	r22, r12
    2b32:	80 e2       	ldi	r24, 0x20	; 32
    2b34:	90 e0       	ldi	r25, 0x00	; 0
    2b36:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    2b3a:	b3 94       	inc	r11
    2b3c:	f7 cf       	rjmp	.-18     	; 0x2b2c <vfprintf+0x314>
    2b3e:	b2 14       	cp	r11, r2
    2b40:	18 f4       	brcc	.+6      	; 0x2b48 <vfprintf+0x330>
    2b42:	2b 18       	sub	r2, r11
    2b44:	02 c0       	rjmp	.+4      	; 0x2b4a <vfprintf+0x332>
    2b46:	98 2c       	mov	r9, r8
    2b48:	21 2c       	mov	r2, r1
    2b4a:	a4 fe       	sbrs	r10, 4
    2b4c:	10 c0       	rjmp	.+32     	; 0x2b6e <vfprintf+0x356>
    2b4e:	b6 01       	movw	r22, r12
    2b50:	80 e3       	ldi	r24, 0x30	; 48
    2b52:	90 e0       	ldi	r25, 0x00	; 0
    2b54:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    2b58:	a2 fe       	sbrs	r10, 2
    2b5a:	17 c0       	rjmp	.+46     	; 0x2b8a <vfprintf+0x372>
    2b5c:	a1 fc       	sbrc	r10, 1
    2b5e:	03 c0       	rjmp	.+6      	; 0x2b66 <vfprintf+0x34e>
    2b60:	88 e7       	ldi	r24, 0x78	; 120
    2b62:	90 e0       	ldi	r25, 0x00	; 0
    2b64:	02 c0       	rjmp	.+4      	; 0x2b6a <vfprintf+0x352>
    2b66:	88 e5       	ldi	r24, 0x58	; 88
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	b6 01       	movw	r22, r12
    2b6c:	0c c0       	rjmp	.+24     	; 0x2b86 <vfprintf+0x36e>
    2b6e:	8a 2d       	mov	r24, r10
    2b70:	86 78       	andi	r24, 0x86	; 134
    2b72:	59 f0       	breq	.+22     	; 0x2b8a <vfprintf+0x372>
    2b74:	a1 fe       	sbrs	r10, 1
    2b76:	02 c0       	rjmp	.+4      	; 0x2b7c <vfprintf+0x364>
    2b78:	8b e2       	ldi	r24, 0x2B	; 43
    2b7a:	01 c0       	rjmp	.+2      	; 0x2b7e <vfprintf+0x366>
    2b7c:	80 e2       	ldi	r24, 0x20	; 32
    2b7e:	a7 fc       	sbrc	r10, 7
    2b80:	8d e2       	ldi	r24, 0x2D	; 45
    2b82:	b6 01       	movw	r22, r12
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    2b8a:	89 14       	cp	r8, r9
    2b8c:	38 f4       	brcc	.+14     	; 0x2b9c <vfprintf+0x384>
    2b8e:	b6 01       	movw	r22, r12
    2b90:	80 e3       	ldi	r24, 0x30	; 48
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    2b98:	9a 94       	dec	r9
    2b9a:	f7 cf       	rjmp	.-18     	; 0x2b8a <vfprintf+0x372>
    2b9c:	8a 94       	dec	r8
    2b9e:	f3 01       	movw	r30, r6
    2ba0:	e8 0d       	add	r30, r8
    2ba2:	f1 1d       	adc	r31, r1
    2ba4:	80 81       	ld	r24, Z
    2ba6:	b6 01       	movw	r22, r12
    2ba8:	90 e0       	ldi	r25, 0x00	; 0
    2baa:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    2bae:	81 10       	cpse	r8, r1
    2bb0:	f5 cf       	rjmp	.-22     	; 0x2b9c <vfprintf+0x384>
    2bb2:	22 20       	and	r2, r2
    2bb4:	09 f4       	brne	.+2      	; 0x2bb8 <vfprintf+0x3a0>
    2bb6:	42 ce       	rjmp	.-892    	; 0x283c <vfprintf+0x24>
    2bb8:	b6 01       	movw	r22, r12
    2bba:	80 e2       	ldi	r24, 0x20	; 32
    2bbc:	90 e0       	ldi	r25, 0x00	; 0
    2bbe:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <fputc>
    2bc2:	2a 94       	dec	r2
    2bc4:	f6 cf       	rjmp	.-20     	; 0x2bb2 <vfprintf+0x39a>
    2bc6:	f6 01       	movw	r30, r12
    2bc8:	86 81       	ldd	r24, Z+6	; 0x06
    2bca:	97 81       	ldd	r25, Z+7	; 0x07
    2bcc:	02 c0       	rjmp	.+4      	; 0x2bd2 <vfprintf+0x3ba>
    2bce:	8f ef       	ldi	r24, 0xFF	; 255
    2bd0:	9f ef       	ldi	r25, 0xFF	; 255
    2bd2:	2b 96       	adiw	r28, 0x0b	; 11
    2bd4:	e2 e1       	ldi	r30, 0x12	; 18
    2bd6:	0c 94 dc 16 	jmp	0x2db8	; 0x2db8 <__epilogue_restores__>

00002bda <calloc>:
    2bda:	0f 93       	push	r16
    2bdc:	1f 93       	push	r17
    2bde:	cf 93       	push	r28
    2be0:	df 93       	push	r29
    2be2:	86 9f       	mul	r24, r22
    2be4:	80 01       	movw	r16, r0
    2be6:	87 9f       	mul	r24, r23
    2be8:	10 0d       	add	r17, r0
    2bea:	96 9f       	mul	r25, r22
    2bec:	10 0d       	add	r17, r0
    2bee:	11 24       	eor	r1, r1
    2bf0:	c8 01       	movw	r24, r16
    2bf2:	0e 94 a9 11 	call	0x2352	; 0x2352 <malloc>
    2bf6:	ec 01       	movw	r28, r24
    2bf8:	00 97       	sbiw	r24, 0x00	; 0
    2bfa:	29 f0       	breq	.+10     	; 0x2c06 <calloc+0x2c>
    2bfc:	a8 01       	movw	r20, r16
    2bfe:	60 e0       	ldi	r22, 0x00	; 0
    2c00:	70 e0       	ldi	r23, 0x00	; 0
    2c02:	0e 94 14 16 	call	0x2c28	; 0x2c28 <memset>
    2c06:	ce 01       	movw	r24, r28
    2c08:	df 91       	pop	r29
    2c0a:	cf 91       	pop	r28
    2c0c:	1f 91       	pop	r17
    2c0e:	0f 91       	pop	r16
    2c10:	08 95       	ret

00002c12 <strnlen_P>:
    2c12:	fc 01       	movw	r30, r24
    2c14:	05 90       	lpm	r0, Z+
    2c16:	61 50       	subi	r22, 0x01	; 1
    2c18:	70 40       	sbci	r23, 0x00	; 0
    2c1a:	01 10       	cpse	r0, r1
    2c1c:	d8 f7       	brcc	.-10     	; 0x2c14 <strnlen_P+0x2>
    2c1e:	80 95       	com	r24
    2c20:	90 95       	com	r25
    2c22:	8e 0f       	add	r24, r30
    2c24:	9f 1f       	adc	r25, r31
    2c26:	08 95       	ret

00002c28 <memset>:
    2c28:	dc 01       	movw	r26, r24
    2c2a:	01 c0       	rjmp	.+2      	; 0x2c2e <memset+0x6>
    2c2c:	6d 93       	st	X+, r22
    2c2e:	41 50       	subi	r20, 0x01	; 1
    2c30:	50 40       	sbci	r21, 0x00	; 0
    2c32:	e0 f7       	brcc	.-8      	; 0x2c2c <memset+0x4>
    2c34:	08 95       	ret

00002c36 <strnlen>:
    2c36:	fc 01       	movw	r30, r24
    2c38:	61 50       	subi	r22, 0x01	; 1
    2c3a:	70 40       	sbci	r23, 0x00	; 0
    2c3c:	01 90       	ld	r0, Z+
    2c3e:	01 10       	cpse	r0, r1
    2c40:	d8 f7       	brcc	.-10     	; 0x2c38 <strnlen+0x2>
    2c42:	80 95       	com	r24
    2c44:	90 95       	com	r25
    2c46:	8e 0f       	add	r24, r30
    2c48:	9f 1f       	adc	r25, r31
    2c4a:	08 95       	ret

00002c4c <fputc>:
    2c4c:	0f 93       	push	r16
    2c4e:	1f 93       	push	r17
    2c50:	cf 93       	push	r28
    2c52:	df 93       	push	r29
    2c54:	fb 01       	movw	r30, r22
    2c56:	23 81       	ldd	r18, Z+3	; 0x03
    2c58:	21 fd       	sbrc	r18, 1
    2c5a:	03 c0       	rjmp	.+6      	; 0x2c62 <fputc+0x16>
    2c5c:	8f ef       	ldi	r24, 0xFF	; 255
    2c5e:	9f ef       	ldi	r25, 0xFF	; 255
    2c60:	2c c0       	rjmp	.+88     	; 0x2cba <fputc+0x6e>
    2c62:	22 ff       	sbrs	r18, 2
    2c64:	16 c0       	rjmp	.+44     	; 0x2c92 <fputc+0x46>
    2c66:	46 81       	ldd	r20, Z+6	; 0x06
    2c68:	57 81       	ldd	r21, Z+7	; 0x07
    2c6a:	24 81       	ldd	r18, Z+4	; 0x04
    2c6c:	35 81       	ldd	r19, Z+5	; 0x05
    2c6e:	42 17       	cp	r20, r18
    2c70:	53 07       	cpc	r21, r19
    2c72:	44 f4       	brge	.+16     	; 0x2c84 <fputc+0x38>
    2c74:	a0 81       	ld	r26, Z
    2c76:	b1 81       	ldd	r27, Z+1	; 0x01
    2c78:	9d 01       	movw	r18, r26
    2c7a:	2f 5f       	subi	r18, 0xFF	; 255
    2c7c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c7e:	31 83       	std	Z+1, r19	; 0x01
    2c80:	20 83       	st	Z, r18
    2c82:	8c 93       	st	X, r24
    2c84:	26 81       	ldd	r18, Z+6	; 0x06
    2c86:	37 81       	ldd	r19, Z+7	; 0x07
    2c88:	2f 5f       	subi	r18, 0xFF	; 255
    2c8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2c8c:	37 83       	std	Z+7, r19	; 0x07
    2c8e:	26 83       	std	Z+6, r18	; 0x06
    2c90:	14 c0       	rjmp	.+40     	; 0x2cba <fputc+0x6e>
    2c92:	8b 01       	movw	r16, r22
    2c94:	ec 01       	movw	r28, r24
    2c96:	fb 01       	movw	r30, r22
    2c98:	00 84       	ldd	r0, Z+8	; 0x08
    2c9a:	f1 85       	ldd	r31, Z+9	; 0x09
    2c9c:	e0 2d       	mov	r30, r0
    2c9e:	09 95       	icall
    2ca0:	89 2b       	or	r24, r25
    2ca2:	e1 f6       	brne	.-72     	; 0x2c5c <fputc+0x10>
    2ca4:	d8 01       	movw	r26, r16
    2ca6:	16 96       	adiw	r26, 0x06	; 6
    2ca8:	8d 91       	ld	r24, X+
    2caa:	9c 91       	ld	r25, X
    2cac:	17 97       	sbiw	r26, 0x07	; 7
    2cae:	01 96       	adiw	r24, 0x01	; 1
    2cb0:	17 96       	adiw	r26, 0x07	; 7
    2cb2:	9c 93       	st	X, r25
    2cb4:	8e 93       	st	-X, r24
    2cb6:	16 97       	sbiw	r26, 0x06	; 6
    2cb8:	ce 01       	movw	r24, r28
    2cba:	df 91       	pop	r29
    2cbc:	cf 91       	pop	r28
    2cbe:	1f 91       	pop	r17
    2cc0:	0f 91       	pop	r16
    2cc2:	08 95       	ret

00002cc4 <__ultoa_invert>:
    2cc4:	fa 01       	movw	r30, r20
    2cc6:	aa 27       	eor	r26, r26
    2cc8:	28 30       	cpi	r18, 0x08	; 8
    2cca:	51 f1       	breq	.+84     	; 0x2d20 <__ultoa_invert+0x5c>
    2ccc:	20 31       	cpi	r18, 0x10	; 16
    2cce:	81 f1       	breq	.+96     	; 0x2d30 <__ultoa_invert+0x6c>
    2cd0:	e8 94       	clt
    2cd2:	6f 93       	push	r22
    2cd4:	6e 7f       	andi	r22, 0xFE	; 254
    2cd6:	6e 5f       	subi	r22, 0xFE	; 254
    2cd8:	7f 4f       	sbci	r23, 0xFF	; 255
    2cda:	8f 4f       	sbci	r24, 0xFF	; 255
    2cdc:	9f 4f       	sbci	r25, 0xFF	; 255
    2cde:	af 4f       	sbci	r26, 0xFF	; 255
    2ce0:	b1 e0       	ldi	r27, 0x01	; 1
    2ce2:	3e d0       	rcall	.+124    	; 0x2d60 <__ultoa_invert+0x9c>
    2ce4:	b4 e0       	ldi	r27, 0x04	; 4
    2ce6:	3c d0       	rcall	.+120    	; 0x2d60 <__ultoa_invert+0x9c>
    2ce8:	67 0f       	add	r22, r23
    2cea:	78 1f       	adc	r23, r24
    2cec:	89 1f       	adc	r24, r25
    2cee:	9a 1f       	adc	r25, r26
    2cf0:	a1 1d       	adc	r26, r1
    2cf2:	68 0f       	add	r22, r24
    2cf4:	79 1f       	adc	r23, r25
    2cf6:	8a 1f       	adc	r24, r26
    2cf8:	91 1d       	adc	r25, r1
    2cfa:	a1 1d       	adc	r26, r1
    2cfc:	6a 0f       	add	r22, r26
    2cfe:	71 1d       	adc	r23, r1
    2d00:	81 1d       	adc	r24, r1
    2d02:	91 1d       	adc	r25, r1
    2d04:	a1 1d       	adc	r26, r1
    2d06:	20 d0       	rcall	.+64     	; 0x2d48 <__ultoa_invert+0x84>
    2d08:	09 f4       	brne	.+2      	; 0x2d0c <__ultoa_invert+0x48>
    2d0a:	68 94       	set
    2d0c:	3f 91       	pop	r19
    2d0e:	2a e0       	ldi	r18, 0x0A	; 10
    2d10:	26 9f       	mul	r18, r22
    2d12:	11 24       	eor	r1, r1
    2d14:	30 19       	sub	r19, r0
    2d16:	30 5d       	subi	r19, 0xD0	; 208
    2d18:	31 93       	st	Z+, r19
    2d1a:	de f6       	brtc	.-74     	; 0x2cd2 <__ultoa_invert+0xe>
    2d1c:	cf 01       	movw	r24, r30
    2d1e:	08 95       	ret
    2d20:	46 2f       	mov	r20, r22
    2d22:	47 70       	andi	r20, 0x07	; 7
    2d24:	40 5d       	subi	r20, 0xD0	; 208
    2d26:	41 93       	st	Z+, r20
    2d28:	b3 e0       	ldi	r27, 0x03	; 3
    2d2a:	0f d0       	rcall	.+30     	; 0x2d4a <__ultoa_invert+0x86>
    2d2c:	c9 f7       	brne	.-14     	; 0x2d20 <__ultoa_invert+0x5c>
    2d2e:	f6 cf       	rjmp	.-20     	; 0x2d1c <__ultoa_invert+0x58>
    2d30:	46 2f       	mov	r20, r22
    2d32:	4f 70       	andi	r20, 0x0F	; 15
    2d34:	40 5d       	subi	r20, 0xD0	; 208
    2d36:	4a 33       	cpi	r20, 0x3A	; 58
    2d38:	18 f0       	brcs	.+6      	; 0x2d40 <__ultoa_invert+0x7c>
    2d3a:	49 5d       	subi	r20, 0xD9	; 217
    2d3c:	31 fd       	sbrc	r19, 1
    2d3e:	40 52       	subi	r20, 0x20	; 32
    2d40:	41 93       	st	Z+, r20
    2d42:	02 d0       	rcall	.+4      	; 0x2d48 <__ultoa_invert+0x84>
    2d44:	a9 f7       	brne	.-22     	; 0x2d30 <__ultoa_invert+0x6c>
    2d46:	ea cf       	rjmp	.-44     	; 0x2d1c <__ultoa_invert+0x58>
    2d48:	b4 e0       	ldi	r27, 0x04	; 4
    2d4a:	a6 95       	lsr	r26
    2d4c:	97 95       	ror	r25
    2d4e:	87 95       	ror	r24
    2d50:	77 95       	ror	r23
    2d52:	67 95       	ror	r22
    2d54:	ba 95       	dec	r27
    2d56:	c9 f7       	brne	.-14     	; 0x2d4a <__ultoa_invert+0x86>
    2d58:	00 97       	sbiw	r24, 0x00	; 0
    2d5a:	61 05       	cpc	r22, r1
    2d5c:	71 05       	cpc	r23, r1
    2d5e:	08 95       	ret
    2d60:	9b 01       	movw	r18, r22
    2d62:	ac 01       	movw	r20, r24
    2d64:	0a 2e       	mov	r0, r26
    2d66:	06 94       	lsr	r0
    2d68:	57 95       	ror	r21
    2d6a:	47 95       	ror	r20
    2d6c:	37 95       	ror	r19
    2d6e:	27 95       	ror	r18
    2d70:	ba 95       	dec	r27
    2d72:	c9 f7       	brne	.-14     	; 0x2d66 <__ultoa_invert+0xa2>
    2d74:	62 0f       	add	r22, r18
    2d76:	73 1f       	adc	r23, r19
    2d78:	84 1f       	adc	r24, r20
    2d7a:	95 1f       	adc	r25, r21
    2d7c:	a0 1d       	adc	r26, r0
    2d7e:	08 95       	ret

00002d80 <__prologue_saves__>:
    2d80:	2f 92       	push	r2
    2d82:	3f 92       	push	r3
    2d84:	4f 92       	push	r4
    2d86:	5f 92       	push	r5
    2d88:	6f 92       	push	r6
    2d8a:	7f 92       	push	r7
    2d8c:	8f 92       	push	r8
    2d8e:	9f 92       	push	r9
    2d90:	af 92       	push	r10
    2d92:	bf 92       	push	r11
    2d94:	cf 92       	push	r12
    2d96:	df 92       	push	r13
    2d98:	ef 92       	push	r14
    2d9a:	ff 92       	push	r15
    2d9c:	0f 93       	push	r16
    2d9e:	1f 93       	push	r17
    2da0:	cf 93       	push	r28
    2da2:	df 93       	push	r29
    2da4:	cd b7       	in	r28, 0x3d	; 61
    2da6:	de b7       	in	r29, 0x3e	; 62
    2da8:	ca 1b       	sub	r28, r26
    2daa:	db 0b       	sbc	r29, r27
    2dac:	0f b6       	in	r0, 0x3f	; 63
    2dae:	f8 94       	cli
    2db0:	de bf       	out	0x3e, r29	; 62
    2db2:	0f be       	out	0x3f, r0	; 63
    2db4:	cd bf       	out	0x3d, r28	; 61
    2db6:	09 94       	ijmp

00002db8 <__epilogue_restores__>:
    2db8:	2a 88       	ldd	r2, Y+18	; 0x12
    2dba:	39 88       	ldd	r3, Y+17	; 0x11
    2dbc:	48 88       	ldd	r4, Y+16	; 0x10
    2dbe:	5f 84       	ldd	r5, Y+15	; 0x0f
    2dc0:	6e 84       	ldd	r6, Y+14	; 0x0e
    2dc2:	7d 84       	ldd	r7, Y+13	; 0x0d
    2dc4:	8c 84       	ldd	r8, Y+12	; 0x0c
    2dc6:	9b 84       	ldd	r9, Y+11	; 0x0b
    2dc8:	aa 84       	ldd	r10, Y+10	; 0x0a
    2dca:	b9 84       	ldd	r11, Y+9	; 0x09
    2dcc:	c8 84       	ldd	r12, Y+8	; 0x08
    2dce:	df 80       	ldd	r13, Y+7	; 0x07
    2dd0:	ee 80       	ldd	r14, Y+6	; 0x06
    2dd2:	fd 80       	ldd	r15, Y+5	; 0x05
    2dd4:	0c 81       	ldd	r16, Y+4	; 0x04
    2dd6:	1b 81       	ldd	r17, Y+3	; 0x03
    2dd8:	aa 81       	ldd	r26, Y+2	; 0x02
    2dda:	b9 81       	ldd	r27, Y+1	; 0x01
    2ddc:	ce 0f       	add	r28, r30
    2dde:	d1 1d       	adc	r29, r1
    2de0:	0f b6       	in	r0, 0x3f	; 63
    2de2:	f8 94       	cli
    2de4:	de bf       	out	0x3e, r29	; 62
    2de6:	0f be       	out	0x3f, r0	; 63
    2de8:	cd bf       	out	0x3d, r28	; 61
    2dea:	ed 01       	movw	r28, r26
    2dec:	08 95       	ret

00002dee <_exit>:
    2dee:	f8 94       	cli

00002df0 <__stop_program>:
    2df0:	ff cf       	rjmp	.-2      	; 0x2df0 <__stop_program>
